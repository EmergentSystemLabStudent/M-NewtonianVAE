Search.setIndex({"docnames": ["control", "index", "models", "modules", "mypython", "mypython.ai", "mypython.ai.torchprob", "mypython.ai.torchprob.distributions", "newtonianvae", "simulation", "tool", "view"], "filenames": ["control.rst", "index.rst", "models.rst", "modules.rst", "mypython.rst", "mypython.ai.rst", "mypython.ai.torchprob.rst", "mypython.ai.torchprob.distributions.rst", "newtonianvae.rst", "simulation.rst", "tool.rst", "view.rst"], "titles": ["control package", "Welcome to Scratch of NewtonianVAE\u2019s documentation!", "models package", "source", "mypython package", "mypython.ai package", "mypython.ai.torchprob package", "mypython.ai.torchprob.distributions package", "newtonianvae package", "simulation package", "tool package", "view package"], "terms": {"main": [0, 3], "index": 1, "modul": [1, 3], "search": 1, "page": 1, "newcommand": 2, "i": [2, 7], "mathbf": 2, "u": 2, "v": 2, "x": [2, 4, 6, 7, 9], "xhat": 2, "hat": 2, "kl": 2, "2": [2, 4, 7], "operatornam": 2, "left": 2, "1": [2, 4, 6, 7], "middl": 2, "right": 2, "class": [2, 4, 5, 7, 9, 10], "abcf": [2, 3], "dim_x": [2, 3], "int": [2, 4, 5, 9, 10], "base": [2, 4, 5, 6, 9, 10], "begin": 2, "arrai": 2, "ll": 2, "A": 2, "mathrm": 2, "diag": 2, "f": 2, "x_": 2, "t": 2, "v_": 2, "u_": 2, "b": [2, 4], "log": [2, 5, 6, 7], "c": [2, 4], "end": [2, 9], "output": [2, 3, 10], "diaga": 2, "diagb": 2, "diagc": 2, "tensor": [2, 4, 6, 7, 9], "shape": [2, 4, 7], "d": [2, 7], "where": [2, 10], "align": 2, "dim": 2, "refer": [2, 7], "paper": 2, "xt": 2, "vt": 2, "ut": 2, "neural": 2, "network": 2, "linear": 2, "activ": 2, "nvae": 2, "fa": 2, "fb": 2, "fc": 2, "forward": [2, 3, 6, 7], "x_tn1": 2, "v_tn1": 2, "u_tn1": 2, "train": [2, 3, 6, 7], "bool": [2, 7, 9, 10], "decod": [2, 3, 6, 7], "std": 2, "0": [2, 4], "normal": [2, 5, 6], "p": [2, 4, 6, 10], "i_t": 2, "mid": 2, "hspace": 2, "5mm": 2, "text": [2, 4], "xhat_": 2, "we": 2, "us": [2, 10], "gaussian": [2, 7], "It": 2, "q": [2, 6], "parametr": 2, "throughout": 2, "x_t": 2, "encod": [2, 3], "dim_middl": 2, "std_function": 2, "callabl": 2, "pxmiddlecat": [2, 3], "x_m1_t": 2, "x_m2_t": 2, "pxhat": [2, 3], "dim_xhat": [2, 3], "xhat_t": 2, "paper\u306b\u4f55\u306e\u8aac\u660e\u3082\u306a\u3044": 2, "comput": [2, 7], "\u03bc": [2, 7], "\u03c3": [2, 7], "n": [2, 4, 7], "from": [2, 7], "cond_var": [2, 6, 7], "transit": [2, 3], "prior": 2, "eq": 2, "9": 2, "mathcal": 2, "delta": 2, "cdot": 2, "v_t": 2, "sigma": [2, 7], "dt": 2, "float": [2, 4, 9, 10], "veloc": [2, 3], "fix_abc": 2, "union": [2, 4, 7, 9, 10], "none": [2, 4, 7, 9, 10], "tupl": [2, 7, 9], "numbertyp": [2, 7], "visualdecoder64": [2, 3], "dim_input": 2, "built": 2, "method": 2, "relu": 2, "type": [2, 4, 10], "object": [2, 4, 5, 9, 10], "input": [2, 4], "_input": 2, "y": [2, 4], "3": 2, "64": 2, "visualencoder64": [2, 3], "dim_output": 2, "_output": 2, "newtonianva": [2, 3], "arg": [2, 4, 9, 10], "kwarg": [2, 3, 4, 10], "newtonianvaebas": [2, 3], "elbo": 2, "formula": [2, 6], "11": 2, "accord": 2, "follow": 2, "sim": 2, "e": [2, 10], "displaystyl": 2, "sum_t": 2, "v_0": 2, "boldsymbol": 2, "x_0": 2, "i_0": 2, "leftarrow": 2, "dure": 2, "evalu": [2, 10], "action": [2, 9, 10], "observ": [2, 9], "batch": 2, "size": [2, 10], "sequenc": 2, "length": 2, "infer": 2, "ad": 2, "an": 2, "addit": 2, "regular": 2, "term": 2, "latent": 2, "space": 2, "newtonianvaecel": [2, 3], "newtonianvaecellbas": [2, 3], "properti": [2, 7, 9, 10], "info": [2, 3], "str": [2, 4, 9, 10], "transition_std": 2, "encoder_dim_middl": 2, "encoder_std_funct": 2, "fals": [2, 4, 5, 10], "inherit": 2, "thi": 2, "should": 2, "store": 2, "variabl": 2, "previou": 2, "time": [2, 10], "intern": 2, "well": 2, "rnncell": 2, "lstmcell": 2, "grucel": 2, "pack": [2, 3], "e_ll": 2, "e_kl": 2, "set": 2, "newtonianvaederiv": [2, 3], "23": 2, "cell": [2, 3], "newtonianvaederivationcel": [2, 3], "dim_pxhat_middl": 2, "pxhat_std_funct": 2, "newtonianvaev2": [2, 3], "newtonianvaev2bas": [2, 3], "implement": 2, "wa": 2, "mr": 2, "ito": 2, "": [2, 10], "opinion": 2, "i_": 2, "The": 2, "initi": 2, "valu": 2, "below": 2, "log_x": 2, "collect": 2, "about": 2, "newtonianvaev2cel": [2, 3], "newtonianvaev2cellbas": [2, 3], "i_tn1": 2, "x_tn2": 2, "newtonianvaev2deriv": [2, 3], "newtonianvaev2derivationcel": [2, 3], "defin": 2, "perform": 2, "everi": 2, "call": 2, "overridden": 2, "all": 2, "subclass": 2, "although": 2, "recip": 2, "pass": 2, "need": 2, "within": 2, "function": [2, 4, 5, 7], "one": 2, "instanc": 2, "afterward": 2, "instead": 2, "sinc": 2, "former": 2, "take": 2, "care": 2, "run": 2, "regist": 2, "hook": 2, "while": 2, "latter": 2, "silent": 2, "ignor": 2, "them": 2, "stepper": [2, 3], "i_t_dec": 2, "reset": [2, 3, 4, 9], "as_sav": [2, 3], "get_newtonianva": [2, 3], "name": [2, 4], "get_newtonianvaecel": [2, 3], "12": 2, "u_t": 2, "sum_": 2, "pi_n": 2, "k_n": 2, "goal": [2, 10], "purepcontrol": [2, 3], "igoal": 2, "alpha": [2, 3, 10], "sampl": 2, "random": 2, "start": [2, 5, 10], "state": 2, "success": 2, "appli": 2, "control": [2, 3], "law": 2, "get_act": [2, 3], "get_action_from_x": [2, 3], "packag": 3, "submodul": 3, "content": 3, "model": [3, 6, 7, 10], "compon": 3, "core": 3, "pcontrol": 3, "mypython": 3, "subpackag": 3, "ai": [3, 4], "torch_util": [3, 4], "util": [3, 4], "error": 3, "check_dir": [3, 4], "check_fil": [3, 4], "plotutil": 3, "axis_aspect_2d": [3, 4], "anim_mod": [3, 4, 10], "cmap": [3, 4], "get_figs": [3, 4], "pyutil": 3, "s2dhm": [3, 4], "s2dhms_str": [3, 4], "termin": 3, "color": [3, 4], "bg_gold": [3, 4], "bg_rgb": [3, 4], "black": [3, 4], "blue": [3, 4], "boldblack": [3, 4], "boldblu": [3, 4], "boldcyan": [3, 4], "boldgreen": [3, 4], "boldmagenta": [3, 4], "boldr": [3, 4], "boldwhit": [3, 4], "boldyellow": [3, 4], "coral": [3, 4], "cyan": [3, 4], "green": [3, 4], "hotpink": [3, 4], "magenta": [3, 4], "orang": [3, 4], "pprint": [3, 4], "print": [3, 4], "purpl": [3, 4], "red": [3, 4], "rgb": [3, 4], "white": [3, 4], "yellow": [3, 4], "prompt": [3, 4], "del_lin": [3, 4], "fit_termin": [3, 4], "print_one_lin": [3, 4], "vision": 3, "bgr2rgb": [3, 4], "chw2hwc": [3, 4], "hwc2chw": [3, 4], "rgb2bgr": [3, 4], "cnn2cv": [3, 4], "cnn2plt": [3, 4], "cv2cnn": [3, 4], "cv2plt": [3, 4], "plt2cnn": [3, 4], "correl": 3, "load": [3, 10], "reconstruct": 3, "show_loss": 3, "simul": [3, 10], "collect_data": 3, "env": 3, "controlsuiteenv": [3, 9], "action_rang": [3, 9], "action_s": [3, 9], "adjust_camera": [3, 9], "close": [3, 9], "observation_s": [3, 9], "render": [3, 9, 10], "sample_random_act": [3, 9], "step": [3, 9, 10], "zeros_act": [3, 9], "controlsuiteenvwrap": [3, 9], "position_wrapp": [3, 9], "img2ob": [3, 9], "obs2img": [3, 9], "postprocess_observ": [3, 9], "preprocess_observation_": [3, 9], "reacher_default2endeffectorpo": [3, 9], "roll_2d": [3, 9], "overrid": 3, "tool": 3, "argset": 3, "cf": [3, 10], "cf_eval": [3, 8, 10], "cf_simenv": [3, 10], "episod": [3, 10], "fix_xmap_s": [3, 10], "goal_img": [3, 10], "path_data": [3, 10], "path_model": [3, 8, 10], "path_result": [3, 10], "path_sav": [3, 10], "position_s": [3, 10], "resum": [3, 10], "save_anim": [3, 10], "watch": [3, 10], "checker": 3, "cuda": [3, 10], "is_same_data": [3, 10], "large_episod": [3, 10], "dataload": 3, "param": 3, "paramsev": [3, 10], "paramssimenv": [3, 10], "backup": [3, 10], "delete_useless_sav": [3, 10], "select_d": [3, 10], "select_weight": [3, 10], "visualhandlerbas": 3, "call_end": [3, 10], "call_end_init": [3, 10], "is_run": [3, 10], "plot": [3, 10], "wait_init": [3, 10], "view": 3, "show_data": 3, "show_model": 3, "train_tensorboard": 3, "train_visdom": 3, "torchprob": [4, 5], "debug": [4, 5], "print_module_param": [4, 5], "reproduc": [4, 5], "batchidx": [4, 5, 10], "path": [4, 10], "extens": 4, "option": [4, 10], "ex": 4, "txt": 4, "ax": 4, "aspect": 4, "ndarrai": [4, 9], "margin": 4, "mode": 4, "fig": 4, "anim_func": 4, "frame": 4, "freeze_cnt": 4, "interv": 4, "33": 4, "save_path": 4, "paramet": 4, "frame_cnt": 4, "return": [4, 9], "http": [4, 6, 7, 9], "qiita": 4, "com": [4, 6, 7, 9], "t0d4_": 4, "item": 4, "0f2b41782a6177d35e65": 4, "millisecond": 4, "rainbow": 4, "revers": 4, "sec": 4, "always_dai": 4, "x1b": 4, "48": 4, "255": 4, "215": 4, "0m": 4, "g": 4, "90m": 4, "94m": 4, "96m": 4, "92m": 4, "95m": 4, "91m": 4, "97m": 4, "93m": 4, "38": 4, "127": 4, "80m": 4, "105": 4, "180m": 4, "165": 4, "sep": 4, "128": 4, "128m": 4, "m": 4, "r": 4, "k": [4, 7], "static": [4, 9], "small_obj": 4, "import": 4, "img_util": 4, "imu": 4, "cv2": 4, "imread": 4, "h": 4, "w": 4, "bgr": 4, "cnn": 4, "float\u306b\u3057\u306a\u3044\u3068cnn\u306f\u53d7\u3051\u5165\u308c\u306a\u3044": 4, "img": 4, "opencv": [4, 10], "read": 4, "conv2d": 4, "torchvis": 4, "transform": 4, "arr": 4, "out": 4, "in_siz": 4, "out_siz": 4, "distribut": [5, 6], "bernoulli": [5, 6], "gmm": [5, 6], "check_dist_model": [5, 6], "kl_normal_norm": [5, 6], "kldiv": [5, 6], "grad": 5, "seed": [5, 9], "1234": 5, "stop": [5, 10], "batch_siz": [5, 10], "cond": [6, 7], "get_dist_param": [6, 7], "loc": [6, 7], "log_p": [6, 7], "rsampl": [6, 7], "scale": [6, 7], "log_bernoulli": [6, 7], "log_gmm": [6, 7], "log_norm": [6, 7], "normal_sampl": [6, 7], "mu_1": 6, "sigma_1": 6, "mu_2": 6, "sigma_2": 6, "ep": [6, 7], "1920928955078125e": [6, 7], "07": [6, 7], "ref": [6, 7, 9, 10], "github": [6, 7, 9], "emit": [6, 7], "variationalrecurrentneuralnetwork": [6, 7], "blob": [6, 7, 9], "0f23c87d11597ecf50ecbbf1dd37429861fd7aca": [6, 7], "py": [6, 7, 9], "l172": 6, "match": 6, "look": 6, "masa": 6, "su": 6, "pixyz": 6, "pyro": 6, "ppl": 6, "cond_vars_k": 7, "self": 7, "\u03b8": 7, "dist": 7, "likelihood": 7, "mu": 7, "bern": 7, "doc": 7, "chainer": 7, "org": 7, "en": 7, "stabl": 7, "gener": 7, "bernoulli_nl": 7, "html": 7, "l181": 7, "mixtur": 7, "\u03c0k": 7, "\u03bck": 7, "\u03c3k": 7, "multivari": 7, "number": [7, 10], "featur": 7, "pi": 7, "ctallec": 7, "world": 7, "master": [7, 9], "mdrnn": 7, "log_pi": 7, "l185": 7, "reparametr": 7, "trick": 7, "kaixhin": 9, "planet": 9, "deepmind": 9, "dm_control": 9, "symbol": 9, "max_episode_length": 9, "action_repeat": 9, "bit_depth": 9, "\u7dba\u9e97\u306a\u307e\u307e\u8868\u793a\u3059\u308b": 9, "action_typ": 9, "position_wrap": 9, "\u5de6\u53f3\u306e\u610f\u5473\u4e0d\u660e\u306a\u661f\u306e\u3042\u3064\u307e\u308a\u307f\u305f\u3044\u306a\u306e\u3092\u6d88\u3059": 9, "posit": [9, 10], "target": 9, "effector": 9, "parser": 10, "argpars": 10, "argumentpars": 10, "requir": 10, "true": 10, "metavar": 10, "\u03b1": 10, "help": 10, "gain": 10, "choic": 10, "freez": 10, "anim": 10, "save": 10, "default": 10, "file": 10, "configur": 10, "common": 10, "environ": 10, "total": 10, "xmap": 10, "imag": 10, "npy": 10, "dir_path": 10, "directori": 10, "data": 10, "exist": 10, "manag": 10, "date": 10, "result": 10, "destin": 10, "store_tru": 10, "learn": 10, "plt": 10, "check": 10, "without": 10, "For": 10, "you": 10, "can": 10, "choos": 10, "matplotlib": 10, "devic": 10, "trained_time_dir": 10, "root": 10, "dtype": 10, "cpu": 10, "torch": 10, "iterabledataset": 10, "_eval": 10, "_simenv": 10, "src_file": 10, "dst_dir": 10, "renam": 10, "model_date_path": 10}, "objects": {"": [[0, 0, 0, "-", "control"], [2, 0, 0, "-", "models"], [4, 0, 0, "-", "mypython"], [8, 0, 0, "-", "newtonianvae"], [9, 0, 0, "-", "simulation"], [10, 0, 0, "-", "tool"], [11, 0, 0, "-", "view"]], "control": [[0, 0, 0, "-", "train"]], "control.train": [[0, 1, 1, "", "main"]], "models": [[2, 0, 0, "-", "component"], [2, 0, 0, "-", "core"], [2, 0, 0, "-", "pcontrol"]], "models.component": [[2, 2, 1, "", "ABCf"], [2, 2, 1, "", "Decoder"], [2, 2, 1, "", "Encoder"], [2, 2, 1, "", "PXmiddleCat"], [2, 2, 1, "", "Pxhat"], [2, 2, 1, "", "Transition"], [2, 2, 1, "", "Velocity"], [2, 2, 1, "", "VisualDecoder64"], [2, 2, 1, "", "VisualEncoder64"]], "models.component.ABCf": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.component.Decoder": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.component.Encoder": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.component.PXmiddleCat": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.component.Pxhat": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.component.Transition": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.component.Velocity": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.component.VisualDecoder64": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.component.VisualEncoder64": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.core": [[2, 2, 1, "", "NewtonianVAE"], [2, 2, 1, "", "NewtonianVAEBase"], [2, 2, 1, "", "NewtonianVAECell"], [2, 2, 1, "", "NewtonianVAECellBase"], [2, 2, 1, "", "NewtonianVAEDerivation"], [2, 2, 1, "", "NewtonianVAEDerivationCell"], [2, 2, 1, "", "NewtonianVAEV2"], [2, 2, 1, "", "NewtonianVAEV2Base"], [2, 2, 1, "", "NewtonianVAEV2Cell"], [2, 2, 1, "", "NewtonianVAEV2CellBase"], [2, 2, 1, "", "NewtonianVAEV2Derivation"], [2, 2, 1, "", "NewtonianVAEV2DerivationCell"], [2, 2, 1, "", "Stepper"], [2, 1, 1, "", "as_save"], [2, 1, 1, "", "get_NewtonianVAE"], [2, 1, 1, "", "get_NewtonianVAECell"]], "models.core.NewtonianVAE": [[2, 4, 1, "", "training"]], "models.core.NewtonianVAEBase": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.core.NewtonianVAECell": [[2, 3, 1, "", "forward"], [2, 5, 1, "", "info"], [2, 4, 1, "", "training"]], "models.core.NewtonianVAECellBase": [[2, 2, 1, "", "Pack"], [2, 5, 1, "", "dim_x"], [2, 5, 1, "", "info"], [2, 4, 1, "", "training"]], "models.core.NewtonianVAEDerivation": [[2, 4, 1, "", "cell"], [2, 4, 1, "", "training"]], "models.core.NewtonianVAEDerivationCell": [[2, 5, 1, "", "dim_xhat"], [2, 3, 1, "", "forward"], [2, 5, 1, "", "info"], [2, 4, 1, "", "training"]], "models.core.NewtonianVAEV2": [[2, 4, 1, "", "training"]], "models.core.NewtonianVAEV2Base": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.core.NewtonianVAEV2Cell": [[2, 3, 1, "", "forward"], [2, 5, 1, "", "info"], [2, 4, 1, "", "training"]], "models.core.NewtonianVAEV2CellBase": [[2, 2, 1, "", "Pack"], [2, 4, 1, "", "training"]], "models.core.NewtonianVAEV2Derivation": [[2, 4, 1, "", "cell"], [2, 4, 1, "", "training"]], "models.core.NewtonianVAEV2DerivationCell": [[2, 5, 1, "", "dim_xhat"], [2, 3, 1, "", "forward"], [2, 5, 1, "", "info"], [2, 4, 1, "", "training"]], "models.core.Stepper": [[2, 2, 1, "", "Pack"], [2, 3, 1, "", "reset"]], "models.pcontrol": [[2, 2, 1, "", "PControl"], [2, 2, 1, "", "PurePControl"]], "models.pcontrol.PControl": [[2, 4, 1, "", "training"]], "models.pcontrol.PurePControl": [[2, 3, 1, "", "get_action"], [2, 3, 1, "", "get_action_from_x"]], "mypython": [[5, 0, 0, "-", "ai"], [4, 0, 0, "-", "error"], [4, 0, 0, "-", "plotutil"], [4, 0, 0, "-", "pyutil"], [4, 0, 0, "-", "terminal"], [4, 0, 0, "-", "vision"]], "mypython.ai": [[5, 0, 0, "-", "torch_util"], [6, 0, 0, "-", "torchprob"], [5, 0, 0, "-", "util"]], "mypython.ai.torch_util": [[5, 1, 1, "", "print_module_params"], [5, 1, 1, "", "reproduce"]], "mypython.ai.torchprob": [[6, 0, 0, "-", "debug"], [7, 0, 0, "-", "distributions"], [6, 0, 0, "-", "functions"]], "mypython.ai.torchprob.debug": [[6, 1, 1, "", "check_dist_model"]], "mypython.ai.torchprob.distributions": [[7, 0, 0, "-", "base"], [7, 0, 0, "-", "bernoulli"], [7, 0, 0, "-", "gmm"], [7, 0, 0, "-", "normal"]], "mypython.ai.torchprob.distributions.base": [[7, 2, 1, "", "Distribution"]], "mypython.ai.torchprob.distributions.base.Distribution": [[7, 3, 1, "", "cond"], [7, 3, 1, "", "decode"], [7, 3, 1, "", "forward"], [7, 3, 1, "", "get_dist_params"], [7, 5, 1, "", "loc"], [7, 3, 1, "", "log_p"], [7, 3, 1, "", "rsample"], [7, 5, 1, "", "scale"], [7, 4, 1, "", "training"]], "mypython.ai.torchprob.distributions.bernoulli": [[7, 2, 1, "", "Bernoulli"], [7, 1, 1, "", "log_bernoulli"]], "mypython.ai.torchprob.distributions.bernoulli.Bernoulli": [[7, 3, 1, "", "cond"], [7, 3, 1, "", "decode"], [7, 3, 1, "", "forward"], [7, 3, 1, "", "get_dist_params"], [7, 5, 1, "", "loc"], [7, 3, 1, "", "log_p"], [7, 5, 1, "", "scale"], [7, 4, 1, "", "training"]], "mypython.ai.torchprob.distributions.gmm": [[7, 2, 1, "", "GMM"], [7, 1, 1, "", "log_gmm"]], "mypython.ai.torchprob.distributions.gmm.GMM": [[7, 3, 1, "", "cond"], [7, 3, 1, "", "forward"], [7, 3, 1, "", "log_p"], [7, 4, 1, "", "training"]], "mypython.ai.torchprob.distributions.normal": [[7, 2, 1, "", "Normal"], [7, 1, 1, "", "log_normal"], [7, 1, 1, "", "normal_sample"]], "mypython.ai.torchprob.distributions.normal.Normal": [[7, 3, 1, "", "cond"], [7, 3, 1, "", "decode"], [7, 3, 1, "", "forward"], [7, 3, 1, "", "get_dist_params"], [7, 5, 1, "", "loc"], [7, 3, 1, "", "log_p"], [7, 3, 1, "", "rsample"], [7, 5, 1, "", "scale"], [7, 4, 1, "", "training"]], "mypython.ai.torchprob.functions": [[6, 1, 1, "", "KL_normal_normal"], [6, 1, 1, "", "KLdiv"], [6, 1, 1, "", "log"]], "mypython.ai.util": [[5, 2, 1, "", "BatchIdx"]], "mypython.error": [[4, 1, 1, "", "check_dir"], [4, 1, 1, "", "check_file"]], "mypython.plotutil": [[4, 1, 1, "", "Axis_aspect_2d"], [4, 1, 1, "", "anim_mode"], [4, 1, 1, "", "cmap"], [4, 1, 1, "", "get_figsize"]], "mypython.pyutil": [[4, 1, 1, "", "s2dhms"], [4, 1, 1, "", "s2dhms_str"]], "mypython.terminal": [[4, 2, 1, "", "Color"], [4, 2, 1, "", "Prompt"]], "mypython.terminal.Color": [[4, 4, 1, "", "bg_gold"], [4, 3, 1, "", "bg_rgb"], [4, 4, 1, "", "black"], [4, 4, 1, "", "blue"], [4, 4, 1, "", "boldblack"], [4, 4, 1, "", "boldblue"], [4, 4, 1, "", "boldcyan"], [4, 4, 1, "", "boldgreen"], [4, 4, 1, "", "boldmagenta"], [4, 4, 1, "", "boldred"], [4, 4, 1, "", "boldwhite"], [4, 4, 1, "", "boldyellow"], [4, 4, 1, "", "coral"], [4, 4, 1, "", "cyan"], [4, 4, 1, "", "green"], [4, 4, 1, "", "hotpink"], [4, 4, 1, "", "magenta"], [4, 4, 1, "", "orange"], [4, 3, 1, "", "pprint"], [4, 3, 1, "", "print"], [4, 4, 1, "", "purple"], [4, 4, 1, "", "red"], [4, 4, 1, "", "reset"], [4, 3, 1, "", "rgb"], [4, 4, 1, "", "white"], [4, 4, 1, "", "yellow"]], "mypython.terminal.Prompt": [[4, 4, 1, "", "del_line"], [4, 3, 1, "", "fit_terminal"], [4, 3, 1, "", "print_one_line"]], "mypython.vision": [[4, 1, 1, "", "BGR2RGB"], [4, 1, 1, "", "CHW2HWC"], [4, 1, 1, "", "HWC2CHW"], [4, 1, 1, "", "RGB2BGR"], [4, 1, 1, "", "cnn2cv"], [4, 1, 1, "", "cnn2plt"], [4, 1, 1, "", "cv2cnn"], [4, 1, 1, "", "cv2plt"], [4, 1, 1, "", "plt2cnn"]], "newtonianvae": [[8, 0, 0, "-", "load"]], "newtonianvae.load": [[8, 1, 1, "", "load"]], "simulation": [[9, 0, 0, "-", "env"]], "simulation.env": [[9, 2, 1, "", "ControlSuiteEnv"], [9, 2, 1, "", "ControlSuiteEnvWrap"], [9, 1, 1, "", "img2obs"], [9, 1, 1, "", "obs2img"], [9, 1, 1, "", "postprocess_observation"], [9, 1, 1, "", "preprocess_observation_"], [9, 1, 1, "", "reacher_default2endeffectorpos"], [9, 1, 1, "", "roll_2d"]], "simulation.env.ControlSuiteEnv": [[9, 5, 1, "", "action_range"], [9, 5, 1, "", "action_size"], [9, 3, 1, "", "adjust_camera"], [9, 3, 1, "", "close"], [9, 5, 1, "", "observation_size"], [9, 3, 1, "", "render"], [9, 3, 1, "", "reset"], [9, 3, 1, "", "sample_random_action"], [9, 3, 1, "", "step"], [9, 3, 1, "", "zeros_action"]], "simulation.env.ControlSuiteEnvWrap": [[9, 3, 1, "", "adjust_camera"], [9, 3, 1, "", "position_wrapper"], [9, 3, 1, "", "step"]], "tool": [[10, 0, 0, "-", "argset"], [10, 0, 0, "-", "checker"], [10, 0, 0, "-", "dataloader"], [10, 0, 0, "-", "params"], [10, 0, 0, "-", "util"], [10, 0, 0, "-", "visualhandlerbase"]], "tool.argset": [[10, 1, 1, "", "alpha"], [10, 1, 1, "", "anim_mode"], [10, 1, 1, "", "cf"], [10, 1, 1, "", "cf_eval"], [10, 1, 1, "", "cf_simenv"], [10, 1, 1, "", "episodes"], [10, 1, 1, "", "fix_xmap_size"], [10, 1, 1, "", "goal_img"], [10, 1, 1, "", "output"], [10, 1, 1, "", "path_data"], [10, 1, 1, "", "path_model"], [10, 1, 1, "", "path_result"], [10, 1, 1, "", "path_save"], [10, 1, 1, "", "position_size"], [10, 1, 1, "", "resume"], [10, 1, 1, "", "save_anim"], [10, 1, 1, "", "steps"], [10, 1, 1, "", "watch"]], "tool.checker": [[10, 1, 1, "", "cuda"], [10, 1, 1, "", "is_same_data"], [10, 1, 1, "", "large_episodes"]], "tool.dataloader": [[10, 2, 1, "", "DataLoader"]], "tool.params": [[10, 2, 1, "", "Params"], [10, 2, 1, "", "ParamsEval"], [10, 2, 1, "", "ParamsSimEnv"]], "tool.params.ParamsEval": [[10, 5, 1, "", "kwargs"]], "tool.params.ParamsSimEnv": [[10, 5, 1, "", "kwargs"]], "tool.util": [[10, 1, 1, "", "backup"], [10, 1, 1, "", "delete_useless_saves"], [10, 1, 1, "", "select_date"], [10, 1, 1, "", "select_weight"]], "tool.visualhandlerbase": [[10, 2, 1, "", "VisualHandlerBase"]], "tool.visualhandlerbase.VisualHandlerBase": [[10, 3, 1, "", "call_end"], [10, 3, 1, "", "call_end_init"], [10, 5, 1, "", "is_running"], [10, 3, 1, "", "plot"], [10, 3, 1, "", "wait_init"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"control": [0, 9], "packag": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11], "submodul": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11], "train": [0, 8], "modul": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11], "content": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11], "welcom": 1, "scratch": 1, "newtonianva": [1, 8], "": 1, "document": 1, "indic": 1, "tabl": 1, "model": 2, "compon": 2, "core": 2, "pcontrol": 2, "sourc": 3, "mypython": [4, 5, 6, 7], "subpackag": [4, 5, 6], "error": 4, "plotutil": 4, "pyutil": 4, "termin": 4, "vision": 4, "ai": [5, 6, 7], "torch_util": 5, "util": [5, 10], "torchprob": [6, 7], "debug": 6, "function": 6, "distribut": 7, "base": 7, "bernoulli": 7, "gmm": 7, "normal": 7, "correl": 8, "load": 8, "reconstruct": 8, "show_loss": 8, "simul": 9, "collect_data": 9, "env": 9, "overrid": 9, "tool": 10, "argset": 10, "checker": 10, "dataload": 10, "param": 10, "visualhandlerbas": 10, "view": 11, "show_data": 11, "show_model": 11, "train_tensorboard": 11, "train_visdom": 11}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"control package": [[0, "control-package"]], "Submodules": [[0, "submodules"], [2, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"]], "control.train module": [[0, "module-control.train"]], "Module contents": [[0, "module-control"], [2, "module-models"], [4, "module-mypython"], [5, "module-mypython.ai"], [6, "module-mypython.ai.torchprob"], [7, "module-mypython.ai.torchprob.distributions"], [8, "module-newtonianvae"], [9, "module-simulation"], [10, "module-tool"], [11, "module-view"]], "Welcome to Scratch of NewtonianVAE\u2019s documentation!": [[1, "welcome-to-scratch-of-newtonianvae-s-documentation"]], "Indices and tables": [[1, "indices-and-tables"]], "models package": [[2, "models-package"]], "models.component module": [[2, "module-models.component"]], "models.core module": [[2, "module-models.core"]], "models.pcontrol module": [[2, "module-models.pcontrol"]], "source": [[3, "source"]], "mypython package": [[4, "mypython-package"]], "Subpackages": [[4, "subpackages"], [5, "subpackages"], [6, "subpackages"]], "mypython.error module": [[4, "module-mypython.error"]], "mypython.plotutil module": [[4, "module-mypython.plotutil"]], "mypython.pyutil module": [[4, "module-mypython.pyutil"]], "mypython.terminal module": [[4, "module-mypython.terminal"]], "mypython.vision module": [[4, "module-mypython.vision"]], "mypython.ai package": [[5, "mypython-ai-package"]], "mypython.ai.torch_util module": [[5, "module-mypython.ai.torch_util"]], "mypython.ai.util module": [[5, "module-mypython.ai.util"]], "mypython.ai.torchprob package": [[6, "mypython-ai-torchprob-package"]], "mypython.ai.torchprob.debug module": [[6, "module-mypython.ai.torchprob.debug"]], "mypython.ai.torchprob.functions module": [[6, "module-mypython.ai.torchprob.functions"]], "mypython.ai.torchprob.distributions package": [[7, "mypython-ai-torchprob-distributions-package"]], "mypython.ai.torchprob.distributions.base module": [[7, "module-mypython.ai.torchprob.distributions.base"]], "mypython.ai.torchprob.distributions.bernoulli module": [[7, "module-mypython.ai.torchprob.distributions.bernoulli"]], "mypython.ai.torchprob.distributions.gmm module": [[7, "module-mypython.ai.torchprob.distributions.gmm"]], "mypython.ai.torchprob.distributions.normal module": [[7, "module-mypython.ai.torchprob.distributions.normal"]], "newtonianvae package": [[8, "newtonianvae-package"]], "newtonianvae.correlation module": [[8, "newtonianvae-correlation-module"]], "newtonianvae.load module": [[8, "module-newtonianvae.load"]], "newtonianvae.reconstruct module": [[8, "newtonianvae-reconstruct-module"]], "newtonianvae.show_loss module": [[8, "newtonianvae-show-loss-module"]], "newtonianvae.train module": [[8, "newtonianvae-train-module"]], "simulation package": [[9, "simulation-package"]], "simulation.collect_data module": [[9, "simulation-collect-data-module"]], "simulation.control module": [[9, "simulation-control-module"]], "simulation.env module": [[9, "module-simulation.env"]], "simulation.override module": [[9, "simulation-override-module"]], "tool package": [[10, "tool-package"]], "tool.argset module": [[10, "module-tool.argset"]], "tool.checker module": [[10, "module-tool.checker"]], "tool.dataloader module": [[10, "module-tool.dataloader"]], "tool.params module": [[10, "module-tool.params"]], "tool.util module": [[10, "module-tool.util"]], "tool.visualhandlerbase module": [[10, "module-tool.visualhandlerbase"]], "view package": [[11, "view-package"]], "view.show_data module": [[11, "view-show-data-module"]], "view.show_model module": [[11, "view-show-model-module"]], "view.train_tensorboard module": [[11, "view-train-tensorboard-module"]], "view.train_visdom module": [[11, "view-train-visdom-module"]]}, "indexentries": {"control": [[0, "module-control"]], "control.train": [[0, "module-control.train"]], "main() (in module control.train)": [[0, "control.train.main"]], "module": [[0, "module-control"], [0, "module-control.train"], [2, "module-models"], [2, "module-models.component"], [2, "module-models.core"], [2, "module-models.pcontrol"], [4, "module-mypython"], [4, "module-mypython.error"], [4, "module-mypython.plotutil"], [4, "module-mypython.pyutil"], [4, "module-mypython.terminal"], [4, "module-mypython.vision"], [5, "module-mypython.ai"], [5, "module-mypython.ai.torch_util"], [5, "module-mypython.ai.util"], [6, "module-mypython.ai.torchprob"], [6, "module-mypython.ai.torchprob.debug"], [6, "module-mypython.ai.torchprob.functions"], [7, "module-mypython.ai.torchprob.distributions"], [7, "module-mypython.ai.torchprob.distributions.base"], [7, "module-mypython.ai.torchprob.distributions.bernoulli"], [7, "module-mypython.ai.torchprob.distributions.gmm"], [7, "module-mypython.ai.torchprob.distributions.normal"], [8, "module-newtonianvae"], [8, "module-newtonianvae.load"], [9, "module-simulation"], [9, "module-simulation.env"], [10, "module-tool"], [10, "module-tool.argset"], [10, "module-tool.checker"], [10, "module-tool.dataloader"], [10, "module-tool.params"], [10, "module-tool.util"], [10, "module-tool.visualhandlerbase"], [11, "module-view"]], "abcf (class in models.component)": [[2, "models.component.ABCf"]], "decoder (class in models.component)": [[2, "models.component.Decoder"]], "encoder (class in models.component)": [[2, "models.component.Encoder"]], "newtonianvae (class in models.core)": [[2, "models.core.NewtonianVAE"]], "newtonianvaebase (class in models.core)": [[2, "models.core.NewtonianVAEBase"]], "newtonianvaecell (class in models.core)": [[2, "models.core.NewtonianVAECell"]], "newtonianvaecellbase (class in models.core)": [[2, "models.core.NewtonianVAECellBase"]], "newtonianvaecellbase.pack (class in models.core)": [[2, "models.core.NewtonianVAECellBase.Pack"]], "newtonianvaederivation (class in models.core)": [[2, "models.core.NewtonianVAEDerivation"]], "newtonianvaederivationcell (class in models.core)": [[2, "models.core.NewtonianVAEDerivationCell"]], "newtonianvaev2 (class in models.core)": [[2, "models.core.NewtonianVAEV2"]], "newtonianvaev2base (class in models.core)": [[2, "models.core.NewtonianVAEV2Base"]], "newtonianvaev2cell (class in models.core)": [[2, "models.core.NewtonianVAEV2Cell"]], "newtonianvaev2cellbase (class in models.core)": [[2, "models.core.NewtonianVAEV2CellBase"]], "newtonianvaev2cellbase.pack (class in models.core)": [[2, "models.core.NewtonianVAEV2CellBase.Pack"]], "newtonianvaev2derivation (class in models.core)": [[2, "models.core.NewtonianVAEV2Derivation"]], "newtonianvaev2derivationcell (class in models.core)": [[2, "models.core.NewtonianVAEV2DerivationCell"]], "pcontrol (class in models.pcontrol)": [[2, "models.pcontrol.PControl"]], "pxmiddlecat (class in models.component)": [[2, "models.component.PXmiddleCat"]], "purepcontrol (class in models.pcontrol)": [[2, "models.pcontrol.PurePControl"]], "pxhat (class in models.component)": [[2, "models.component.Pxhat"]], "stepper (class in models.core)": [[2, "models.core.Stepper"]], "stepper.pack (class in models.core)": [[2, "models.core.Stepper.Pack"]], "transition (class in models.component)": [[2, "models.component.Transition"]], "velocity (class in models.component)": [[2, "models.component.Velocity"]], "visualdecoder64 (class in models.component)": [[2, "models.component.VisualDecoder64"]], "visualencoder64 (class in models.component)": [[2, "models.component.VisualEncoder64"]], "as_save() (in module models.core)": [[2, "models.core.as_save"]], "cell (models.core.newtonianvaederivation attribute)": [[2, "models.core.NewtonianVAEDerivation.cell"]], "cell (models.core.newtonianvaev2derivation attribute)": [[2, "models.core.NewtonianVAEV2Derivation.cell"]], "dim_x (models.core.newtonianvaecellbase property)": [[2, "models.core.NewtonianVAECellBase.dim_x"]], "dim_xhat (models.core.newtonianvaederivationcell property)": [[2, "models.core.NewtonianVAEDerivationCell.dim_xhat"]], "dim_xhat (models.core.newtonianvaev2derivationcell property)": [[2, "models.core.NewtonianVAEV2DerivationCell.dim_xhat"]], "forward() (models.component.abcf method)": [[2, "models.component.ABCf.forward"]], "forward() (models.component.decoder method)": [[2, "models.component.Decoder.forward"]], "forward() (models.component.encoder method)": [[2, "models.component.Encoder.forward"]], "forward() (models.component.pxmiddlecat method)": [[2, "models.component.PXmiddleCat.forward"]], "forward() (models.component.pxhat method)": [[2, "models.component.Pxhat.forward"]], "forward() (models.component.transition method)": [[2, "models.component.Transition.forward"]], "forward() (models.component.velocity method)": [[2, "models.component.Velocity.forward"]], "forward() (models.component.visualdecoder64 method)": [[2, "models.component.VisualDecoder64.forward"]], "forward() (models.component.visualencoder64 method)": [[2, "models.component.VisualEncoder64.forward"]], "forward() (models.core.newtonianvaebase method)": [[2, "models.core.NewtonianVAEBase.forward"]], "forward() (models.core.newtonianvaecell method)": [[2, "models.core.NewtonianVAECell.forward"]], "forward() (models.core.newtonianvaederivationcell method)": [[2, "models.core.NewtonianVAEDerivationCell.forward"]], "forward() (models.core.newtonianvaev2base method)": [[2, "models.core.NewtonianVAEV2Base.forward"]], "forward() (models.core.newtonianvaev2cell method)": [[2, "models.core.NewtonianVAEV2Cell.forward"]], "forward() (models.core.newtonianvaev2derivationcell method)": [[2, "models.core.NewtonianVAEV2DerivationCell.forward"]], "get_newtonianvae() (in module models.core)": [[2, "models.core.get_NewtonianVAE"]], "get_newtonianvaecell() (in module models.core)": [[2, "models.core.get_NewtonianVAECell"]], "get_action() (models.pcontrol.purepcontrol method)": [[2, "models.pcontrol.PurePControl.get_action"]], "get_action_from_x() (models.pcontrol.purepcontrol method)": [[2, "models.pcontrol.PurePControl.get_action_from_x"]], "info (models.core.newtonianvaecell property)": [[2, "models.core.NewtonianVAECell.info"]], "info (models.core.newtonianvaecellbase property)": [[2, "models.core.NewtonianVAECellBase.info"]], "info (models.core.newtonianvaederivationcell property)": [[2, "models.core.NewtonianVAEDerivationCell.info"]], "info (models.core.newtonianvaev2cell property)": [[2, "models.core.NewtonianVAEV2Cell.info"]], "info (models.core.newtonianvaev2derivationcell property)": [[2, "models.core.NewtonianVAEV2DerivationCell.info"]], "models": [[2, "module-models"]], "models.component": [[2, "module-models.component"]], "models.core": [[2, "module-models.core"]], "models.pcontrol": [[2, "module-models.pcontrol"]], "reset() (models.core.stepper method)": [[2, "models.core.Stepper.reset"]], "training (models.component.abcf attribute)": [[2, "models.component.ABCf.training"]], "training (models.component.decoder attribute)": [[2, "models.component.Decoder.training"]], "training (models.component.encoder attribute)": [[2, "models.component.Encoder.training"]], "training (models.component.pxmiddlecat attribute)": [[2, "models.component.PXmiddleCat.training"]], "training (models.component.pxhat attribute)": [[2, "models.component.Pxhat.training"]], "training (models.component.transition attribute)": [[2, "models.component.Transition.training"]], "training (models.component.velocity attribute)": [[2, "models.component.Velocity.training"]], "training (models.component.visualdecoder64 attribute)": [[2, "models.component.VisualDecoder64.training"]], "training (models.component.visualencoder64 attribute)": [[2, "models.component.VisualEncoder64.training"]], "training (models.core.newtonianvae attribute)": [[2, "models.core.NewtonianVAE.training"]], "training (models.core.newtonianvaebase attribute)": [[2, "models.core.NewtonianVAEBase.training"]], "training (models.core.newtonianvaecell attribute)": [[2, "models.core.NewtonianVAECell.training"]], "training (models.core.newtonianvaecellbase attribute)": [[2, "models.core.NewtonianVAECellBase.training"]], "training (models.core.newtonianvaederivation attribute)": [[2, "models.core.NewtonianVAEDerivation.training"]], "training (models.core.newtonianvaederivationcell attribute)": [[2, "models.core.NewtonianVAEDerivationCell.training"]], "training (models.core.newtonianvaev2 attribute)": [[2, "models.core.NewtonianVAEV2.training"]], "training (models.core.newtonianvaev2base attribute)": [[2, "models.core.NewtonianVAEV2Base.training"]], "training (models.core.newtonianvaev2cell attribute)": [[2, "models.core.NewtonianVAEV2Cell.training"]], "training (models.core.newtonianvaev2cellbase attribute)": [[2, "models.core.NewtonianVAEV2CellBase.training"]], "training (models.core.newtonianvaev2derivation attribute)": [[2, "models.core.NewtonianVAEV2Derivation.training"]], "training (models.core.newtonianvaev2derivationcell attribute)": [[2, "models.core.NewtonianVAEV2DerivationCell.training"]], "training (models.pcontrol.pcontrol attribute)": [[2, "models.pcontrol.PControl.training"]], "axis_aspect_2d() (in module mypython.plotutil)": [[4, "mypython.plotutil.Axis_aspect_2d"]], "bgr2rgb() (in module mypython.vision)": [[4, "mypython.vision.BGR2RGB"]], "chw2hwc() (in module mypython.vision)": [[4, "mypython.vision.CHW2HWC"]], "color (class in mypython.terminal)": [[4, "mypython.terminal.Color"]], "hwc2chw() (in module mypython.vision)": [[4, "mypython.vision.HWC2CHW"]], "prompt (class in mypython.terminal)": [[4, "mypython.terminal.Prompt"]], "rgb2bgr() (in module mypython.vision)": [[4, "mypython.vision.RGB2BGR"]], "anim_mode() (in module mypython.plotutil)": [[4, "mypython.plotutil.anim_mode"]], "bg_gold (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.bg_gold"]], "bg_rgb() (mypython.terminal.color method)": [[4, "mypython.terminal.Color.bg_rgb"]], "black (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.black"]], "blue (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.blue"]], "boldblack (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.boldblack"]], "boldblue (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.boldblue"]], "boldcyan (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.boldcyan"]], "boldgreen (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.boldgreen"]], "boldmagenta (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.boldmagenta"]], "boldred (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.boldred"]], "boldwhite (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.boldwhite"]], "boldyellow (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.boldyellow"]], "check_dir() (in module mypython.error)": [[4, "mypython.error.check_dir"]], "check_file() (in module mypython.error)": [[4, "mypython.error.check_file"]], "cmap() (in module mypython.plotutil)": [[4, "mypython.plotutil.cmap"]], "cnn2cv() (in module mypython.vision)": [[4, "mypython.vision.cnn2cv"]], "cnn2plt() (in module mypython.vision)": [[4, "mypython.vision.cnn2plt"]], "coral (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.coral"]], "cv2cnn() (in module mypython.vision)": [[4, "mypython.vision.cv2cnn"]], "cv2plt() (in module mypython.vision)": [[4, "mypython.vision.cv2plt"]], "cyan (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.cyan"]], "del_line (mypython.terminal.prompt attribute)": [[4, "mypython.terminal.Prompt.del_line"]], "fit_terminal() (mypython.terminal.prompt static method)": [[4, "mypython.terminal.Prompt.fit_terminal"]], "get_figsize() (in module mypython.plotutil)": [[4, "mypython.plotutil.get_figsize"]], "green (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.green"]], "hotpink (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.hotpink"]], "magenta (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.magenta"]], "mypython": [[4, "module-mypython"]], "mypython.error": [[4, "module-mypython.error"]], "mypython.plotutil": [[4, "module-mypython.plotutil"]], "mypython.pyutil": [[4, "module-mypython.pyutil"]], "mypython.terminal": [[4, "module-mypython.terminal"]], "mypython.vision": [[4, "module-mypython.vision"]], "orange (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.orange"]], "plt2cnn() (in module mypython.vision)": [[4, "mypython.vision.plt2cnn"]], "pprint() (mypython.terminal.color method)": [[4, "mypython.terminal.Color.pprint"]], "print() (mypython.terminal.color method)": [[4, "mypython.terminal.Color.print"]], "print_one_line() (mypython.terminal.prompt static method)": [[4, "mypython.terminal.Prompt.print_one_line"]], "purple (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.purple"]], "red (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.red"]], "reset (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.reset"]], "rgb() (mypython.terminal.color method)": [[4, "mypython.terminal.Color.rgb"]], "s2dhms() (in module mypython.pyutil)": [[4, "mypython.pyutil.s2dhms"]], "s2dhms_str() (in module mypython.pyutil)": [[4, "mypython.pyutil.s2dhms_str"]], "white (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.white"]], "yellow (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.yellow"]], "batchidx (class in mypython.ai.util)": [[5, "mypython.ai.util.BatchIdx"]], "mypython.ai": [[5, "module-mypython.ai"]], "mypython.ai.torch_util": [[5, "module-mypython.ai.torch_util"]], "mypython.ai.util": [[5, "module-mypython.ai.util"]], "print_module_params() (in module mypython.ai.torch_util)": [[5, "mypython.ai.torch_util.print_module_params"]], "reproduce() (in module mypython.ai.torch_util)": [[5, "mypython.ai.torch_util.reproduce"]], "kl_normal_normal() (in module mypython.ai.torchprob.functions)": [[6, "mypython.ai.torchprob.functions.KL_normal_normal"]], "kldiv() (in module mypython.ai.torchprob.functions)": [[6, "mypython.ai.torchprob.functions.KLdiv"]], "check_dist_model() (in module mypython.ai.torchprob.debug)": [[6, "mypython.ai.torchprob.debug.check_dist_model"]], "log() (in module mypython.ai.torchprob.functions)": [[6, "mypython.ai.torchprob.functions.log"]], "mypython.ai.torchprob": [[6, "module-mypython.ai.torchprob"]], "mypython.ai.torchprob.debug": [[6, "module-mypython.ai.torchprob.debug"]], "mypython.ai.torchprob.functions": [[6, "module-mypython.ai.torchprob.functions"]], "bernoulli (class in mypython.ai.torchprob.distributions.bernoulli)": [[7, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli"]], "distribution (class in mypython.ai.torchprob.distributions.base)": [[7, "mypython.ai.torchprob.distributions.base.Distribution"]], "gmm (class in mypython.ai.torchprob.distributions.gmm)": [[7, "mypython.ai.torchprob.distributions.gmm.GMM"]], "normal (class in mypython.ai.torchprob.distributions.normal)": [[7, "mypython.ai.torchprob.distributions.normal.Normal"]], "cond() (mypython.ai.torchprob.distributions.base.distribution method)": [[7, "mypython.ai.torchprob.distributions.base.Distribution.cond"]], "cond() (mypython.ai.torchprob.distributions.bernoulli.bernoulli method)": [[7, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.cond"]], "cond() (mypython.ai.torchprob.distributions.gmm.gmm method)": [[7, "mypython.ai.torchprob.distributions.gmm.GMM.cond"]], "cond() (mypython.ai.torchprob.distributions.normal.normal method)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.cond"]], "decode() (mypython.ai.torchprob.distributions.base.distribution method)": [[7, "mypython.ai.torchprob.distributions.base.Distribution.decode"]], "decode() (mypython.ai.torchprob.distributions.bernoulli.bernoulli method)": [[7, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.decode"]], "decode() (mypython.ai.torchprob.distributions.normal.normal method)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.decode"]], "forward() (mypython.ai.torchprob.distributions.base.distribution method)": [[7, "mypython.ai.torchprob.distributions.base.Distribution.forward"]], "forward() (mypython.ai.torchprob.distributions.bernoulli.bernoulli method)": [[7, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.forward"]], "forward() (mypython.ai.torchprob.distributions.gmm.gmm method)": [[7, "mypython.ai.torchprob.distributions.gmm.GMM.forward"]], "forward() (mypython.ai.torchprob.distributions.normal.normal method)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.forward"]], "get_dist_params() (mypython.ai.torchprob.distributions.base.distribution method)": [[7, "mypython.ai.torchprob.distributions.base.Distribution.get_dist_params"]], "get_dist_params() (mypython.ai.torchprob.distributions.bernoulli.bernoulli method)": [[7, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.get_dist_params"]], "get_dist_params() (mypython.ai.torchprob.distributions.normal.normal method)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.get_dist_params"]], "loc (mypython.ai.torchprob.distributions.base.distribution property)": [[7, "mypython.ai.torchprob.distributions.base.Distribution.loc"]], "loc (mypython.ai.torchprob.distributions.bernoulli.bernoulli property)": [[7, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.loc"]], "loc (mypython.ai.torchprob.distributions.normal.normal property)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.loc"]], "log_bernoulli() (in module mypython.ai.torchprob.distributions.bernoulli)": [[7, "mypython.ai.torchprob.distributions.bernoulli.log_bernoulli"]], "log_gmm() (in module mypython.ai.torchprob.distributions.gmm)": [[7, "mypython.ai.torchprob.distributions.gmm.log_gmm"]], "log_normal() (in module mypython.ai.torchprob.distributions.normal)": [[7, "mypython.ai.torchprob.distributions.normal.log_normal"]], "log_p() (mypython.ai.torchprob.distributions.base.distribution method)": [[7, "mypython.ai.torchprob.distributions.base.Distribution.log_p"]], "log_p() (mypython.ai.torchprob.distributions.bernoulli.bernoulli method)": [[7, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.log_p"]], "log_p() (mypython.ai.torchprob.distributions.gmm.gmm method)": [[7, "mypython.ai.torchprob.distributions.gmm.GMM.log_p"]], "log_p() (mypython.ai.torchprob.distributions.normal.normal method)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.log_p"]], "mypython.ai.torchprob.distributions": [[7, "module-mypython.ai.torchprob.distributions"]], "mypython.ai.torchprob.distributions.base": [[7, "module-mypython.ai.torchprob.distributions.base"]], "mypython.ai.torchprob.distributions.bernoulli": [[7, "module-mypython.ai.torchprob.distributions.bernoulli"]], "mypython.ai.torchprob.distributions.gmm": [[7, "module-mypython.ai.torchprob.distributions.gmm"]], "mypython.ai.torchprob.distributions.normal": [[7, "module-mypython.ai.torchprob.distributions.normal"]], "normal_sample() (in module mypython.ai.torchprob.distributions.normal)": [[7, "mypython.ai.torchprob.distributions.normal.normal_sample"]], "rsample() (mypython.ai.torchprob.distributions.base.distribution method)": [[7, "mypython.ai.torchprob.distributions.base.Distribution.rsample"]], "rsample() (mypython.ai.torchprob.distributions.normal.normal method)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.rsample"]], "scale (mypython.ai.torchprob.distributions.base.distribution property)": [[7, "mypython.ai.torchprob.distributions.base.Distribution.scale"]], "scale (mypython.ai.torchprob.distributions.bernoulli.bernoulli property)": [[7, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.scale"]], "scale (mypython.ai.torchprob.distributions.normal.normal property)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.scale"]], "training (mypython.ai.torchprob.distributions.base.distribution attribute)": [[7, "mypython.ai.torchprob.distributions.base.Distribution.training"]], "training (mypython.ai.torchprob.distributions.bernoulli.bernoulli attribute)": [[7, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.training"]], "training (mypython.ai.torchprob.distributions.gmm.gmm attribute)": [[7, "mypython.ai.torchprob.distributions.gmm.GMM.training"]], "training (mypython.ai.torchprob.distributions.normal.normal attribute)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.training"]], "load() (in module newtonianvae.load)": [[8, "newtonianvae.load.load"]], "newtonianvae": [[8, "module-newtonianvae"]], "newtonianvae.load": [[8, "module-newtonianvae.load"]], "controlsuiteenv (class in simulation.env)": [[9, "simulation.env.ControlSuiteEnv"]], "controlsuiteenvwrap (class in simulation.env)": [[9, "simulation.env.ControlSuiteEnvWrap"]], "action_range (simulation.env.controlsuiteenv property)": [[9, "simulation.env.ControlSuiteEnv.action_range"]], "action_size (simulation.env.controlsuiteenv property)": [[9, "simulation.env.ControlSuiteEnv.action_size"]], "adjust_camera() (simulation.env.controlsuiteenv method)": [[9, "simulation.env.ControlSuiteEnv.adjust_camera"]], "adjust_camera() (simulation.env.controlsuiteenvwrap method)": [[9, "simulation.env.ControlSuiteEnvWrap.adjust_camera"]], "close() (simulation.env.controlsuiteenv method)": [[9, "simulation.env.ControlSuiteEnv.close"]], "img2obs() (in module simulation.env)": [[9, "simulation.env.img2obs"]], "obs2img() (in module simulation.env)": [[9, "simulation.env.obs2img"]], "observation_size (simulation.env.controlsuiteenv property)": [[9, "simulation.env.ControlSuiteEnv.observation_size"]], "position_wrapper() (simulation.env.controlsuiteenvwrap static method)": [[9, "simulation.env.ControlSuiteEnvWrap.position_wrapper"]], "postprocess_observation() (in module simulation.env)": [[9, "simulation.env.postprocess_observation"]], "preprocess_observation_() (in module simulation.env)": [[9, "simulation.env.preprocess_observation_"]], "reacher_default2endeffectorpos() (in module simulation.env)": [[9, "simulation.env.reacher_default2endeffectorpos"]], "render() (simulation.env.controlsuiteenv method)": [[9, "simulation.env.ControlSuiteEnv.render"]], "reset() (simulation.env.controlsuiteenv method)": [[9, "simulation.env.ControlSuiteEnv.reset"]], "roll_2d() (in module simulation.env)": [[9, "simulation.env.roll_2d"]], "sample_random_action() (simulation.env.controlsuiteenv method)": [[9, "simulation.env.ControlSuiteEnv.sample_random_action"]], "simulation": [[9, "module-simulation"]], "simulation.env": [[9, "module-simulation.env"]], "step() (simulation.env.controlsuiteenv method)": [[9, "simulation.env.ControlSuiteEnv.step"]], "step() (simulation.env.controlsuiteenvwrap method)": [[9, "simulation.env.ControlSuiteEnvWrap.step"]], "zeros_action() (simulation.env.controlsuiteenv method)": [[9, "simulation.env.ControlSuiteEnv.zeros_action"]], "dataloader (class in tool.dataloader)": [[10, "tool.dataloader.DataLoader"]], "params (class in tool.params)": [[10, "tool.params.Params"]], "paramseval (class in tool.params)": [[10, "tool.params.ParamsEval"]], "paramssimenv (class in tool.params)": [[10, "tool.params.ParamsSimEnv"]], "visualhandlerbase (class in tool.visualhandlerbase)": [[10, "tool.visualhandlerbase.VisualHandlerBase"]], "alpha() (in module tool.argset)": [[10, "tool.argset.alpha"]], "anim_mode() (in module tool.argset)": [[10, "tool.argset.anim_mode"]], "backup() (in module tool.util)": [[10, "tool.util.backup"]], "call_end() (tool.visualhandlerbase.visualhandlerbase method)": [[10, "tool.visualhandlerbase.VisualHandlerBase.call_end"]], "call_end_init() (tool.visualhandlerbase.visualhandlerbase method)": [[10, "tool.visualhandlerbase.VisualHandlerBase.call_end_init"]], "cf() (in module tool.argset)": [[10, "tool.argset.cf"]], "cf_eval() (in module tool.argset)": [[10, "tool.argset.cf_eval"]], "cf_simenv() (in module tool.argset)": [[10, "tool.argset.cf_simenv"]], "cuda() (in module tool.checker)": [[10, "tool.checker.cuda"]], "delete_useless_saves() (in module tool.util)": [[10, "tool.util.delete_useless_saves"]], "episodes() (in module tool.argset)": [[10, "tool.argset.episodes"]], "fix_xmap_size() (in module tool.argset)": [[10, "tool.argset.fix_xmap_size"]], "goal_img() (in module tool.argset)": [[10, "tool.argset.goal_img"]], "is_running (tool.visualhandlerbase.visualhandlerbase property)": [[10, "tool.visualhandlerbase.VisualHandlerBase.is_running"]], "is_same_data() (in module tool.checker)": [[10, "tool.checker.is_same_data"]], "kwargs (tool.params.paramseval property)": [[10, "tool.params.ParamsEval.kwargs"]], "kwargs (tool.params.paramssimenv property)": [[10, "tool.params.ParamsSimEnv.kwargs"]], "large_episodes() (in module tool.checker)": [[10, "tool.checker.large_episodes"]], "output() (in module tool.argset)": [[10, "tool.argset.output"]], "path_data() (in module tool.argset)": [[10, "tool.argset.path_data"]], "path_model() (in module tool.argset)": [[10, "tool.argset.path_model"]], "path_result() (in module tool.argset)": [[10, "tool.argset.path_result"]], "path_save() (in module tool.argset)": [[10, "tool.argset.path_save"]], "plot() (tool.visualhandlerbase.visualhandlerbase method)": [[10, "tool.visualhandlerbase.VisualHandlerBase.plot"]], "position_size() (in module tool.argset)": [[10, "tool.argset.position_size"]], "resume() (in module tool.argset)": [[10, "tool.argset.resume"]], "save_anim() (in module tool.argset)": [[10, "tool.argset.save_anim"]], "select_date() (in module tool.util)": [[10, "tool.util.select_date"]], "select_weight() (in module tool.util)": [[10, "tool.util.select_weight"]], "steps() (in module tool.argset)": [[10, "tool.argset.steps"]], "tool": [[10, "module-tool"]], "tool.argset": [[10, "module-tool.argset"]], "tool.checker": [[10, "module-tool.checker"]], "tool.dataloader": [[10, "module-tool.dataloader"]], "tool.params": [[10, "module-tool.params"]], "tool.util": [[10, "module-tool.util"]], "tool.visualhandlerbase": [[10, "module-tool.visualhandlerbase"]], "wait_init() (tool.visualhandlerbase.visualhandlerbase method)": [[10, "tool.visualhandlerbase.VisualHandlerBase.wait_init"]], "watch() (in module tool.argset)": [[10, "tool.argset.watch"]], "view": [[11, "module-view"]]}})