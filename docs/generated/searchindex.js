Search.setIndex({"docnames": ["index", "models", "modules", "mypython", "mypython.ai", "mypython.ai.torchprob", "mypython.ai.torchprob.distributions", "newtonianvae", "simulation", "tool", "view"], "filenames": ["index.rst", "models.rst", "modules.rst", "mypython.rst", "mypython.ai.rst", "mypython.ai.torchprob.rst", "mypython.ai.torchprob.distributions.rst", "newtonianvae.rst", "simulation.rst", "tool.rst", "view.rst"], "titles": ["Welcome to Scratch of NewtonianVAE\u2019s documentation!", "models package", "source", "mypython package", "mypython.ai package", "mypython.ai.torchprob package", "mypython.ai.torchprob.distributions package", "newtonianvae package", "simulation package", "tool package", "view package"], "terms": {"index": 0, "modul": [0, 2], "search": 0, "page": 0, "newcommand": 1, "i": [1, 6], "mathbf": 1, "u": 1, "v": 1, "x": [1, 3, 5, 6, 8], "xhat": 1, "hat": 1, "kl": 1, "2": [1, 3, 6, 8], "operatornam": 1, "left": [1, 8], "1": [1, 3, 5, 6, 8], "middl": 1, "right": [1, 8], "class": [1, 3, 4, 6, 8, 9], "abcf": [1, 2], "dim_x": [1, 2], "int": [1, 3, 4, 8, 9], "base": [1, 3, 4, 5, 8, 9], "begin": 1, "arrai": [1, 8], "ll": 1, "A": 1, "mathrm": 1, "diag": 1, "f": 1, "x_": 1, "t": 1, "v_": 1, "u_": 1, "b": [1, 3], "log": [1, 4, 5, 6], "c": [1, 3], "end": [1, 8], "output": [1, 2, 9], "diaga": 1, "diagb": 1, "diagc": 1, "tensor": [1, 3, 5, 6, 8], "shape": [1, 3, 6, 8], "d": [1, 6, 7], "where": [1, 9], "align": 1, "dim": 1, "refer": [1, 6], "paper": 1, "xt": 1, "vt": 1, "ut": 1, "neural": 1, "network": 1, "linear": 1, "activ": 1, "nvae": 1, "fa": 1, "fb": 1, "fc": 1, "forward": [1, 2, 5, 6], "x_tn1": 1, "v_tn1": 1, "u_tn1": 1, "train": [1, 2, 5, 6], "bool": [1, 6, 8, 9], "decod": [1, 2, 5, 6], "std": 1, "0": [1, 3, 8], "normal": [1, 4, 5], "p": [1, 3, 5, 9], "i_t": 1, "mid": 1, "hspace": 1, "5mm": 1, "text": [1, 3], "xhat_": 1, "we": 1, "us": [1, 9], "gaussian": [1, 6], "It": 1, "q": [1, 5], "parametr": 1, "throughout": 1, "x_t": 1, "encod": [1, 2], "dim_middl": 1, "std_function": 1, "callabl": 1, "pxmiddlecat": [1, 2], "x_m1_t": 1, "x_m2_t": 1, "pxhat": [1, 2], "dim_xhat": [1, 2], "xhat_t": 1, "paper\u306b\u4f55\u306e\u8aac\u660e\u3082\u306a\u3044": 1, "comput": [1, 6], "\u03bc": [1, 6], "\u03c3": [1, 6], "n": [1, 3, 6], "from": [1, 6, 8], "cond_var": [1, 5, 6], "transit": [1, 2], "prior": 1, "eq": 1, "9": 1, "mathcal": 1, "delta": 1, "cdot": 1, "v_t": 1, "sigma": [1, 6], "dt": 1, "float": [1, 3, 8, 9], "veloc": [1, 2], "fix_abc": 1, "union": [1, 3, 6, 9], "none": [1, 3, 6, 8, 9], "tupl": [1, 6, 8], "numbertyp": [1, 6], "visualdecoder64": [1, 2], "dim_input": 1, "built": 1, "method": 1, "relu": 1, "type": [1, 3, 9], "object": [1, 3, 4, 8, 9], "input": [1, 3], "_input": 1, "y": 1, "3": [1, 8], "64": [1, 8], "ref": [1, 5, 6, 8, 9], "impl": 1, "http": [1, 3, 5, 6, 8], "github": [1, 5, 6, 8], "com": [1, 3, 5, 6, 8], "ctallec": [1, 6], "world": [1, 6], "blob": [1, 5, 6, 8], "master": [1, 6, 8], "vae": 1, "py": [1, 5, 6, 8], "l10": 1, "visualencoder64": [1, 2], "dim_output": 1, "_output": 1, "l32": 1, "newtonianva": [1, 2], "arg": [1, 3, 8, 9], "kwarg": [1, 2, 3, 9], "newtonianvaebas": [1, 2], "elbo": 1, "formula": [1, 5], "11": 1, "accord": 1, "follow": 1, "sim": 1, "e": [1, 9], "displaystyl": 1, "sum_t": 1, "v_0": 1, "boldsymbol": 1, "x_0": 1, "i_0": 1, "leftarrow": 1, "dure": 1, "evalu": [1, 9], "action": [1, 8, 9], "observ": [1, 8], "batch": 1, "size": [1, 9], "sequenc": 1, "length": 1, "infer": 1, "ad": 1, "an": [1, 8], "addit": 1, "regular": 1, "term": 1, "latent": 1, "space": 1, "newtonianvaecel": [1, 2], "newtonianvaecellbas": [1, 2], "properti": [1, 6, 8, 9], "info": [1, 2], "str": [1, 3, 8, 9], "transition_std": 1, "encoder_dim_middl": 1, "encoder_std_funct": 1, "fals": [1, 3, 4, 9], "inherit": 1, "thi": 1, "should": 1, "store": [1, 9], "variabl": 1, "previou": 1, "time": [1, 8, 9], "intern": 1, "well": 1, "rnncell": 1, "lstmcell": 1, "grucel": 1, "pack": [1, 2], "e_ll": 1, "e_kl": 1, "set": 1, "newtonianvaederiv": [1, 2], "23": 1, "cell": [1, 2], "newtonianvaederivationcel": [1, 2], "dim_pxhat_middl": 1, "pxhat_std_funct": 1, "newtonianvaev2": [1, 2], "newtonianvaev2bas": [1, 2], "implement": 1, "wa": 1, "mr": 1, "ito": 1, "": [1, 9], "opinion": 1, "i_": 1, "The": 1, "initi": 1, "valu": [1, 9], "below": 1, "log_x": 1, "collect": 1, "about": 1, "newtonianvaev2cel": [1, 2], "newtonianvaev2cellbas": [1, 2], "i_tn1": 1, "x_tn2": 1, "newtonianvaev2deriv": [1, 2], "newtonianvaev2derivationcel": [1, 2], "defin": 1, "perform": 1, "everi": 1, "call": 1, "overridden": 1, "all": 1, "subclass": 1, "although": 1, "recip": 1, "pass": 1, "need": 1, "within": 1, "function": [1, 3, 4, 6], "one": 1, "instanc": 1, "afterward": 1, "instead": 1, "sinc": 1, "former": 1, "take": 1, "care": 1, "run": 1, "regist": 1, "hook": 1, "while": 1, "latter": 1, "silent": 1, "ignor": 1, "them": 1, "stepper": [1, 2], "i_t_dec": 1, "reset": [1, 2, 3, 8], "as_sav": [1, 2], "get_newtonianva": [1, 2], "name": [1, 3, 9], "get_newtonianvaecel": [1, 2], "12": 1, "u_t": 1, "sum_": 1, "pi_n": 1, "k_n": 1, "goal": [1, 9], "purepcontrol": [1, 2], "igoal": 1, "alpha": [1, 2, 9], "sampl": 1, "random": 1, "start": [1, 4, 9], "state": 1, "success": 1, "appli": 1, "control": [1, 2], "law": 1, "get_act": [1, 2], "get_action_from_x": [1, 2], "model": [2, 5, 6, 9], "packag": 2, "submodul": 2, "compon": 2, "core": 2, "pcontrol": 2, "content": 2, "mypython": 2, "subpackag": 2, "ai": [2, 3], "torch_util": [2, 3], "util": [2, 3], "error": 2, "check_dir": [2, 3], "check_fil": [2, 3], "plotutil": 2, "axis_aspect_2d": [2, 3], "anim_mod": [2, 3, 9], "cartesian_coordin": [2, 3], "cmap": [2, 3], "get_figs": [2, 3], "pyutil": 2, "s2dhm": [2, 3], "s2dhms_str": [2, 3], "termin": 2, "color": [2, 3, 8], "bg_gold": [2, 3], "bg_rgb": [2, 3], "black": [2, 3], "blue": [2, 3], "boldblack": [2, 3], "boldblu": [2, 3], "boldcyan": [2, 3], "boldgreen": [2, 3], "boldmagenta": [2, 3], "boldr": [2, 3], "boldwhit": [2, 3], "boldyellow": [2, 3], "coral": [2, 3], "cyan": [2, 3], "green": [2, 3], "hotpink": [2, 3], "magenta": [2, 3], "orang": [2, 3], "pprint": [2, 3], "print": [2, 3], "purpl": [2, 3], "red": [2, 3], "rgb": [2, 3, 8], "white": [2, 3], "yellow": [2, 3], "prompt": [2, 3], "del_lin": [2, 3], "fit_termin": [2, 3], "print_one_lin": [2, 3], "vision": 2, "bgr2rgb": [2, 3], "chw2hwc": [2, 3], "hwc2chw": [2, 3], "rgb2bgr": [2, 3], "cnn2cv": [2, 3], "cnn2plt": [2, 3], "cv2cnn": [2, 3], "cv2plt": [2, 3], "plt2cnn": [2, 3], "correl": 2, "load": [2, 9], "get_path_data": [2, 7], "reconstruct": 2, "show_loss": 2, "simul": [2, 9], "collect_data": 2, "env": 2, "controlsuiteenv": [2, 8], "action_rang": [2, 8], "action_s": [2, 8], "adjust_camera": [2, 8], "close": [2, 8], "observation_s": [2, 8], "render": [2, 8, 9], "sample_random_act": [2, 8], "step": [2, 8, 9], "zeros_act": [2, 8], "controlsuiteenvwrap": [2, 8], "position_wrapp": [2, 8], "img2ob": [2, 8], "obs2img": [2, 8], "postprocess_observ": [2, 8], "preprocess_observation_": [2, 8], "reacher_default2endeffectorpo": [2, 8], "reacher_fix_arg_rang": [2, 8], "roll_2d": [2, 8], "overrid": 2, "tool": 2, "argset": 2, "cf": [2, 9], "cf_eval": [2, 7, 9], "cf_simenv": [2, 9], "episod": [2, 9], "fix_xmap_s": [2, 9], "goal_img": [2, 9], "path_data": [2, 9], "path_model": [2, 7, 9], "path_result": [2, 9], "path_sav": [2, 9], "position_s": [2, 9], "resum": [2, 9], "save_anim": [2, 9], "watch": [2, 9], "checker": 2, "cuda": [2, 9], "is_same_data": [2, 9], "large_episod": [2, 9], "dataload": 2, "param": 2, "paramsev": [2, 9], "prefer": [2, 9], "get": [2, 9], "put": [2, 3, 9], "backup": [2, 9], "delete_useless_sav": [2, 9], "get_data_path": [2, 9], "select_d": [2, 9], "select_weight": [2, 9], "visualhandlerbas": 2, "call_end": [2, 9], "call_end_init": [2, 9], "is_run": [2, 9], "plot": [2, 3, 9], "wait_init": [2, 9], "view": 2, "show_data": 2, "show_model": 2, "train_tensorboard": 2, "train_visdom": 2, "torchprob": [3, 4], "debug": [3, 4], "print_module_param": [3, 4], "reproduc": [3, 4], "batchidx": [3, 4, 9], "path": [3, 9], "extens": 3, "option": [3, 9], "ex": 3, "txt": 3, "ax": 3, "aspect": 3, "after": 3, "seri": 3, "mode": 3, "fig": 3, "anim_func": 3, "frame": 3, "freeze_cnt": 3, "interv": 3, "33": 3, "save_path": 3, "paramet": [3, 8], "frame_cnt": 3, "return": [3, 8], "qiita": 3, "t0d4_": 3, "item": 3, "0f2b41782a6177d35e65": 3, "millisecond": 3, "r": 3, "rainbow": 3, "revers": 3, "sec": 3, "always_dai": 3, "x1b": 3, "48": 3, "255": [3, 8], "215": 3, "0m": 3, "g": 3, "90m": 3, "94m": 3, "96m": 3, "92m": 3, "95m": 3, "91m": 3, "97m": 3, "93m": 3, "38": 3, "127": 3, "80m": 3, "105": 3, "180m": 3, "165": 3, "sep": 3, "128": 3, "128m": 3, "m": 3, "k": [3, 6], "static": [3, 8, 9], "small_obj": 3, "import": 3, "img_util": 3, "imu": 3, "cv2": 3, "imread": 3, "h": 3, "w": 3, "bgr": 3, "cnn": 3, "float\u306b\u3057\u306a\u3044\u3068cnn\u306f\u53d7\u3051\u5165\u308c\u306a\u3044": 3, "img": 3, "ndarrai": [3, 8], "opencv": [3, 9], "read": 3, "conv2d": 3, "torchvis": 3, "transform": 3, "arr": 3, "out": 3, "in_siz": 3, "out_siz": 3, "distribut": [4, 5], "bernoulli": [4, 5], "gmm": [4, 5], "check_dist_model": [4, 5], "kl_normal_norm": [4, 5], "kldiv": [4, 5], "grad": 4, "seed": [4, 8], "1234": 4, "stop": [4, 9], "batch_siz": [4, 9], "cond": [5, 6], "get_dist_param": [5, 6], "loc": [5, 6], "log_p": [5, 6], "rsampl": [5, 6], "scale": [5, 6], "log_bernoulli": [5, 6], "log_gmm": [5, 6], "log_norm": [5, 6], "normal_sampl": [5, 6], "mu_1": 5, "sigma_1": 5, "mu_2": 5, "sigma_2": 5, "ep": [5, 6], "1920928955078125e": [5, 6], "07": [5, 6], "emit": [5, 6], "variationalrecurrentneuralnetwork": [5, 6], "0f23c87d11597ecf50ecbbf1dd37429861fd7aca": [5, 6], "l172": 5, "match": 5, "look": 5, "masa": 5, "su": 5, "pixyz": 5, "pyro": 5, "ppl": 5, "cond_vars_k": 6, "self": 6, "\u03b8": 6, "dist": 6, "likelihood": 6, "mu": 6, "bern": 6, "doc": 6, "chainer": 6, "org": 6, "en": 6, "stabl": 6, "gener": 6, "bernoulli_nl": 6, "html": 6, "l181": 6, "mixtur": 6, "\u03c0k": 6, "\u03bck": 6, "\u03c3k": 6, "multivari": 6, "number": [6, 9], "featur": 6, "pi": 6, "mdrnn": 6, "log_pi": 6, "l185": 6, "reparametr": 6, "trick": 6, "arg_path_data": 7, "kaixhin": 8, "planet": 8, "deepmind": 8, "dm_control": 8, "symbol": 8, "max_episode_length": 8, "action_repeat": 8, "bit_depth": 8, "\u7dba\u9e97\u306a\u307e\u307e\u8868\u793a\u3059\u308b": 8, "action_typ": 8, "default": [8, 9], "position_wrap": 8, "eras": 8, "cluster": 8, "star": 8, "posit": [8, 9], "reward": 8, "done": 8, "rang": 8, "5": 8, "order": 8, "true": [8, 9], "when": 8, "reach": 8, "coordin": 8, "two": 8, "angl": 8, "etc": [8, 9], "depend": 8, "postprocess": 8, "storag": 8, "float32": 8, "numpi": 8, "uint8": 8, "preprocess": 8, "inplac": 8, "target": 8, "effector": 8, "parser": 9, "argpars": 9, "argumentpars": 9, "requir": 9, "metavar": 9, "\u03b1": 9, "help": 9, "gain": 9, "choic": 9, "freez": 9, "anim": 9, "save": 9, "file": 9, "configur": 9, "common": 9, "environ": 9, "total": 9, "xmap": 9, "imag": 9, "npy": 9, "dir_path": 9, "directori": 9, "data": 9, "exist": 9, "manag": 9, "date": 9, "result": 9, "nif": 9, "specifi": 9, "video": 9, "destin": 9, "store_tru": 9, "learn": 9, "plt": 9, "check": 9, "without": 9, "For": 9, "you": 9, "can": 9, "choos": 9, "matplotlib": 9, "devic": 9, "trained_time_dir": 9, "root": 9, "dtype": 9, "cpu": 9, "torch": 9, "iterabledataset": 9, "_eval": 9, "dir": 9, "src_file": 9, "dst_dir": 9, "renam": 9, "model_date_path": 9, "arg_data": 9}, "objects": {"": [[1, 0, 0, "-", "models"], [3, 0, 0, "-", "mypython"], [7, 0, 0, "-", "newtonianvae"], [8, 0, 0, "-", "simulation"], [9, 0, 0, "-", "tool"], [10, 0, 0, "-", "view"]], "models": [[1, 0, 0, "-", "component"], [1, 0, 0, "-", "core"], [1, 0, 0, "-", "pcontrol"]], "models.component": [[1, 1, 1, "", "ABCf"], [1, 1, 1, "", "Decoder"], [1, 1, 1, "", "Encoder"], [1, 1, 1, "", "PXmiddleCat"], [1, 1, 1, "", "Pxhat"], [1, 1, 1, "", "Transition"], [1, 1, 1, "", "Velocity"], [1, 1, 1, "", "VisualDecoder64"], [1, 1, 1, "", "VisualEncoder64"]], "models.component.ABCf": [[1, 2, 1, "", "forward"], [1, 3, 1, "", "training"]], "models.component.Decoder": [[1, 2, 1, "", "forward"], [1, 3, 1, "", "training"]], "models.component.Encoder": [[1, 2, 1, "", "forward"], [1, 3, 1, "", "training"]], "models.component.PXmiddleCat": [[1, 2, 1, "", "forward"], [1, 3, 1, "", "training"]], "models.component.Pxhat": [[1, 2, 1, "", "forward"], [1, 3, 1, "", "training"]], "models.component.Transition": [[1, 2, 1, "", "forward"], [1, 3, 1, "", "training"]], "models.component.Velocity": [[1, 2, 1, "", "forward"], [1, 3, 1, "", "training"]], "models.component.VisualDecoder64": [[1, 2, 1, "", "forward"], [1, 3, 1, "", "training"]], "models.component.VisualEncoder64": [[1, 2, 1, "", "forward"], [1, 3, 1, "", "training"]], "models.core": [[1, 1, 1, "", "NewtonianVAE"], [1, 1, 1, "", "NewtonianVAEBase"], [1, 1, 1, "", "NewtonianVAECell"], [1, 1, 1, "", "NewtonianVAECellBase"], [1, 1, 1, "", "NewtonianVAEDerivation"], [1, 1, 1, "", "NewtonianVAEDerivationCell"], [1, 1, 1, "", "NewtonianVAEV2"], [1, 1, 1, "", "NewtonianVAEV2Base"], [1, 1, 1, "", "NewtonianVAEV2Cell"], [1, 1, 1, "", "NewtonianVAEV2CellBase"], [1, 1, 1, "", "NewtonianVAEV2Derivation"], [1, 1, 1, "", "NewtonianVAEV2DerivationCell"], [1, 1, 1, "", "Stepper"], [1, 5, 1, "", "as_save"], [1, 5, 1, "", "get_NewtonianVAE"], [1, 5, 1, "", "get_NewtonianVAECell"]], "models.core.NewtonianVAE": [[1, 3, 1, "", "training"]], "models.core.NewtonianVAEBase": [[1, 2, 1, "", "forward"], [1, 3, 1, "", "training"]], "models.core.NewtonianVAECell": [[1, 2, 1, "", "forward"], [1, 4, 1, "", "info"], [1, 3, 1, "", "training"]], "models.core.NewtonianVAECellBase": [[1, 1, 1, "", "Pack"], [1, 4, 1, "", "dim_x"], [1, 4, 1, "", "info"], [1, 3, 1, "", "training"]], "models.core.NewtonianVAEDerivation": [[1, 3, 1, "", "cell"], [1, 3, 1, "", "training"]], "models.core.NewtonianVAEDerivationCell": [[1, 4, 1, "", "dim_xhat"], [1, 2, 1, "", "forward"], [1, 4, 1, "", "info"], [1, 3, 1, "", "training"]], "models.core.NewtonianVAEV2": [[1, 3, 1, "", "training"]], "models.core.NewtonianVAEV2Base": [[1, 2, 1, "", "forward"], [1, 3, 1, "", "training"]], "models.core.NewtonianVAEV2Cell": [[1, 2, 1, "", "forward"], [1, 4, 1, "", "info"], [1, 3, 1, "", "training"]], "models.core.NewtonianVAEV2CellBase": [[1, 1, 1, "", "Pack"], [1, 3, 1, "", "training"]], "models.core.NewtonianVAEV2Derivation": [[1, 3, 1, "", "cell"], [1, 3, 1, "", "training"]], "models.core.NewtonianVAEV2DerivationCell": [[1, 4, 1, "", "dim_xhat"], [1, 2, 1, "", "forward"], [1, 4, 1, "", "info"], [1, 3, 1, "", "training"]], "models.core.Stepper": [[1, 1, 1, "", "Pack"], [1, 2, 1, "", "reset"]], "models.pcontrol": [[1, 1, 1, "", "PControl"], [1, 1, 1, "", "PurePControl"]], "models.pcontrol.PControl": [[1, 3, 1, "", "training"]], "models.pcontrol.PurePControl": [[1, 2, 1, "", "get_action"], [1, 2, 1, "", "get_action_from_x"]], "mypython": [[4, 0, 0, "-", "ai"], [3, 0, 0, "-", "error"], [3, 0, 0, "-", "plotutil"], [3, 0, 0, "-", "pyutil"], [3, 0, 0, "-", "terminal"], [3, 0, 0, "-", "vision"]], "mypython.ai": [[4, 0, 0, "-", "torch_util"], [5, 0, 0, "-", "torchprob"], [4, 0, 0, "-", "util"]], "mypython.ai.torch_util": [[4, 5, 1, "", "print_module_params"], [4, 5, 1, "", "reproduce"]], "mypython.ai.torchprob": [[5, 0, 0, "-", "debug"], [6, 0, 0, "-", "distributions"], [5, 0, 0, "-", "functions"]], "mypython.ai.torchprob.debug": [[5, 5, 1, "", "check_dist_model"]], "mypython.ai.torchprob.distributions": [[6, 0, 0, "-", "base"], [6, 0, 0, "-", "bernoulli"], [6, 0, 0, "-", "gmm"], [6, 0, 0, "-", "normal"]], "mypython.ai.torchprob.distributions.base": [[6, 1, 1, "", "Distribution"]], "mypython.ai.torchprob.distributions.base.Distribution": [[6, 2, 1, "", "cond"], [6, 2, 1, "", "decode"], [6, 2, 1, "", "forward"], [6, 2, 1, "", "get_dist_params"], [6, 4, 1, "", "loc"], [6, 2, 1, "", "log_p"], [6, 2, 1, "", "rsample"], [6, 4, 1, "", "scale"], [6, 3, 1, "", "training"]], "mypython.ai.torchprob.distributions.bernoulli": [[6, 1, 1, "", "Bernoulli"], [6, 5, 1, "", "log_bernoulli"]], "mypython.ai.torchprob.distributions.bernoulli.Bernoulli": [[6, 2, 1, "", "cond"], [6, 2, 1, "", "decode"], [6, 2, 1, "", "forward"], [6, 2, 1, "", "get_dist_params"], [6, 4, 1, "", "loc"], [6, 2, 1, "", "log_p"], [6, 4, 1, "", "scale"], [6, 3, 1, "", "training"]], "mypython.ai.torchprob.distributions.gmm": [[6, 1, 1, "", "GMM"], [6, 5, 1, "", "log_gmm"]], "mypython.ai.torchprob.distributions.gmm.GMM": [[6, 2, 1, "", "cond"], [6, 2, 1, "", "forward"], [6, 2, 1, "", "log_p"], [6, 3, 1, "", "training"]], "mypython.ai.torchprob.distributions.normal": [[6, 1, 1, "", "Normal"], [6, 5, 1, "", "log_normal"], [6, 5, 1, "", "normal_sample"]], "mypython.ai.torchprob.distributions.normal.Normal": [[6, 2, 1, "", "cond"], [6, 2, 1, "", "decode"], [6, 2, 1, "", "forward"], [6, 2, 1, "", "get_dist_params"], [6, 4, 1, "", "loc"], [6, 2, 1, "", "log_p"], [6, 2, 1, "", "rsample"], [6, 4, 1, "", "scale"], [6, 3, 1, "", "training"]], "mypython.ai.torchprob.functions": [[5, 5, 1, "", "KL_normal_normal"], [5, 5, 1, "", "KLdiv"], [5, 5, 1, "", "log"]], "mypython.ai.util": [[4, 1, 1, "", "BatchIdx"]], "mypython.error": [[3, 5, 1, "", "check_dir"], [3, 5, 1, "", "check_file"]], "mypython.plotutil": [[3, 5, 1, "", "Axis_aspect_2d"], [3, 5, 1, "", "anim_mode"], [3, 5, 1, "", "cartesian_coordinate"], [3, 5, 1, "", "cmap"], [3, 5, 1, "", "get_figsize"]], "mypython.pyutil": [[3, 5, 1, "", "s2dhms"], [3, 5, 1, "", "s2dhms_str"]], "mypython.terminal": [[3, 1, 1, "", "Color"], [3, 1, 1, "", "Prompt"]], "mypython.terminal.Color": [[3, 3, 1, "", "bg_gold"], [3, 2, 1, "", "bg_rgb"], [3, 3, 1, "", "black"], [3, 3, 1, "", "blue"], [3, 3, 1, "", "boldblack"], [3, 3, 1, "", "boldblue"], [3, 3, 1, "", "boldcyan"], [3, 3, 1, "", "boldgreen"], [3, 3, 1, "", "boldmagenta"], [3, 3, 1, "", "boldred"], [3, 3, 1, "", "boldwhite"], [3, 3, 1, "", "boldyellow"], [3, 3, 1, "", "coral"], [3, 3, 1, "", "cyan"], [3, 3, 1, "", "green"], [3, 3, 1, "", "hotpink"], [3, 3, 1, "", "magenta"], [3, 3, 1, "", "orange"], [3, 2, 1, "", "pprint"], [3, 2, 1, "", "print"], [3, 3, 1, "", "purple"], [3, 3, 1, "", "red"], [3, 3, 1, "", "reset"], [3, 2, 1, "", "rgb"], [3, 3, 1, "", "white"], [3, 3, 1, "", "yellow"]], "mypython.terminal.Prompt": [[3, 3, 1, "", "del_line"], [3, 2, 1, "", "fit_terminal"], [3, 2, 1, "", "print_one_line"]], "mypython.vision": [[3, 5, 1, "", "BGR2RGB"], [3, 5, 1, "", "CHW2HWC"], [3, 5, 1, "", "HWC2CHW"], [3, 5, 1, "", "RGB2BGR"], [3, 5, 1, "", "cnn2cv"], [3, 5, 1, "", "cnn2plt"], [3, 5, 1, "", "cv2cnn"], [3, 5, 1, "", "cv2plt"], [3, 5, 1, "", "plt2cnn"]], "newtonianvae": [[7, 0, 0, "-", "load"]], "newtonianvae.load": [[7, 5, 1, "", "get_path_data"], [7, 5, 1, "", "load"]], "simulation": [[8, 0, 0, "-", "env"]], "simulation.env": [[8, 1, 1, "", "ControlSuiteEnv"], [8, 1, 1, "", "ControlSuiteEnvWrap"], [8, 5, 1, "", "img2obs"], [8, 5, 1, "", "obs2img"], [8, 5, 1, "", "postprocess_observation"], [8, 5, 1, "", "preprocess_observation_"], [8, 5, 1, "", "reacher_default2endeffectorpos"], [8, 5, 1, "", "reacher_fix_arg_range"], [8, 5, 1, "", "roll_2d"]], "simulation.env.ControlSuiteEnv": [[8, 4, 1, "", "action_range"], [8, 4, 1, "", "action_size"], [8, 2, 1, "", "adjust_camera"], [8, 2, 1, "", "close"], [8, 4, 1, "", "observation_size"], [8, 2, 1, "", "render"], [8, 2, 1, "", "reset"], [8, 2, 1, "", "sample_random_action"], [8, 2, 1, "", "step"], [8, 2, 1, "", "zeros_action"]], "simulation.env.ControlSuiteEnvWrap": [[8, 2, 1, "", "adjust_camera"], [8, 2, 1, "", "position_wrapper"], [8, 2, 1, "", "step"]], "tool": [[9, 0, 0, "-", "argset"], [9, 0, 0, "-", "checker"], [9, 0, 0, "-", "dataloader"], [9, 0, 0, "-", "params"], [9, 0, 0, "-", "util"], [9, 0, 0, "-", "visualhandlerbase"]], "tool.argset": [[9, 5, 1, "", "alpha"], [9, 5, 1, "", "anim_mode"], [9, 5, 1, "", "cf"], [9, 5, 1, "", "cf_eval"], [9, 5, 1, "", "cf_simenv"], [9, 5, 1, "", "episodes"], [9, 5, 1, "", "fix_xmap_size"], [9, 5, 1, "", "goal_img"], [9, 5, 1, "", "output"], [9, 5, 1, "", "path_data"], [9, 5, 1, "", "path_model"], [9, 5, 1, "", "path_result"], [9, 5, 1, "", "path_save"], [9, 5, 1, "", "position_size"], [9, 5, 1, "", "resume"], [9, 5, 1, "", "save_anim"], [9, 5, 1, "", "steps"], [9, 5, 1, "", "watch"]], "tool.checker": [[9, 5, 1, "", "cuda"], [9, 5, 1, "", "is_same_data"], [9, 5, 1, "", "large_episodes"]], "tool.dataloader": [[9, 1, 1, "", "DataLoader"]], "tool.params": [[9, 1, 1, "", "Params"], [9, 1, 1, "", "ParamsEval"]], "tool.params.ParamsEval": [[9, 4, 1, "", "kwargs"]], "tool.util": [[9, 1, 1, "", "Preferences"], [9, 5, 1, "", "backup"], [9, 5, 1, "", "delete_useless_saves"], [9, 5, 1, "", "get_data_path"], [9, 5, 1, "", "select_date"], [9, 5, 1, "", "select_weight"]], "tool.util.Preferences": [[9, 2, 1, "", "get"], [9, 2, 1, "", "put"]], "tool.visualhandlerbase": [[9, 1, 1, "", "VisualHandlerBase"]], "tool.visualhandlerbase.VisualHandlerBase": [[9, 2, 1, "", "call_end"], [9, 2, 1, "", "call_end_init"], [9, 4, 1, "", "is_running"], [9, 2, 1, "", "plot"], [9, 2, 1, "", "wait_init"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "scratch": 0, "newtonianva": [0, 7], "": 0, "document": 0, "indic": 0, "tabl": 0, "model": 1, "packag": [1, 3, 4, 5, 6, 7, 8, 9, 10], "submodul": [1, 3, 4, 5, 6, 7, 8, 9, 10], "compon": 1, "modul": [1, 3, 4, 5, 6, 7, 8, 9, 10], "core": 1, "pcontrol": 1, "content": [1, 3, 4, 5, 6, 7, 8, 9, 10], "sourc": 2, "mypython": [3, 4, 5, 6], "subpackag": [3, 4, 5], "error": 3, "plotutil": 3, "pyutil": 3, "termin": 3, "vision": 3, "ai": [4, 5, 6], "torch_util": 4, "util": [4, 9], "torchprob": [5, 6], "debug": 5, "function": 5, "distribut": 6, "base": 6, "bernoulli": 6, "gmm": 6, "normal": 6, "correl": 7, "load": 7, "reconstruct": 7, "show_loss": 7, "train": 7, "simul": 8, "collect_data": 8, "control": 8, "env": 8, "overrid": 8, "tool": 9, "argset": 9, "checker": 9, "dataload": 9, "param": 9, "visualhandlerbas": 9, "view": 10, "show_data": 10, "show_model": 10, "train_tensorboard": 10, "train_visdom": 10}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to Scratch of NewtonianVAE\u2019s documentation!": [[0, "welcome-to-scratch-of-newtonianvae-s-documentation"]], "Indices and tables": [[0, "indices-and-tables"]], "models package": [[1, "models-package"]], "Submodules": [[1, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"]], "models.component module": [[1, "module-models.component"]], "models.core module": [[1, "module-models.core"]], "models.pcontrol module": [[1, "module-models.pcontrol"]], "Module contents": [[1, "module-models"], [3, "module-mypython"], [4, "module-mypython.ai"], [5, "module-mypython.ai.torchprob"], [6, "module-mypython.ai.torchprob.distributions"], [7, "module-newtonianvae"], [8, "module-simulation"], [9, "module-tool"], [10, "module-view"]], "source": [[2, "source"]], "mypython package": [[3, "mypython-package"]], "Subpackages": [[3, "subpackages"], [4, "subpackages"], [5, "subpackages"]], "mypython.error module": [[3, "module-mypython.error"]], "mypython.plotutil module": [[3, "module-mypython.plotutil"]], "mypython.pyutil module": [[3, "module-mypython.pyutil"]], "mypython.terminal module": [[3, "module-mypython.terminal"]], "mypython.vision module": [[3, "module-mypython.vision"]], "mypython.ai package": [[4, "mypython-ai-package"]], "mypython.ai.torch_util module": [[4, "module-mypython.ai.torch_util"]], "mypython.ai.util module": [[4, "module-mypython.ai.util"]], "mypython.ai.torchprob package": [[5, "mypython-ai-torchprob-package"]], "mypython.ai.torchprob.debug module": [[5, "module-mypython.ai.torchprob.debug"]], "mypython.ai.torchprob.functions module": [[5, "module-mypython.ai.torchprob.functions"]], "mypython.ai.torchprob.distributions package": [[6, "mypython-ai-torchprob-distributions-package"]], "mypython.ai.torchprob.distributions.base module": [[6, "module-mypython.ai.torchprob.distributions.base"]], "mypython.ai.torchprob.distributions.bernoulli module": [[6, "module-mypython.ai.torchprob.distributions.bernoulli"]], "mypython.ai.torchprob.distributions.gmm module": [[6, "module-mypython.ai.torchprob.distributions.gmm"]], "mypython.ai.torchprob.distributions.normal module": [[6, "module-mypython.ai.torchprob.distributions.normal"]], "newtonianvae package": [[7, "newtonianvae-package"]], "newtonianvae.correlation module": [[7, "newtonianvae-correlation-module"]], "newtonianvae.load module": [[7, "module-newtonianvae.load"]], "newtonianvae.reconstruct module": [[7, "newtonianvae-reconstruct-module"]], "newtonianvae.show_loss module": [[7, "newtonianvae-show-loss-module"]], "newtonianvae.train module": [[7, "newtonianvae-train-module"]], "simulation package": [[8, "simulation-package"]], "simulation.collect_data module": [[8, "simulation-collect-data-module"]], "simulation.control module": [[8, "simulation-control-module"]], "simulation.env module": [[8, "module-simulation.env"]], "simulation.override module": [[8, "simulation-override-module"]], "tool package": [[9, "tool-package"]], "tool.argset module": [[9, "module-tool.argset"]], "tool.checker module": [[9, "module-tool.checker"]], "tool.dataloader module": [[9, "module-tool.dataloader"]], "tool.params module": [[9, "module-tool.params"]], "tool.util module": [[9, "module-tool.util"]], "tool.visualhandlerbase module": [[9, "module-tool.visualhandlerbase"]], "view package": [[10, "view-package"]], "view.show_data module": [[10, "view-show-data-module"]], "view.show_model module": [[10, "view-show-model-module"]], "view.train_tensorboard module": [[10, "view-train-tensorboard-module"]], "view.train_visdom module": [[10, "view-train-visdom-module"]]}, "indexentries": {"abcf (class in models.component)": [[1, "models.component.ABCf"]], "decoder (class in models.component)": [[1, "models.component.Decoder"]], "encoder (class in models.component)": [[1, "models.component.Encoder"]], "newtonianvae (class in models.core)": [[1, "models.core.NewtonianVAE"]], "newtonianvaebase (class in models.core)": [[1, "models.core.NewtonianVAEBase"]], "newtonianvaecell (class in models.core)": [[1, "models.core.NewtonianVAECell"]], "newtonianvaecellbase (class in models.core)": [[1, "models.core.NewtonianVAECellBase"]], "newtonianvaecellbase.pack (class in models.core)": [[1, "models.core.NewtonianVAECellBase.Pack"]], "newtonianvaederivation (class in models.core)": [[1, "models.core.NewtonianVAEDerivation"]], "newtonianvaederivationcell (class in models.core)": [[1, "models.core.NewtonianVAEDerivationCell"]], "newtonianvaev2 (class in models.core)": [[1, "models.core.NewtonianVAEV2"]], "newtonianvaev2base (class in models.core)": [[1, "models.core.NewtonianVAEV2Base"]], "newtonianvaev2cell (class in models.core)": [[1, "models.core.NewtonianVAEV2Cell"]], "newtonianvaev2cellbase (class in models.core)": [[1, "models.core.NewtonianVAEV2CellBase"]], "newtonianvaev2cellbase.pack (class in models.core)": [[1, "models.core.NewtonianVAEV2CellBase.Pack"]], "newtonianvaev2derivation (class in models.core)": [[1, "models.core.NewtonianVAEV2Derivation"]], "newtonianvaev2derivationcell (class in models.core)": [[1, "models.core.NewtonianVAEV2DerivationCell"]], "pcontrol (class in models.pcontrol)": [[1, "models.pcontrol.PControl"]], "pxmiddlecat (class in models.component)": [[1, "models.component.PXmiddleCat"]], "purepcontrol (class in models.pcontrol)": [[1, "models.pcontrol.PurePControl"]], "pxhat (class in models.component)": [[1, "models.component.Pxhat"]], "stepper (class in models.core)": [[1, "models.core.Stepper"]], "stepper.pack (class in models.core)": [[1, "models.core.Stepper.Pack"]], "transition (class in models.component)": [[1, "models.component.Transition"]], "velocity (class in models.component)": [[1, "models.component.Velocity"]], "visualdecoder64 (class in models.component)": [[1, "models.component.VisualDecoder64"]], "visualencoder64 (class in models.component)": [[1, "models.component.VisualEncoder64"]], "as_save() (in module models.core)": [[1, "models.core.as_save"]], "cell (models.core.newtonianvaederivation attribute)": [[1, "models.core.NewtonianVAEDerivation.cell"]], "cell (models.core.newtonianvaev2derivation attribute)": [[1, "models.core.NewtonianVAEV2Derivation.cell"]], "dim_x (models.core.newtonianvaecellbase property)": [[1, "models.core.NewtonianVAECellBase.dim_x"]], "dim_xhat (models.core.newtonianvaederivationcell property)": [[1, "models.core.NewtonianVAEDerivationCell.dim_xhat"]], "dim_xhat (models.core.newtonianvaev2derivationcell property)": [[1, "models.core.NewtonianVAEV2DerivationCell.dim_xhat"]], "forward() (models.component.abcf method)": [[1, "models.component.ABCf.forward"]], "forward() (models.component.decoder method)": [[1, "models.component.Decoder.forward"]], "forward() (models.component.encoder method)": [[1, "models.component.Encoder.forward"]], "forward() (models.component.pxmiddlecat method)": [[1, "models.component.PXmiddleCat.forward"]], "forward() (models.component.pxhat method)": [[1, "models.component.Pxhat.forward"]], "forward() (models.component.transition method)": [[1, "models.component.Transition.forward"]], "forward() (models.component.velocity method)": [[1, "models.component.Velocity.forward"]], "forward() (models.component.visualdecoder64 method)": [[1, "models.component.VisualDecoder64.forward"]], "forward() (models.component.visualencoder64 method)": [[1, "models.component.VisualEncoder64.forward"]], "forward() (models.core.newtonianvaebase method)": [[1, "models.core.NewtonianVAEBase.forward"]], "forward() (models.core.newtonianvaecell method)": [[1, "models.core.NewtonianVAECell.forward"]], "forward() (models.core.newtonianvaederivationcell method)": [[1, "models.core.NewtonianVAEDerivationCell.forward"]], "forward() (models.core.newtonianvaev2base method)": [[1, "models.core.NewtonianVAEV2Base.forward"]], "forward() (models.core.newtonianvaev2cell method)": [[1, "models.core.NewtonianVAEV2Cell.forward"]], "forward() (models.core.newtonianvaev2derivationcell method)": [[1, "models.core.NewtonianVAEV2DerivationCell.forward"]], "get_newtonianvae() (in module models.core)": [[1, "models.core.get_NewtonianVAE"]], "get_newtonianvaecell() (in module models.core)": [[1, "models.core.get_NewtonianVAECell"]], "get_action() (models.pcontrol.purepcontrol method)": [[1, "models.pcontrol.PurePControl.get_action"]], "get_action_from_x() (models.pcontrol.purepcontrol method)": [[1, "models.pcontrol.PurePControl.get_action_from_x"]], "info (models.core.newtonianvaecell property)": [[1, "models.core.NewtonianVAECell.info"]], "info (models.core.newtonianvaecellbase property)": [[1, "models.core.NewtonianVAECellBase.info"]], "info (models.core.newtonianvaederivationcell property)": [[1, "models.core.NewtonianVAEDerivationCell.info"]], "info (models.core.newtonianvaev2cell property)": [[1, "models.core.NewtonianVAEV2Cell.info"]], "info (models.core.newtonianvaev2derivationcell property)": [[1, "models.core.NewtonianVAEV2DerivationCell.info"]], "models": [[1, "module-models"]], "models.component": [[1, "module-models.component"]], "models.core": [[1, "module-models.core"]], "models.pcontrol": [[1, "module-models.pcontrol"]], "module": [[1, "module-models"], [1, "module-models.component"], [1, "module-models.core"], [1, "module-models.pcontrol"], [3, "module-mypython"], [3, "module-mypython.error"], [3, "module-mypython.plotutil"], [3, "module-mypython.pyutil"], [3, "module-mypython.terminal"], [3, "module-mypython.vision"], [4, "module-mypython.ai"], [4, "module-mypython.ai.torch_util"], [4, "module-mypython.ai.util"], [5, "module-mypython.ai.torchprob"], [5, "module-mypython.ai.torchprob.debug"], [5, "module-mypython.ai.torchprob.functions"], [6, "module-mypython.ai.torchprob.distributions"], [6, "module-mypython.ai.torchprob.distributions.base"], [6, "module-mypython.ai.torchprob.distributions.bernoulli"], [6, "module-mypython.ai.torchprob.distributions.gmm"], [6, "module-mypython.ai.torchprob.distributions.normal"], [7, "module-newtonianvae"], [7, "module-newtonianvae.load"], [8, "module-simulation"], [8, "module-simulation.env"], [9, "module-tool"], [9, "module-tool.argset"], [9, "module-tool.checker"], [9, "module-tool.dataloader"], [9, "module-tool.params"], [9, "module-tool.util"], [9, "module-tool.visualhandlerbase"], [10, "module-view"]], "reset() (models.core.stepper method)": [[1, "models.core.Stepper.reset"]], "training (models.component.abcf attribute)": [[1, "models.component.ABCf.training"]], "training (models.component.decoder attribute)": [[1, "models.component.Decoder.training"]], "training (models.component.encoder attribute)": [[1, "models.component.Encoder.training"]], "training (models.component.pxmiddlecat attribute)": [[1, "models.component.PXmiddleCat.training"]], "training (models.component.pxhat attribute)": [[1, "models.component.Pxhat.training"]], "training (models.component.transition attribute)": [[1, "models.component.Transition.training"]], "training (models.component.velocity attribute)": [[1, "models.component.Velocity.training"]], "training (models.component.visualdecoder64 attribute)": [[1, "models.component.VisualDecoder64.training"]], "training (models.component.visualencoder64 attribute)": [[1, "models.component.VisualEncoder64.training"]], "training (models.core.newtonianvae attribute)": [[1, "models.core.NewtonianVAE.training"]], "training (models.core.newtonianvaebase attribute)": [[1, "models.core.NewtonianVAEBase.training"]], "training (models.core.newtonianvaecell attribute)": [[1, "models.core.NewtonianVAECell.training"]], "training (models.core.newtonianvaecellbase attribute)": [[1, "models.core.NewtonianVAECellBase.training"]], "training (models.core.newtonianvaederivation attribute)": [[1, "models.core.NewtonianVAEDerivation.training"]], "training (models.core.newtonianvaederivationcell attribute)": [[1, "models.core.NewtonianVAEDerivationCell.training"]], "training (models.core.newtonianvaev2 attribute)": [[1, "models.core.NewtonianVAEV2.training"]], "training (models.core.newtonianvaev2base attribute)": [[1, "models.core.NewtonianVAEV2Base.training"]], "training (models.core.newtonianvaev2cell attribute)": [[1, "models.core.NewtonianVAEV2Cell.training"]], "training (models.core.newtonianvaev2cellbase attribute)": [[1, "models.core.NewtonianVAEV2CellBase.training"]], "training (models.core.newtonianvaev2derivation attribute)": [[1, "models.core.NewtonianVAEV2Derivation.training"]], "training (models.core.newtonianvaev2derivationcell attribute)": [[1, "models.core.NewtonianVAEV2DerivationCell.training"]], "training (models.pcontrol.pcontrol attribute)": [[1, "models.pcontrol.PControl.training"]], "axis_aspect_2d() (in module mypython.plotutil)": [[3, "mypython.plotutil.Axis_aspect_2d"]], "bgr2rgb() (in module mypython.vision)": [[3, "mypython.vision.BGR2RGB"]], "chw2hwc() (in module mypython.vision)": [[3, "mypython.vision.CHW2HWC"]], "color (class in mypython.terminal)": [[3, "mypython.terminal.Color"]], "hwc2chw() (in module mypython.vision)": [[3, "mypython.vision.HWC2CHW"]], "prompt (class in mypython.terminal)": [[3, "mypython.terminal.Prompt"]], "rgb2bgr() (in module mypython.vision)": [[3, "mypython.vision.RGB2BGR"]], "anim_mode() (in module mypython.plotutil)": [[3, "mypython.plotutil.anim_mode"]], "bg_gold (mypython.terminal.color attribute)": [[3, "mypython.terminal.Color.bg_gold"]], "bg_rgb() (mypython.terminal.color method)": [[3, "mypython.terminal.Color.bg_rgb"]], "black (mypython.terminal.color attribute)": [[3, "mypython.terminal.Color.black"]], "blue (mypython.terminal.color attribute)": [[3, "mypython.terminal.Color.blue"]], "boldblack (mypython.terminal.color attribute)": [[3, "mypython.terminal.Color.boldblack"]], "boldblue (mypython.terminal.color attribute)": [[3, "mypython.terminal.Color.boldblue"]], "boldcyan (mypython.terminal.color attribute)": [[3, "mypython.terminal.Color.boldcyan"]], "boldgreen (mypython.terminal.color attribute)": [[3, "mypython.terminal.Color.boldgreen"]], "boldmagenta (mypython.terminal.color attribute)": [[3, "mypython.terminal.Color.boldmagenta"]], "boldred (mypython.terminal.color attribute)": [[3, "mypython.terminal.Color.boldred"]], "boldwhite (mypython.terminal.color attribute)": [[3, "mypython.terminal.Color.boldwhite"]], "boldyellow (mypython.terminal.color attribute)": [[3, "mypython.terminal.Color.boldyellow"]], "cartesian_coordinate() (in module mypython.plotutil)": [[3, "mypython.plotutil.cartesian_coordinate"]], "check_dir() (in module mypython.error)": [[3, "mypython.error.check_dir"]], "check_file() (in module mypython.error)": [[3, "mypython.error.check_file"]], "cmap() (in module mypython.plotutil)": [[3, "mypython.plotutil.cmap"]], "cnn2cv() (in module mypython.vision)": [[3, "mypython.vision.cnn2cv"]], "cnn2plt() (in module mypython.vision)": [[3, "mypython.vision.cnn2plt"]], "coral (mypython.terminal.color attribute)": [[3, "mypython.terminal.Color.coral"]], "cv2cnn() (in module mypython.vision)": [[3, "mypython.vision.cv2cnn"]], "cv2plt() (in module mypython.vision)": [[3, "mypython.vision.cv2plt"]], "cyan (mypython.terminal.color attribute)": [[3, "mypython.terminal.Color.cyan"]], "del_line (mypython.terminal.prompt attribute)": [[3, "mypython.terminal.Prompt.del_line"]], "fit_terminal() (mypython.terminal.prompt static method)": [[3, "mypython.terminal.Prompt.fit_terminal"]], "get_figsize() (in module mypython.plotutil)": [[3, "mypython.plotutil.get_figsize"]], "green (mypython.terminal.color attribute)": [[3, "mypython.terminal.Color.green"]], "hotpink (mypython.terminal.color attribute)": [[3, "mypython.terminal.Color.hotpink"]], "magenta (mypython.terminal.color attribute)": [[3, "mypython.terminal.Color.magenta"]], "mypython": [[3, "module-mypython"]], "mypython.error": [[3, "module-mypython.error"]], "mypython.plotutil": [[3, "module-mypython.plotutil"]], "mypython.pyutil": [[3, "module-mypython.pyutil"]], "mypython.terminal": [[3, "module-mypython.terminal"]], "mypython.vision": [[3, "module-mypython.vision"]], "orange (mypython.terminal.color attribute)": [[3, "mypython.terminal.Color.orange"]], "plt2cnn() (in module mypython.vision)": [[3, "mypython.vision.plt2cnn"]], "pprint() (mypython.terminal.color method)": [[3, "mypython.terminal.Color.pprint"]], "print() (mypython.terminal.color method)": [[3, "mypython.terminal.Color.print"]], "print_one_line() (mypython.terminal.prompt static method)": [[3, "mypython.terminal.Prompt.print_one_line"]], "purple (mypython.terminal.color attribute)": [[3, "mypython.terminal.Color.purple"]], "red (mypython.terminal.color attribute)": [[3, "mypython.terminal.Color.red"]], "reset (mypython.terminal.color attribute)": [[3, "mypython.terminal.Color.reset"]], "rgb() (mypython.terminal.color method)": [[3, "mypython.terminal.Color.rgb"]], "s2dhms() (in module mypython.pyutil)": [[3, "mypython.pyutil.s2dhms"]], "s2dhms_str() (in module mypython.pyutil)": [[3, "mypython.pyutil.s2dhms_str"]], "white (mypython.terminal.color attribute)": [[3, "mypython.terminal.Color.white"]], "yellow (mypython.terminal.color attribute)": [[3, "mypython.terminal.Color.yellow"]], "batchidx (class in mypython.ai.util)": [[4, "mypython.ai.util.BatchIdx"]], "mypython.ai": [[4, "module-mypython.ai"]], "mypython.ai.torch_util": [[4, "module-mypython.ai.torch_util"]], "mypython.ai.util": [[4, "module-mypython.ai.util"]], "print_module_params() (in module mypython.ai.torch_util)": [[4, "mypython.ai.torch_util.print_module_params"]], "reproduce() (in module mypython.ai.torch_util)": [[4, "mypython.ai.torch_util.reproduce"]], "kl_normal_normal() (in module mypython.ai.torchprob.functions)": [[5, "mypython.ai.torchprob.functions.KL_normal_normal"]], "kldiv() (in module mypython.ai.torchprob.functions)": [[5, "mypython.ai.torchprob.functions.KLdiv"]], "check_dist_model() (in module mypython.ai.torchprob.debug)": [[5, "mypython.ai.torchprob.debug.check_dist_model"]], "log() (in module mypython.ai.torchprob.functions)": [[5, "mypython.ai.torchprob.functions.log"]], "mypython.ai.torchprob": [[5, "module-mypython.ai.torchprob"]], "mypython.ai.torchprob.debug": [[5, "module-mypython.ai.torchprob.debug"]], "mypython.ai.torchprob.functions": [[5, "module-mypython.ai.torchprob.functions"]], "bernoulli (class in mypython.ai.torchprob.distributions.bernoulli)": [[6, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli"]], "distribution (class in mypython.ai.torchprob.distributions.base)": [[6, "mypython.ai.torchprob.distributions.base.Distribution"]], "gmm (class in mypython.ai.torchprob.distributions.gmm)": [[6, "mypython.ai.torchprob.distributions.gmm.GMM"]], "normal (class in mypython.ai.torchprob.distributions.normal)": [[6, "mypython.ai.torchprob.distributions.normal.Normal"]], "cond() (mypython.ai.torchprob.distributions.base.distribution method)": [[6, "mypython.ai.torchprob.distributions.base.Distribution.cond"]], "cond() (mypython.ai.torchprob.distributions.bernoulli.bernoulli method)": [[6, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.cond"]], "cond() (mypython.ai.torchprob.distributions.gmm.gmm method)": [[6, "mypython.ai.torchprob.distributions.gmm.GMM.cond"]], "cond() (mypython.ai.torchprob.distributions.normal.normal method)": [[6, "mypython.ai.torchprob.distributions.normal.Normal.cond"]], "decode() (mypython.ai.torchprob.distributions.base.distribution method)": [[6, "mypython.ai.torchprob.distributions.base.Distribution.decode"]], "decode() (mypython.ai.torchprob.distributions.bernoulli.bernoulli method)": [[6, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.decode"]], "decode() (mypython.ai.torchprob.distributions.normal.normal method)": [[6, "mypython.ai.torchprob.distributions.normal.Normal.decode"]], "forward() (mypython.ai.torchprob.distributions.base.distribution method)": [[6, "mypython.ai.torchprob.distributions.base.Distribution.forward"]], "forward() (mypython.ai.torchprob.distributions.bernoulli.bernoulli method)": [[6, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.forward"]], "forward() (mypython.ai.torchprob.distributions.gmm.gmm method)": [[6, "mypython.ai.torchprob.distributions.gmm.GMM.forward"]], "forward() (mypython.ai.torchprob.distributions.normal.normal method)": [[6, "mypython.ai.torchprob.distributions.normal.Normal.forward"]], "get_dist_params() (mypython.ai.torchprob.distributions.base.distribution method)": [[6, "mypython.ai.torchprob.distributions.base.Distribution.get_dist_params"]], "get_dist_params() (mypython.ai.torchprob.distributions.bernoulli.bernoulli method)": [[6, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.get_dist_params"]], "get_dist_params() (mypython.ai.torchprob.distributions.normal.normal method)": [[6, "mypython.ai.torchprob.distributions.normal.Normal.get_dist_params"]], "loc (mypython.ai.torchprob.distributions.base.distribution property)": [[6, "mypython.ai.torchprob.distributions.base.Distribution.loc"]], "loc (mypython.ai.torchprob.distributions.bernoulli.bernoulli property)": [[6, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.loc"]], "loc (mypython.ai.torchprob.distributions.normal.normal property)": [[6, "mypython.ai.torchprob.distributions.normal.Normal.loc"]], "log_bernoulli() (in module mypython.ai.torchprob.distributions.bernoulli)": [[6, "mypython.ai.torchprob.distributions.bernoulli.log_bernoulli"]], "log_gmm() (in module mypython.ai.torchprob.distributions.gmm)": [[6, "mypython.ai.torchprob.distributions.gmm.log_gmm"]], "log_normal() (in module mypython.ai.torchprob.distributions.normal)": [[6, "mypython.ai.torchprob.distributions.normal.log_normal"]], "log_p() (mypython.ai.torchprob.distributions.base.distribution method)": [[6, "mypython.ai.torchprob.distributions.base.Distribution.log_p"]], "log_p() (mypython.ai.torchprob.distributions.bernoulli.bernoulli method)": [[6, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.log_p"]], "log_p() (mypython.ai.torchprob.distributions.gmm.gmm method)": [[6, "mypython.ai.torchprob.distributions.gmm.GMM.log_p"]], "log_p() (mypython.ai.torchprob.distributions.normal.normal method)": [[6, "mypython.ai.torchprob.distributions.normal.Normal.log_p"]], "mypython.ai.torchprob.distributions": [[6, "module-mypython.ai.torchprob.distributions"]], "mypython.ai.torchprob.distributions.base": [[6, "module-mypython.ai.torchprob.distributions.base"]], "mypython.ai.torchprob.distributions.bernoulli": [[6, "module-mypython.ai.torchprob.distributions.bernoulli"]], "mypython.ai.torchprob.distributions.gmm": [[6, "module-mypython.ai.torchprob.distributions.gmm"]], "mypython.ai.torchprob.distributions.normal": [[6, "module-mypython.ai.torchprob.distributions.normal"]], "normal_sample() (in module mypython.ai.torchprob.distributions.normal)": [[6, "mypython.ai.torchprob.distributions.normal.normal_sample"]], "rsample() (mypython.ai.torchprob.distributions.base.distribution method)": [[6, "mypython.ai.torchprob.distributions.base.Distribution.rsample"]], "rsample() (mypython.ai.torchprob.distributions.normal.normal method)": [[6, "mypython.ai.torchprob.distributions.normal.Normal.rsample"]], "scale (mypython.ai.torchprob.distributions.base.distribution property)": [[6, "mypython.ai.torchprob.distributions.base.Distribution.scale"]], "scale (mypython.ai.torchprob.distributions.bernoulli.bernoulli property)": [[6, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.scale"]], "scale (mypython.ai.torchprob.distributions.normal.normal property)": [[6, "mypython.ai.torchprob.distributions.normal.Normal.scale"]], "training (mypython.ai.torchprob.distributions.base.distribution attribute)": [[6, "mypython.ai.torchprob.distributions.base.Distribution.training"]], "training (mypython.ai.torchprob.distributions.bernoulli.bernoulli attribute)": [[6, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.training"]], "training (mypython.ai.torchprob.distributions.gmm.gmm attribute)": [[6, "mypython.ai.torchprob.distributions.gmm.GMM.training"]], "training (mypython.ai.torchprob.distributions.normal.normal attribute)": [[6, "mypython.ai.torchprob.distributions.normal.Normal.training"]], "get_path_data() (in module newtonianvae.load)": [[7, "newtonianvae.load.get_path_data"]], "load() (in module newtonianvae.load)": [[7, "newtonianvae.load.load"]], "newtonianvae": [[7, "module-newtonianvae"]], "newtonianvae.load": [[7, "module-newtonianvae.load"]], "controlsuiteenv (class in simulation.env)": [[8, "simulation.env.ControlSuiteEnv"]], "controlsuiteenvwrap (class in simulation.env)": [[8, "simulation.env.ControlSuiteEnvWrap"]], "action_range (simulation.env.controlsuiteenv property)": [[8, "simulation.env.ControlSuiteEnv.action_range"]], "action_size (simulation.env.controlsuiteenv property)": [[8, "simulation.env.ControlSuiteEnv.action_size"]], "adjust_camera() (simulation.env.controlsuiteenv method)": [[8, "simulation.env.ControlSuiteEnv.adjust_camera"]], "adjust_camera() (simulation.env.controlsuiteenvwrap method)": [[8, "simulation.env.ControlSuiteEnvWrap.adjust_camera"]], "close() (simulation.env.controlsuiteenv method)": [[8, "simulation.env.ControlSuiteEnv.close"]], "img2obs() (in module simulation.env)": [[8, "simulation.env.img2obs"]], "obs2img() (in module simulation.env)": [[8, "simulation.env.obs2img"]], "observation_size (simulation.env.controlsuiteenv property)": [[8, "simulation.env.ControlSuiteEnv.observation_size"]], "position_wrapper() (simulation.env.controlsuiteenvwrap static method)": [[8, "simulation.env.ControlSuiteEnvWrap.position_wrapper"]], "postprocess_observation() (in module simulation.env)": [[8, "simulation.env.postprocess_observation"]], "preprocess_observation_() (in module simulation.env)": [[8, "simulation.env.preprocess_observation_"]], "reacher_default2endeffectorpos() (in module simulation.env)": [[8, "simulation.env.reacher_default2endeffectorpos"]], "reacher_fix_arg_range() (in module simulation.env)": [[8, "simulation.env.reacher_fix_arg_range"]], "render() (simulation.env.controlsuiteenv method)": [[8, "simulation.env.ControlSuiteEnv.render"]], "reset() (simulation.env.controlsuiteenv method)": [[8, "simulation.env.ControlSuiteEnv.reset"]], "roll_2d() (in module simulation.env)": [[8, "simulation.env.roll_2d"]], "sample_random_action() (simulation.env.controlsuiteenv method)": [[8, "simulation.env.ControlSuiteEnv.sample_random_action"]], "simulation": [[8, "module-simulation"]], "simulation.env": [[8, "module-simulation.env"]], "step() (simulation.env.controlsuiteenv method)": [[8, "simulation.env.ControlSuiteEnv.step"]], "step() (simulation.env.controlsuiteenvwrap method)": [[8, "simulation.env.ControlSuiteEnvWrap.step"]], "zeros_action() (simulation.env.controlsuiteenv method)": [[8, "simulation.env.ControlSuiteEnv.zeros_action"]], "dataloader (class in tool.dataloader)": [[9, "tool.dataloader.DataLoader"]], "params (class in tool.params)": [[9, "tool.params.Params"]], "paramseval (class in tool.params)": [[9, "tool.params.ParamsEval"]], "preferences (class in tool.util)": [[9, "tool.util.Preferences"]], "visualhandlerbase (class in tool.visualhandlerbase)": [[9, "tool.visualhandlerbase.VisualHandlerBase"]], "alpha() (in module tool.argset)": [[9, "tool.argset.alpha"]], "anim_mode() (in module tool.argset)": [[9, "tool.argset.anim_mode"]], "backup() (in module tool.util)": [[9, "tool.util.backup"]], "call_end() (tool.visualhandlerbase.visualhandlerbase method)": [[9, "tool.visualhandlerbase.VisualHandlerBase.call_end"]], "call_end_init() (tool.visualhandlerbase.visualhandlerbase method)": [[9, "tool.visualhandlerbase.VisualHandlerBase.call_end_init"]], "cf() (in module tool.argset)": [[9, "tool.argset.cf"]], "cf_eval() (in module tool.argset)": [[9, "tool.argset.cf_eval"]], "cf_simenv() (in module tool.argset)": [[9, "tool.argset.cf_simenv"]], "cuda() (in module tool.checker)": [[9, "tool.checker.cuda"]], "delete_useless_saves() (in module tool.util)": [[9, "tool.util.delete_useless_saves"]], "episodes() (in module tool.argset)": [[9, "tool.argset.episodes"]], "fix_xmap_size() (in module tool.argset)": [[9, "tool.argset.fix_xmap_size"]], "get() (tool.util.preferences static method)": [[9, "tool.util.Preferences.get"]], "get_data_path() (in module tool.util)": [[9, "tool.util.get_data_path"]], "goal_img() (in module tool.argset)": [[9, "tool.argset.goal_img"]], "is_running (tool.visualhandlerbase.visualhandlerbase property)": [[9, "tool.visualhandlerbase.VisualHandlerBase.is_running"]], "is_same_data() (in module tool.checker)": [[9, "tool.checker.is_same_data"]], "kwargs (tool.params.paramseval property)": [[9, "tool.params.ParamsEval.kwargs"]], "large_episodes() (in module tool.checker)": [[9, "tool.checker.large_episodes"]], "output() (in module tool.argset)": [[9, "tool.argset.output"]], "path_data() (in module tool.argset)": [[9, "tool.argset.path_data"]], "path_model() (in module tool.argset)": [[9, "tool.argset.path_model"]], "path_result() (in module tool.argset)": [[9, "tool.argset.path_result"]], "path_save() (in module tool.argset)": [[9, "tool.argset.path_save"]], "plot() (tool.visualhandlerbase.visualhandlerbase method)": [[9, "tool.visualhandlerbase.VisualHandlerBase.plot"]], "position_size() (in module tool.argset)": [[9, "tool.argset.position_size"]], "put() (tool.util.preferences static method)": [[9, "tool.util.Preferences.put"]], "resume() (in module tool.argset)": [[9, "tool.argset.resume"]], "save_anim() (in module tool.argset)": [[9, "tool.argset.save_anim"]], "select_date() (in module tool.util)": [[9, "tool.util.select_date"]], "select_weight() (in module tool.util)": [[9, "tool.util.select_weight"]], "steps() (in module tool.argset)": [[9, "tool.argset.steps"]], "tool": [[9, "module-tool"]], "tool.argset": [[9, "module-tool.argset"]], "tool.checker": [[9, "module-tool.checker"]], "tool.dataloader": [[9, "module-tool.dataloader"]], "tool.params": [[9, "module-tool.params"]], "tool.util": [[9, "module-tool.util"]], "tool.visualhandlerbase": [[9, "module-tool.visualhandlerbase"]], "wait_init() (tool.visualhandlerbase.visualhandlerbase method)": [[9, "tool.visualhandlerbase.VisualHandlerBase.wait_init"]], "watch() (in module tool.argset)": [[9, "tool.argset.watch"]], "view": [[10, "module-view"]]}})