Search.setIndex({"docnames": ["controller", "index", "models", "modules", "mypython", "mypython.ai", "mypython.ai.torchprob", "mypython.ai.torchprob.distributions", "newtonianvae", "simulation", "third", "third.dm_control", "third.dm_control.suite", "third.json5", "tool", "view"], "filenames": ["controller.rst", "index.rst", "models.rst", "modules.rst", "mypython.rst", "mypython.ai.rst", "mypython.ai.torchprob.rst", "mypython.ai.torchprob.distributions.rst", "newtonianvae.rst", "simulation.rst", "third.rst", "third.dm_control.rst", "third.dm_control.suite.rst", "third.json5.rst", "tool.rst", "view.rst"], "titles": ["controller package", "Welcome to Scratch of NewtonianVAE\u2019s documentation!", "models package", "source", "mypython package", "mypython.ai package", "mypython.ai.torchprob package", "mypython.ai.torchprob.distributions package", "newtonianvae package", "simulation package", "third package", "third.dm_control package", "third.dm_control.suite package", "third.json5 package", "tool package", "view package"], "terms": {"postprocess_u": [0, 3], "u": [0, 2], "coef": 0, "0": [0, 2, 4, 7, 9, 10, 13], "2": [0, 2, 4, 7, 9, 10, 12], "postprocess_x": [0, 3], "x": [0, 2, 3, 4, 5, 6, 7, 9], "1": [0, 2, 4, 7, 9, 13], "preprocess_u": [0, 3], "preprocess_x": [0, 3], "config": [0, 4, 5, 8, 9, 15], "str": [0, 2, 4, 5, 8, 9, 13, 14, 15], "config_ctrl": [0, 9], "index": [1, 7], "modul": [1, 3], "search": 1, "page": 1, "class": [2, 4, 5, 6, 7, 9, 12, 14, 15], "cellwrap": [2, 3], "union": [2, 4, 5, 7, 9, 14], "newtonianvaecel": [2, 3], "newtonianvaederivationcel": [2, 3], "newtonianvaev2cel": [2, 3], "newtonianvaev2derivationcel": [2, 3], "base": [2, 4, 5, 6, 9, 12, 14, 15], "object": [2, 4, 5, 6, 8, 9, 12, 13, 14, 15], "reset": [2, 3, 4, 9], "step": [2, 3, 4, 9, 12], "action": [2, 3, 9], "tensor": [2, 4, 5, 6, 7, 9], "observ": [2, 3, 9, 12], "u_tn1": 2, "i_t": 2, "decod": [2, 3, 6, 7], "dict": [2, 12, 13, 14], "arg": [2, 4, 9, 12, 15], "kwarg": [2, 4, 12, 13, 14, 15], "newtonianvaecellbas": [2, 3], "eq": 2, "11": 2, "forward": [2, 3, 6, 7], "x_tn1": 2, "v_tn1": 2, "dt": 2, "train": [2, 3, 6, 7, 9, 14], "bool": [2, 7, 8, 9, 12, 14, 15], "regular": [2, 13], "veloc": [2, 3], "transit": [2, 3], "encod": [2, 3, 13], "inherit": 2, "from": [2, 7, 9, 12], "thi": [2, 6, 7, 13], "must": 2, "store": 2, "variabl": [2, 7], "previou": 2, "time": [2, 3, 4, 9, 14], "intern": 2, "well": 2, "rnncell": 2, "lstmcell": 2, "grucel": 2, "pack": [2, 3, 9], "e": [2, 13], "torch": [2, 5], "e_ll": [2, 15], "e_kl": [2, 15], "x_t": 2, "v_t": 2, "static": [2, 4, 7, 9, 14], "img_reduct": [2, 3], "vec_reduct": [2, 3], "pxhat": [2, 3], "23": 2, "newtonianvaev2cellbas": [2, 3], "x_q_tn1": 2, "x_q_tn2": 2, "x_q_t": 2, "newcommand": 2, "i": [2, 4, 6, 7, 9, 12, 13], "mathbf": 2, "v": 2, "xhat": 2, "hat": 2, "kl": 2, "operatornam": 2, "left": [2, 7, 9], "middl": 2, "right": [2, 7, 9], "abcf": [2, 3], "dim_x": 2, "int": [2, 4, 5, 7, 8, 9, 14, 15], "begin": [2, 7], "arrai": [2, 7, 9, 13], "ll": [2, 7], "A": [2, 12, 13], "mathrm": 2, "diag": 2, "f": [2, 4], "x_": 2, "t": [2, 9, 12], "v_": 2, "u_": 2, "b": [2, 3, 4], "log": [2, 5, 6, 7], "c": [2, 4], "end": [2, 7, 9], "output": [2, 13], "diaga": 2, "diagb": 2, "diagc": 2, "shape": [2, 4, 7, 9], "d": [2, 7], "where": [2, 7], "align": [2, 7], "dim": 2, "refer": [2, 5, 6, 7, 9], "paper": 2, "xt": 2, "vt": 2, "ut": 2, "neural": 2, "network": 2, "linear": [2, 12], "activ": 2, "To": 2, "comput": [2, 7], "matric": 2, "function": [2, 4, 5, 7], "state": [2, 12], "we": 2, "us": [2, 13], "fulli": 2, "connect": 2, "hidden": 2, "layer": 2, "16": 2, "unit": 2, "relu": 2, "appropri": 2, "input": [2, 4, 7], "dimension": 2, "nvae": 2, "fa": 2, "fb": 2, "fc": 2, "decoder_typ": 2, "std": 2, "option": [2, 4, 7, 8, 9, 12, 14, 15], "real": 2, "normal": [2, 5, 6], "p": [2, 4, 6, 7], "mid": [2, 7], "hspace": 2, "5mm": 2, "text": [2, 4, 7], "xhat_": 2, "gaussian": [2, 7], "It": [2, 7, 9], "q": [2, 6], "parametr": 2, "throughout": 2, "dim_middl": 2, "std_function": 2, "callabl": [2, 4, 5], "dim_xhat": 2, "xhat_t": 2, "clearli": 2, "defin": [2, 7], "origin": 2, "\u03b8": [2, 7], "cond_var": [2, 6, 7], "cond_vars_k": [2, 6, 7], "spatialbroadcastdecoder64": [2, 3], "dim_input": 2, "z": [2, 7], "n": [2, 4, 7], "_input": 2, "y": [2, 6], "3": [2, 9], "64": [2, 9], "spatial": 2, "broadcast": 2, "http": [2, 4, 6, 7, 9, 10], "arxiv": 2, "org": [2, 7, 10], "ab": 2, "1901": 2, "07017": 2, "implement": [2, 13], "github": [2, 6, 7, 9, 10], "com": [2, 4, 6, 7, 9, 10], "dfdazac": 2, "vaesbd": 2, "blob": [2, 6, 7, 9, 10], "master": [2, 7, 9], "py": [2, 6, 7, 9], "l6": 2, "perform": 2, "everi": 2, "call": [2, 7, 13], "should": [2, 13], "overridden": 2, "all": [2, 13], "subclass": 2, "although": 2, "recip": 2, "pass": [2, 13], "need": 2, "within": 2, "one": 2, "instanc": [2, 6, 12, 13], "afterward": 2, "instead": [2, 13], "sinc": 2, "former": 2, "take": 2, "care": 2, "run": 2, "regist": 2, "hook": 2, "while": 2, "latter": 2, "silent": 2, "ignor": [2, 13], "them": 2, "prior": 2, "9": 2, "mathcal": [2, 7], "delta": 2, "cdot": 2, "sigma": [2, 7], "fix_abc": 2, "none": [2, 4, 5, 7, 9, 12, 13, 14, 15], "tupl": [2, 4, 7, 9, 12], "numbertyp": 2, "visualdecoder64": [2, 3], "built": 2, "method": 2, "type": [2, 4, 5, 13], "ctallec": [2, 7], "world": [2, 7], "vae": 2, "l10": [2, 7], "visualencoder64": [2, 3], "dim_output": 2, "_output": 2, "l32": 2, "x_tn2": 2, "x_tp1": 2, "x_tp2": 2, "newtonianva": [2, 3, 9, 14], "newtonianvaebas": [2, 3], "elbo": 2, "formula": [2, 6], "accord": 2, "follow": 2, "sim": 2, "displaystyl": [2, 7], "sum_t": 2, "v_0": 2, "boldsymbol": [2, 7], "x_0": 2, "i_0": 2, "leftarrow": 2, "dure": 2, "evalu": 2, "h": [2, 4], "w": [2, 4], "batch": 2, "size": [2, 3, 4], "sequenc": 2, "length": [2, 3, 4], "infer": 2, "ad": [2, 10], "an": [2, 7, 9, 12, 13], "addit": [2, 12], "term": 2, "latent": 2, "space": 2, "log2numpi": [2, 3], "batch_first": 2, "fals": [2, 4, 5, 12, 13, 14], "squeezen1": 2, "true": [2, 4, 9, 12, 13, 14], "els": 2, "init_log": [2, 3], "newtonianvaederiv": [2, 3, 9], "newtonianvaederivationbas": [2, 3], "newtonianvaev2": [2, 3, 9], "i_": 2, "The": [2, 4, 12, 13], "initi": [2, 3, 4], "valu": [2, 4, 13, 14], "below": 2, "log_x": 2, "collect": [2, 12], "about": 2, "acknowledg": 2, "ito": 2, "help": 2, "me": 2, "understand": 2, "detail": 2, "import": [2, 4, 14], "newtonianvaev2deriv": [2, 3, 9], "dim_pi_middl": 2, "each_k": 2, "gmm": [2, 5, 6], "12": 2, "u_t": 2, "sum_": [2, 7], "pi_n": 2, "k_n": 2, "x_n": 2, "goal": 2, "sigma_n": 2, "pi": [2, 3, 7, 9], "return": [2, 4, 7, 9, 11, 12], "purepcontrol": [2, 3, 9], "igoal": [2, 9], "alpha": [2, 9], "float": [2, 4, 7, 8, 9, 14, 15], "sampl": [2, 6, 7], "random": [2, 12], "start": [2, 4, 5, 12], "success": 2, "appli": [2, 3, 15], "control": [2, 3, 10, 12], "law": 2, "packag": 3, "submodul": [3, 10, 11], "content": 3, "model": [3, 6, 7, 9, 11, 12], "cell": 3, "compon": 3, "core": 3, "pcontrol": [3, 9], "mypython": 3, "subpackag": 3, "ai": [3, 4], "util": [3, 4], "error": 3, "check_dir": [3, 4], "check_fil": [3, 4], "numer": 3, "movingaverag": [3, 4], "get": [3, 4, 14], "plotutil": 3, "axis_aspect_2d": [3, 4], "anim_mod": [3, 4], "cartesian_coordin": [3, 4], "cmap": [3, 4], "get_figs": [3, 4], "legend_reduc": [3, 4], "register_save_path": [3, 4], "pyutil": 3, "remainingtim": [3, 4], "elaps": [3, 4], "eta": [3, 4], "updat": [3, 4], "seq": [3, 4], "next": [3, 4], "now": [3, 4], "seq2": [3, 4], "share_length": [3, 4], "add_vers": [3, 4], "check_args_typ": [3, 4], "all_with": [3, 4], "is_number_typ": [3, 4], "s2dhm": [3, 4], "s2dhms_str": [3, 4], "termin": 3, "color": [3, 4, 9], "bg_gold": [3, 4], "bg_rgb": [3, 4], "black": [3, 4], "blue": [3, 4], "boldblack": [3, 4], "boldblu": [3, 4], "boldcyan": [3, 4], "boldgreen": [3, 4], "boldmagenta": [3, 4], "boldr": [3, 4], "boldwhit": [3, 4], "boldyellow": [3, 4], "coral": [3, 4], "cyan": [3, 4], "green": [3, 4], "hotpink": [3, 4], "magenta": [3, 4], "orang": [3, 4], "pprint": [3, 4], "print": [3, 4], "purpl": [3, 4], "red": [3, 4], "rgb": [3, 4, 9], "white": [3, 4], "yellow": [3, 4], "prompt": [3, 4], "del_lin": [3, 4], "fit_termin": [3, 4], "print_one_lin": [3, 4], "vision": 3, "bgr2rgb": [3, 4], "chw2hwc": [3, 4], "hwc2chw": [3, 4], "rgb2bgr": [3, 4], "clip": [3, 4], "cnn2cv": [3, 4], "cnn2plt": [3, 4], "cv2cnn": [3, 4], "cv2plt": [3, 4], "plt2cnn": [3, 4], "correl": 3, "reconstruct": [3, 9], "show_loss": 3, "main": [3, 8, 9, 10, 15], "simul": [3, 12], "collect_data": 3, "collector": [3, 9], "save": [3, 7, 9], "posit": [3, 9, 12], "calcul": [3, 9], "draw": [3, 9], "control_pur": 3, "env": [3, 12], "controlsuiteenv": [3, 9], "action_rang": [3, 9], "action_s": [3, 9], "adjust_camera": [3, 9], "close": [3, 9], "observation_s": [3, 9], "render": [3, 9, 12], "sample_random_act": [3, 9], "zeros_act": [3, 9], "controlsuiteenvwrap": [3, 9], "action_forward": [3, 9], "action_per_episod": [3, 9], "action_point_mass_circl": [3, 9], "action_random_walk": [3, 9], "position_wrapp": [3, 9], "img2ob": [3, 9], "obs2img": [3, 9], "postprocess_observ": [3, 9], "preprocess_observation_": [3, 9], "reacher_default2endeffectorpo": [3, 9], "reacher_fix_arg_rang": [3, 9], "roll_2d": [3, 9], "third": 3, "dm_control": [3, 9, 10], "json5": [3, 10, 14], "lib": [3, 10], "tool": 3, "checker": 3, "cuda": [3, 14], "is_same_data": [3, 14], "large_episod": [3, 14], "paramsmanag": 3, "eval": [3, 14], "data_start": [3, 14], "data_stop": [3, 14], "devic": [3, 5, 14], "dtype": [3, 5, 14], "param": [3, 14], "save_simenv": [3, 14], "path": [3, 4, 5, 14], "data_dir": [3, 14], "results_dir": [3, 14], "resume_weight": [3, 14], "saves_dir": [3, 14], "used_nvae_weight": [3, 14], "batch_siz": [3, 5, 14], "check_valu": [3, 14], "epoch": [3, 14, 15], "grad_clip_norm": [3, 14], "kl_anneal": [3, 14], "learning_r": [3, 14], "max_time_length": [3, 9, 14], "save_per_epoch": [3, 14], "seed": [3, 5, 9, 14], "default_to_json": [3, 14], "prefer": [3, 14], "put": [3, 4, 14], "remov": [3, 14], "recoderbas": [3, 9, 14], "add_list": [3, 14], "append": [3, 14], "to_whole_np": [3, 14], "backup": [3, 14], "creator": [3, 14], "dtype_devic": [3, 14], "get_data_path": [3, 14], "load": [3, 10, 11, 12, 13, 14], "load_direct": [3, 14], "prioriti": [3, 14], "select_d": [3, 14], "select_weight": [3, 14], "view": [3, 8], "label": [3, 4], "set_axes_l0l1": [3, 15], "set_axes_p0l0": [3, 15], "set_axes_p0l1": [3, 15], "set_axes_p1l0": [3, 15], "set_axes_p1l1": [3, 15], "plot_config": 3, "show_data": 3, "visualhandl": 3, "tensorboardvisualhandl": [3, 15], "plot": [3, 4, 15], "visdomvisualhandl": [3, 15], "visualhandlerbas": [3, 8], "call_end": [3, 15], "call_end_init": [3, 15], "is_run": [3, 15], "wait_init": [3, 15], "torchprob": [4, 5], "debug": [4, 5], "nanini": [4, 5], "batchidx": [4, 5], "sequencedataload": [4, 5], "find_funct": [4, 5], "mish": [4, 5], "print_module_param": [4, 5], "reproduc": [4, 5], "swap01": [4, 5], "swish": [4, 5], "to_np": [4, 5], "extens": 4, "ex": 4, "txt": 4, "ax": [4, 15], "aspect": 4, "after": [4, 13], "seri": [4, 14], "mode": 4, "fig": 4, "figur": 4, "anim_func": 4, "frame": [4, 12], "freeze_cnt": 4, "interv": 4, "33": 4, "save_path": 4, "paramet": [4, 6, 7, 9, 12, 13], "frame_cnt": 4, "qiita": 4, "t0d4_": 4, "item": [4, 13], "0f2b41782a6177d35e65": 4, "millisecond": 4, "r": 4, "name": [4, 5, 12, 14], "rainbow": 4, "revers": 4, "same": [4, 13], "regard": 4, "express": 4, "suffix": 4, "list": [4, 5, 7, 8, 13], "max": 4, "10": 4, "properti": [4, 7, 9, 15], "second": 4, "ok": 4, "onli": [4, 13], "start_now": 4, "ratio_index": 4, "lazi": 4, "argname_valu": 4, "local": 4, "self": [4, 7], "__dict__": 4, "exampl": [4, 6], "data": [4, 5, 14], "value_wrap": 4, "copi": 4, "sec": 4, "always_dai": 4, "x1b": 4, "48": 4, "255": [4, 9], "215": 4, "0m": 4, "g": [4, 13], "90m": 4, "94m": 4, "96m": 4, "92m": 4, "95m": 4, "91m": 4, "97m": 4, "93m": 4, "38": 4, "127": 4, "80m": 4, "105": 4, "180m": 4, "165": 4, "sep": 4, "128": 4, "128m": 4, "m": 4, "k": [4, 7], "small_obj": 4, "img_util": 4, "imu": 4, "cv2": 4, "imread": 4, "bgr": 4, "cnn": 4, "float\u306b\u3057\u306a\u3044\u3068cnn\u306f\u53d7\u3051\u5165\u308c\u306a\u3044": 4, "img": 4, "ndarrai": [4, 5, 9], "opencv": 4, "read": [4, 7, 11, 13], "conv2d": 4, "torchvis": 4, "transform": 4, "arr": 4, "min": 4, "out": 4, "in_siz": 4, "out_siz": 4, "distribut": [5, 6], "bernoulli": [5, 6], "check_dist_model": [5, 6], "kl_normal_norm": [5, 6], "kldiv": [5, 6], "given": [5, 6, 7, 12, 13], "stop": 5, "root": [5, 14], "cpu": 5, "show_selected_index": 5, "iterabledataset": 5, "function_nam": 5, "grad": 5, "1234": 5, "paramsreturntyp": [6, 7], "clear_dist_paramet": [6, 7], "dist_paramet": [6, 7], "loc": [6, 7], "log_prob": [6, 7], "rsampl": [6, 7], "scale": [6, 7], "probparamsvalueerror": [6, 7], "to_optional_tensor": [6, 7], "func_log": [6, 7], "func_pdf": [6, 7], "func_rsampl": [6, 7], "func_rsample_gumbel": [6, 7], "mu_1": 6, "sigma_1": 6, "mu_2": 6, "sigma_2": 6, "emit": [6, 7], "variationalrecurrentneuralnetwork": [6, 7], "0f23c87d11597ecf50ecbbf1dd37429861fd7aca": [6, 7], "l172": 6, "cond": 6, "match": [6, 13], "look": 6, "math": 6, "impl": 6, "tp": 6, "prob": 6, "mean": 6, "just": 6, "keep": 6, "probabl": 6, "enabl": 6, "code": 6, "similar": 6, "masa": 6, "su": 6, "pixyz": 6, "pyro": 6, "ppl": 6, "alia": 7, "difficult": 7, "program": 7, "mathemat": 7, "repres": 7, "imag": 7, "etc": [7, 9], "therefor": 7, "__call__": 7, "ar": [7, 12, 13], "likelihood": 7, "attach": 7, "current": 7, "graph": 7, "detach": 7, "except": [7, 13], "mu": 7, "doc": 7, "chainer": 7, "en": 7, "stabl": 7, "gener": 7, "bernoulli_nl": 7, "html": 7, "l181": 7, "mixtur": 7, "theta": 7, "pi_k": 7, "_k": 7, "multivari": 7, "constraint": 7, "number": [7, 13], "featur": [7, 12], "notebook": 7, "commun": 7, "hardmaru": 7, "pytorch_notebook": 7, "mixture_density_network": 7, "other": 7, "mdrnn": 7, "sagelywizard": 7, "pytorch": 7, "mdn": 7, "www": 7, "allison": 7, "co": 7, "jp": 7, "note": 7, "statist": 7, "mjx": 7, "eqn": 7, "scalar": 7, "_n": 7, "frac": 7, "exp": 7, "ln": 7, "reparametr": 7, "trick": 7, "\u03bc": 7, "\u03c3\u03b5": 7, "\u03c3": 7, "episod": [8, 9, 12, 14, 15], "fix_xmap_s": [8, 9], "env_domain": 8, "format": [8, 9, 13, 15], "save_anim": [8, 9, 15], "start_it": 8, "resum": [8, 14], "vh": 8, "path_dir": 9, "watch": 9, "p_pctrl": 9, "time_length": 9, "record": 9, "all_step": 9, "doesn": [9, 12], "polici": 9, "ctrl": 9, "goal_img": 9, "kaixhin": 9, "planet": 9, "deepmind": [9, 10], "symbol": 9, "max_episode_length": 9, "action_repeat": 9, "bit_depth": 9, "init_posit": [9, 12], "\u7dba\u9e97\u306a\u307e\u307e\u8868\u793a\u3059\u308b": 9, "action_typ": 9, "default": [9, 12, 13, 14], "position_wrap": 9, "eras": 9, "cluster": 9, "star": 9, "reward": [9, 12], "done": 9, "rang": 9, "5": 9, "order": 9, "when": [9, 13], "reach": [9, 12], "coordin": [9, 12], "two": 9, "angl": 9, "depend": 9, "postprocess": 9, "storag": 9, "float32": 9, "numpi": 9, "uint8": 9, "preprocess": 9, "inplac": 9, "target": [9, 12], "effector": 9, "environ": [9, 12], "requir": 9, "suit": [10, 11], "point_mass": [10, 11], "reacher2d": [10, 11], "read_model": [10, 11], "dump": [10, 13], "check": [10, 13], "chang": 10, "sugar": 10, "licens": 10, "apach": 10, "pypi": 10, "project": 10, "dm": 10, "pyjson5": 10, "dprank": 10, "physic": [11, 12], "mass_to_target": [11, 12], "mass_to_target_dist": [11, 12], "pointmass": [11, 12], "get_observ": [11, 12], "get_reward": [11, 12], "initialize_episod": [11, 12], "easi": [11, 12], "get_model_and_asset": [11, 12], "hard": [11, 12], "finger_to_target": [11, 12], "finger_to_target_dist": [11, 12], "reacher": [11, 12], "build_environ": [11, 12], "model_filenam": 11, "xml": [11, 12], "file": [11, 13], "its": 11, "string": [11, 12, 13], "point": 12, "mass": 12, "domain": [12, 15], "vector": 12, "global": 12, "distanc": 12, "randomize_gain": 12, "task": 12, "smooth": 12, "agent": 12, "set": [12, 13], "each": 12, "If": [12, 13], "_randomize_gain": 12, "relationship": 12, "between": 12, "joint": 12, "so": 12, "actuat": 12, "combin": 12, "mujoco": 12, "time_limit": 12, "20": 12, "environment_kwarg": 12, "contain": [12, 13], "asset": 12, "finger": 12, "sign": 12, "surfac": 12, "target_s": 12, "spars": 12, "5e": 12, "tol": 12, "1e": 12, "reinforc": 12, "learn": 12, "domain_nam": 12, "task_nam": 12, "task_kwarg": 12, "visualize_reward": 12, "specifi": 12, "keyword": [12, 13], "argument": [12, 13], "colour": 12, "indic": 12, "rais": [12, 13], "valueerror": [12, 13], "exist": 12, "request": 12, "python": [12, 13], "cartpol": 12, "balanc": 12, "obj": [13, 14], "fp": 13, "skipkei": 13, "ensure_ascii": 13, "check_circular": 13, "allow_nan": 13, "cl": 13, "indent": 13, "separ": 13, "sort_kei": 13, "quote_kei": 13, "trailing_comma": 13, "allow_duplicate_kei": 13, "serial": 13, "stream": 13, "write": 13, "support": 13, "like": 13, "json": 13, "unicod": 13, "alwai": 13, "written": 13, "By": 13, "kei": 13, "legal": 13, "identifi": 13, "quot": 13, "you": 13, "thei": 13, "span": 13, "multipl": 13, "line": 13, "last": 13, "have": 13, "trail": 13, "comma": 13, "boolean": 13, "convert": 13, "correspond": 13, "null": 13, "behavior": 13, "produc": 13, "malform": 13, "mix": 13, "differ": 13, "foo": 13, "bar": 13, "duplic": 13, "enclos": 13, "otheriws": 13, "unless": 13, "whitespac": 13, "insert": 13, "final": 13, "element": 13, "otherwis": 13, "entri": 13, "exactli": 13, "object_hook": 13, "parse_float": 13, "parse_int": 13, "parse_const": 13, "object_pairs_hook": 13, "deseri": 13, "document": 13, "almost": 13, "extra": 13, "compat": 13, "": 13, "pure": 13, "configur": 13, "languag": 13, "trained_time_dir": 14, "nonetyp": 14, "_convert": 14, "lock": 14, "do": 14, "dir": 14, "show_shap": 14, "src_file": 14, "dst_dir": 14, "renam": 14, "model_plac": 14, "model_nam": 14, "model_param": 14, "managed_dir": 14, "date": 14, "weight_dir": 14, "pth": 14, "weight_path": 14, "params_sav": 14, "arg_data": 14, "x1": 14, "x2": 14, "lmax": 15, "l": 15}, "objects": {"": [[0, 0, 0, "-", "controller"], [2, 0, 0, "-", "models"], [4, 0, 0, "-", "mypython"], [8, 0, 0, "-", "newtonianvae"], [9, 0, 0, "-", "simulation"], [10, 0, 0, "-", "third"], [14, 0, 0, "-", "tool"], [15, 0, 0, "-", "view"]], "controller": [[0, 0, 0, "-", "train"]], "controller.train": [[0, 1, 1, "", "postprocess_u"], [0, 1, 1, "", "postprocess_x"], [0, 1, 1, "", "preprocess_u"], [0, 1, 1, "", "preprocess_x"], [0, 1, 1, "", "train"]], "models": [[2, 0, 0, "-", "cell"], [2, 0, 0, "-", "component"], [2, 0, 0, "-", "core"], [2, 0, 0, "-", "pcontrol"]], "models.cell": [[2, 2, 1, "", "CellWrap"], [2, 2, 1, "", "NewtonianVAECell"], [2, 2, 1, "", "NewtonianVAECellBase"], [2, 2, 1, "", "NewtonianVAEDerivationCell"], [2, 2, 1, "", "NewtonianVAEV2Cell"], [2, 2, 1, "", "NewtonianVAEV2CellBase"], [2, 2, 1, "", "NewtonianVAEV2DerivationCell"]], "models.cell.CellWrap": [[2, 3, 1, "", "reset"], [2, 3, 1, "", "step"]], "models.cell.NewtonianVAECell": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.cell.NewtonianVAECellBase": [[2, 2, 1, "", "Pack"], [2, 3, 1, "", "img_reduction"], [2, 4, 1, "", "training"], [2, 3, 1, "", "vec_reduction"]], "models.cell.NewtonianVAECellBase.Pack": [[2, 4, 1, "", "E"], [2, 4, 1, "", "E_kl"], [2, 4, 1, "", "E_ll"], [2, 4, 1, "", "v_t"], [2, 4, 1, "", "x_t"]], "models.cell.NewtonianVAEDerivationCell": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.cell.NewtonianVAEV2Cell": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.cell.NewtonianVAEV2CellBase": [[2, 2, 1, "", "Pack"], [2, 4, 1, "", "training"]], "models.cell.NewtonianVAEV2CellBase.Pack": [[2, 4, 1, "", "E"], [2, 4, 1, "", "E_kl"], [2, 4, 1, "", "E_ll"], [2, 4, 1, "", "v_t"], [2, 4, 1, "", "x_q_t"]], "models.cell.NewtonianVAEV2DerivationCell": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.component": [[2, 2, 1, "", "ABCf"], [2, 2, 1, "", "Decoder"], [2, 2, 1, "", "Encoder"], [2, 2, 1, "", "Pxhat"], [2, 2, 1, "", "SpatialBroadcastDecoder64"], [2, 2, 1, "", "Transition"], [2, 2, 1, "", "Velocity"], [2, 2, 1, "", "VisualDecoder64"], [2, 2, 1, "", "VisualEncoder64"]], "models.component.ABCf": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.component.Decoder": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.component.Encoder": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.component.Pxhat": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.component.SpatialBroadcastDecoder64": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.component.Transition": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.component.Velocity": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.component.VisualDecoder64": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.component.VisualEncoder64": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.core": [[2, 2, 1, "", "NewtonianVAE"], [2, 2, 1, "", "NewtonianVAEBase"], [2, 2, 1, "", "NewtonianVAEDerivation"], [2, 2, 1, "", "NewtonianVAEDerivationBase"], [2, 2, 1, "", "NewtonianVAEV2"], [2, 2, 1, "", "NewtonianVAEV2Derivation"]], "models.core.NewtonianVAE": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.core.NewtonianVAEBase": [[2, 3, 1, "", "LOG2numpy"], [2, 3, 1, "", "init_LOG"], [2, 4, 1, "", "training"]], "models.core.NewtonianVAEDerivation": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.core.NewtonianVAEDerivationBase": [[2, 3, 1, "", "LOG2numpy"], [2, 3, 1, "", "init_LOG"], [2, 4, 1, "", "training"]], "models.core.NewtonianVAEV2": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.core.NewtonianVAEV2Derivation": [[2, 3, 1, "", "forward"], [2, 4, 1, "", "training"]], "models.pcontrol": [[2, 2, 1, "", "PControl"], [2, 2, 1, "", "PurePControl"]], "models.pcontrol.PControl": [[2, 3, 1, "", "forward"], [2, 3, 1, "", "pi"], [2, 3, 1, "", "step"], [2, 4, 1, "", "training"]], "models.pcontrol.PurePControl": [[2, 3, 1, "", "step"]], "mypython": [[5, 0, 0, "-", "ai"], [4, 0, 0, "-", "error"], [4, 0, 0, "-", "numeric"], [4, 0, 0, "-", "plotutil"], [4, 0, 0, "-", "pyutil"], [4, 0, 0, "-", "terminal"], [4, 0, 0, "-", "vision"]], "mypython.ai": [[6, 0, 0, "-", "torchprob"], [5, 0, 0, "-", "util"]], "mypython.ai.torchprob": [[6, 0, 0, "-", "config"], [6, 0, 0, "-", "debug"], [7, 0, 0, "-", "distributions"], [6, 0, 0, "-", "functions"], [6, 0, 0, "-", "nanini"]], "mypython.ai.torchprob.debug": [[6, 1, 1, "", "check_dist_model"]], "mypython.ai.torchprob.distributions": [[7, 0, 0, "-", "base"], [7, 0, 0, "-", "bernoulli"], [7, 0, 0, "-", "gmm"], [7, 0, 0, "-", "normal"]], "mypython.ai.torchprob.distributions.base": [[7, 2, 1, "", "Distribution"], [7, 6, 1, "", "ProbParamsValueError"], [7, 1, 1, "", "to_optional_tensor"]], "mypython.ai.torchprob.distributions.base.Distribution": [[7, 4, 1, "", "ParamsReturnType"], [7, 3, 1, "", "clear_dist_parameters"], [7, 3, 1, "", "decode"], [7, 3, 1, "", "dist_parameters"], [7, 3, 1, "", "forward"], [7, 3, 1, "", "given"], [7, 5, 1, "", "loc"], [7, 3, 1, "", "log_prob"], [7, 3, 1, "", "rsample"], [7, 3, 1, "", "sample"], [7, 5, 1, "", "scale"], [7, 4, 1, "", "training"]], "mypython.ai.torchprob.distributions.bernoulli": [[7, 2, 1, "", "Bernoulli"]], "mypython.ai.torchprob.distributions.bernoulli.Bernoulli": [[7, 4, 1, "", "ParamsReturnType"], [7, 3, 1, "", "clear_dist_parameters"], [7, 3, 1, "", "decode"], [7, 3, 1, "", "dist_parameters"], [7, 3, 1, "", "forward"], [7, 3, 1, "", "func_log"], [7, 3, 1, "", "given"], [7, 5, 1, "", "loc"], [7, 3, 1, "", "log_prob"], [7, 5, 1, "", "scale"], [7, 4, 1, "", "training"]], "mypython.ai.torchprob.distributions.gmm": [[7, 2, 1, "", "GMM"]], "mypython.ai.torchprob.distributions.gmm.GMM": [[7, 4, 1, "", "ParamsReturnType"], [7, 3, 1, "", "clear_dist_parameters"], [7, 3, 1, "", "dist_parameters"], [7, 3, 1, "", "forward"], [7, 3, 1, "", "func_log"], [7, 3, 1, "", "func_pdf"], [7, 3, 1, "", "func_rsample"], [7, 3, 1, "", "func_rsample_gumbel"], [7, 3, 1, "", "given"], [7, 3, 1, "", "log_prob"], [7, 3, 1, "", "rsample"], [7, 3, 1, "", "sample"], [7, 4, 1, "", "training"]], "mypython.ai.torchprob.distributions.normal": [[7, 2, 1, "", "Normal"]], "mypython.ai.torchprob.distributions.normal.Normal": [[7, 4, 1, "", "ParamsReturnType"], [7, 3, 1, "", "clear_dist_parameters"], [7, 3, 1, "", "decode"], [7, 3, 1, "", "dist_parameters"], [7, 3, 1, "", "forward"], [7, 3, 1, "", "func_log"], [7, 3, 1, "", "func_pdf"], [7, 3, 1, "", "func_rsample"], [7, 3, 1, "", "given"], [7, 5, 1, "", "loc"], [7, 3, 1, "", "log_prob"], [7, 3, 1, "", "rsample"], [7, 3, 1, "", "sample"], [7, 5, 1, "", "scale"], [7, 4, 1, "", "training"]], "mypython.ai.torchprob.functions": [[6, 1, 1, "", "KL_normal_normal"], [6, 1, 1, "", "KLdiv"], [6, 2, 1, "", "log"]], "mypython.ai.torchprob.functions.log": [[6, 3, 1, "", "given"]], "mypython.ai.util": [[5, 2, 1, "", "BatchIdx"], [5, 2, 1, "", "SequenceDataLoader"], [5, 1, 1, "", "find_function"], [5, 1, 1, "", "mish"], [5, 1, 1, "", "print_module_params"], [5, 1, 1, "", "reproduce"], [5, 1, 1, "", "swap01"], [5, 1, 1, "", "swish"], [5, 1, 1, "", "to_np"]], "mypython.error": [[4, 1, 1, "", "check_dir"], [4, 1, 1, "", "check_file"]], "mypython.numeric": [[4, 2, 1, "", "MovingAverage"]], "mypython.numeric.MovingAverage": [[4, 3, 1, "", "get"], [4, 3, 1, "", "reset"]], "mypython.plotutil": [[4, 1, 1, "", "Axis_aspect_2d"], [4, 1, 1, "", "anim_mode"], [4, 1, 1, "", "cartesian_coordinate"], [4, 1, 1, "", "cmap"], [4, 1, 1, "", "get_figsize"], [4, 1, 1, "", "legend_reduce"], [4, 1, 1, "", "register_save_path"]], "mypython.pyutil": [[4, 2, 1, "", "RemainingTime"], [4, 2, 1, "", "Seq"], [4, 2, 1, "", "Seq2"], [4, 1, 1, "", "add_version"], [4, 1, 1, "", "check_args_type"], [4, 2, 1, "", "initialize"], [4, 1, 1, "", "is_number_type"], [4, 1, 1, "", "s2dhms"], [4, 1, 1, "", "s2dhms_str"]], "mypython.pyutil.RemainingTime": [[4, 5, 1, "", "elapsed"], [4, 5, 1, "", "eta"], [4, 5, 1, "", "time"], [4, 3, 1, "", "update"]], "mypython.pyutil.Seq": [[4, 3, 1, "", "next"], [4, 5, 1, "", "now"]], "mypython.pyutil.Seq2": [[4, 5, 1, "", "a"], [4, 5, 1, "", "b"], [4, 5, 1, "", "length"], [4, 3, 1, "", "share_length"], [4, 5, 1, "", "size"], [4, 3, 1, "", "update"]], "mypython.pyutil.initialize": [[4, 3, 1, "", "all_with"]], "mypython.terminal": [[4, 2, 1, "", "Color"], [4, 2, 1, "", "Prompt"]], "mypython.terminal.Color": [[4, 4, 1, "", "bg_gold"], [4, 3, 1, "", "bg_rgb"], [4, 4, 1, "", "black"], [4, 4, 1, "", "blue"], [4, 4, 1, "", "boldblack"], [4, 4, 1, "", "boldblue"], [4, 4, 1, "", "boldcyan"], [4, 4, 1, "", "boldgreen"], [4, 4, 1, "", "boldmagenta"], [4, 4, 1, "", "boldred"], [4, 4, 1, "", "boldwhite"], [4, 4, 1, "", "boldyellow"], [4, 4, 1, "", "coral"], [4, 4, 1, "", "cyan"], [4, 4, 1, "", "green"], [4, 4, 1, "", "hotpink"], [4, 4, 1, "", "magenta"], [4, 4, 1, "", "orange"], [4, 3, 1, "", "pprint"], [4, 3, 1, "", "print"], [4, 4, 1, "", "purple"], [4, 4, 1, "", "red"], [4, 4, 1, "", "reset"], [4, 3, 1, "", "rgb"], [4, 4, 1, "", "white"], [4, 4, 1, "", "yellow"]], "mypython.terminal.Prompt": [[4, 4, 1, "", "del_line"], [4, 3, 1, "", "fit_terminal"], [4, 3, 1, "", "print_one_line"]], "mypython.vision": [[4, 1, 1, "", "BGR2RGB"], [4, 1, 1, "", "CHW2HWC"], [4, 1, 1, "", "HWC2CHW"], [4, 1, 1, "", "RGB2BGR"], [4, 1, 1, "", "clip"], [4, 1, 1, "", "cnn2cv"], [4, 1, 1, "", "cnn2plt"], [4, 1, 1, "", "cv2cnn"], [4, 1, 1, "", "cv2plt"], [4, 1, 1, "", "plt2cnn"]], "newtonianvae": [[8, 0, 0, "-", "correlation"], [8, 0, 0, "-", "reconstruct"], [8, 0, 0, "-", "show_loss"], [8, 0, 0, "-", "train"]], "newtonianvae.correlation": [[8, 1, 1, "", "correlation"]], "newtonianvae.reconstruct": [[8, 1, 1, "", "reconstruction"]], "newtonianvae.show_loss": [[8, 1, 1, "", "main"]], "newtonianvae.train": [[8, 1, 1, "", "train"]], "simulation": [[9, 0, 0, "-", "collect_data"], [9, 0, 0, "-", "control"], [9, 0, 0, "-", "control_pure"], [9, 0, 0, "-", "env"]], "simulation.collect_data": [[9, 2, 1, "", "Collector"], [9, 1, 1, "", "main"]], "simulation.collect_data.Collector": [[9, 3, 1, "", "save"]], "simulation.control": [[9, 2, 1, "", "Pack"], [9, 1, 1, "", "calculate"], [9, 1, 1, "", "draw"], [9, 1, 1, "", "main"]], "simulation.control.Pack": [[9, 4, 1, "", "action"], [9, 4, 1, "", "observation"], [9, 4, 1, "", "pi"], [9, 4, 1, "", "position"], [9, 4, 1, "", "reconstruction"], [9, 4, 1, "", "x"]], "simulation.control_pure": [[9, 2, 1, "", "Pack"], [9, 1, 1, "", "calculate"], [9, 1, 1, "", "draw"], [9, 1, 1, "", "main"]], "simulation.control_pure.Pack": [[9, 4, 1, "", "action"], [9, 4, 1, "", "observation"], [9, 4, 1, "", "position"], [9, 4, 1, "", "reconstruction"], [9, 4, 1, "", "x"]], "simulation.env": [[9, 2, 1, "", "ControlSuiteEnv"], [9, 2, 1, "", "ControlSuiteEnvWrap"], [9, 1, 1, "", "img2obs"], [9, 1, 1, "", "obs2img"], [9, 1, 1, "", "postprocess_observation"], [9, 1, 1, "", "preprocess_observation_"], [9, 1, 1, "", "reacher_default2endeffectorpos"], [9, 1, 1, "", "reacher_fix_arg_range"], [9, 1, 1, "", "roll_2d"]], "simulation.env.ControlSuiteEnv": [[9, 5, 1, "", "action_range"], [9, 5, 1, "", "action_size"], [9, 3, 1, "", "adjust_camera"], [9, 3, 1, "", "close"], [9, 5, 1, "", "observation_size"], [9, 3, 1, "", "render"], [9, 3, 1, "", "reset"], [9, 3, 1, "", "sample_random_action"], [9, 3, 1, "", "step"], [9, 3, 1, "", "zeros_action"]], "simulation.env.ControlSuiteEnvWrap": [[9, 3, 1, "", "action_forward"], [9, 3, 1, "", "action_per_episode"], [9, 3, 1, "", "action_point_mass_circle"], [9, 3, 1, "", "action_random_walk"], [9, 3, 1, "", "adjust_camera"], [9, 3, 1, "", "position_wrapper"], [9, 3, 1, "", "step"]], "third": [[11, 0, 0, "-", "dm_control"], [13, 0, 0, "-", "json5"]], "third.dm_control": [[11, 1, 1, "", "read_model"], [12, 0, 0, "-", "suite"]], "third.dm_control.suite": [[12, 1, 1, "", "build_environment"], [12, 1, 1, "", "load"], [12, 0, 0, "-", "point_mass"], [12, 0, 0, "-", "reacher2d"]], "third.dm_control.suite.point_mass": [[12, 2, 1, "", "Physics"], [12, 2, 1, "", "PointMass"], [12, 1, 1, "", "easy"], [12, 1, 1, "", "get_model_and_assets"], [12, 1, 1, "", "hard"]], "third.dm_control.suite.point_mass.Physics": [[12, 3, 1, "", "mass_to_target"], [12, 3, 1, "", "mass_to_target_dist"]], "third.dm_control.suite.point_mass.PointMass": [[12, 3, 1, "", "get_observation"], [12, 3, 1, "", "get_reward"], [12, 3, 1, "", "initialize_episode"]], "third.dm_control.suite.reacher2d": [[12, 2, 1, "", "Physics"], [12, 2, 1, "", "Reacher"], [12, 1, 1, "", "easy"], [12, 1, 1, "", "get_model_and_assets"], [12, 1, 1, "", "hard"]], "third.dm_control.suite.reacher2d.Physics": [[12, 3, 1, "", "finger_to_target"], [12, 3, 1, "", "finger_to_target_dist"]], "third.dm_control.suite.reacher2d.Reacher": [[12, 3, 1, "", "get_observation"], [12, 3, 1, "", "get_reward"], [12, 3, 1, "", "initialize_episode"]], "third.json5": [[13, 1, 1, "", "dump"], [13, 1, 1, "", "dumps"], [13, 0, 0, "-", "lib"], [13, 1, 1, "", "load"], [13, 1, 1, "", "loads"]], "third.json5.lib": [[13, 1, 1, "", "dump"], [13, 1, 1, "", "dumps"], [13, 1, 1, "", "load"], [13, 1, 1, "", "loads"]], "tool": [[14, 0, 0, "-", "checker"], [14, 0, 0, "-", "paramsmanager"], [14, 0, 0, "-", "util"]], "tool.checker": [[14, 1, 1, "", "cuda"], [14, 1, 1, "", "is_same_data"], [14, 1, 1, "", "large_episodes"]], "tool.paramsmanager": [[14, 2, 1, "", "Eval"], [14, 2, 1, "", "Params"], [14, 2, 1, "", "Paths"], [14, 2, 1, "", "Train"], [14, 1, 1, "", "default_to_json"]], "tool.paramsmanager.Eval": [[14, 4, 1, "", "data_start"], [14, 4, 1, "", "data_stop"], [14, 4, 1, "", "device"], [14, 4, 1, "", "dtype"]], "tool.paramsmanager.Params": [[14, 3, 1, "", "save_simenv"]], "tool.paramsmanager.Paths": [[14, 4, 1, "", "data_dir"], [14, 4, 1, "", "results_dir"], [14, 4, 1, "", "resume_weight"], [14, 4, 1, "", "saves_dir"], [14, 4, 1, "", "used_nvae_weight"]], "tool.paramsmanager.Train": [[14, 4, 1, "", "batch_size"], [14, 4, 1, "", "check_value"], [14, 4, 1, "", "data_start"], [14, 4, 1, "", "data_stop"], [14, 4, 1, "", "device"], [14, 4, 1, "", "dtype"], [14, 4, 1, "", "epochs"], [14, 4, 1, "", "grad_clip_norm"], [14, 4, 1, "", "kl_annealing"], [14, 4, 1, "", "learning_rate"], [14, 4, 1, "", "max_time_length"], [14, 4, 1, "", "save_per_epoch"], [14, 4, 1, "", "seed"]], "tool.util": [[14, 2, 1, "", "Preferences"], [14, 2, 1, "", "RecoderBase"], [14, 1, 1, "", "backup"], [14, 1, 1, "", "creator"], [14, 1, 1, "", "dtype_device"], [14, 1, 1, "", "get_data_path"], [14, 1, 1, "", "load"], [14, 1, 1, "", "load_direct"], [14, 1, 1, "", "priority"], [14, 1, 1, "", "select_date"], [14, 1, 1, "", "select_weight"]], "tool.util.Preferences": [[14, 3, 1, "", "get"], [14, 3, 1, "", "put"], [14, 3, 1, "", "remove"]], "tool.util.RecoderBase": [[14, 3, 1, "", "add_list"], [14, 3, 1, "", "append"], [14, 3, 1, "", "to_whole_np"]], "view": [[15, 0, 0, "-", "label"], [15, 0, 0, "-", "plot_config"], [15, 0, 0, "-", "show_data"], [15, 0, 0, "-", "visualhandler"], [15, 0, 0, "-", "visualhandlerbase"]], "view.label": [[15, 2, 1, "", "Label"]], "view.label.Label": [[15, 3, 1, "", "set_axes_L0L1"], [15, 3, 1, "", "set_axes_P0L0"], [15, 3, 1, "", "set_axes_P0L1"], [15, 3, 1, "", "set_axes_P1L0"], [15, 3, 1, "", "set_axes_P1L1"]], "view.plot_config": [[15, 1, 1, "", "apply"]], "view.show_data": [[15, 1, 1, "", "main"]], "view.visualhandler": [[15, 2, 1, "", "TensorBoardVisualHandler"], [15, 2, 1, "", "VisdomVisualHandler"]], "view.visualhandler.TensorBoardVisualHandler": [[15, 3, 1, "", "plot"]], "view.visualhandler.VisdomVisualHandler": [[15, 3, 1, "", "plot"]], "view.visualhandlerbase": [[15, 2, 1, "", "VisualHandlerBase"]], "view.visualhandlerbase.VisualHandlerBase": [[15, 3, 1, "", "call_end"], [15, 3, 1, "", "call_end_init"], [15, 5, 1, "", "is_running"], [15, 3, 1, "", "plot"], [15, 3, 1, "", "wait_init"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"control": [0, 9], "packag": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "submodul": [0, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15], "train": [0, 8], "modul": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "content": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "welcom": 1, "scratch": 1, "newtonianva": [1, 8], "": 1, "document": 1, "indic": 1, "tabl": 1, "model": 2, "cell": 2, "compon": 2, "core": 2, "pcontrol": 2, "sourc": 3, "mypython": [4, 5, 6, 7], "subpackag": [4, 5, 6, 10, 11], "error": 4, "numer": 4, "plotutil": 4, "pyutil": 4, "termin": 4, "vision": 4, "ai": [5, 6, 7], "util": [5, 14], "torchprob": [6, 7], "config": 6, "debug": 6, "function": 6, "nanini": 6, "distribut": 7, "base": 7, "bernoulli": 7, "gmm": 7, "normal": 7, "correl": 8, "reconstruct": 8, "show_loss": 8, "simul": 9, "collect_data": 9, "control_pur": 9, "env": 9, "third": [10, 11, 12, 13], "dm_control": [11, 12], "suit": 12, "point_mass": 12, "reacher2d": 12, "json5": 13, "lib": 13, "tool": 14, "checker": 14, "paramsmanag": 14, "view": 15, "label": 15, "plot_config": 15, "show_data": 15, "visualhandl": 15, "visualhandlerbas": 15}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"controller package": [[0, "controller-package"]], "Submodules": [[0, "submodules"], [2, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"]], "controller.train module": [[0, "module-controller.train"]], "Module contents": [[0, "module-controller"], [2, "module-models"], [4, "module-mypython"], [5, "module-mypython.ai"], [6, "module-mypython.ai.torchprob"], [7, "module-mypython.ai.torchprob.distributions"], [8, "module-newtonianvae"], [9, "module-simulation"], [10, "module-third"], [11, "module-third.dm_control"], [12, "module-third.dm_control.suite"], [13, "module-third.json5"], [14, "module-tool"], [15, "module-view"]], "Welcome to Scratch of NewtonianVAE\u2019s documentation!": [[1, "welcome-to-scratch-of-newtonianvae-s-documentation"]], "Indices and tables": [[1, "indices-and-tables"]], "models package": [[2, "models-package"]], "models.cell module": [[2, "module-models.cell"]], "models.component module": [[2, "module-models.component"]], "models.core module": [[2, "module-models.core"]], "models.pcontrol module": [[2, "module-models.pcontrol"]], "source": [[3, "source"]], "mypython package": [[4, "mypython-package"]], "Subpackages": [[4, "subpackages"], [5, "subpackages"], [6, "subpackages"], [10, "subpackages"], [11, "subpackages"]], "mypython.error module": [[4, "module-mypython.error"]], "mypython.numeric module": [[4, "module-mypython.numeric"]], "mypython.plotutil module": [[4, "module-mypython.plotutil"]], "mypython.pyutil module": [[4, "module-mypython.pyutil"]], "mypython.terminal module": [[4, "module-mypython.terminal"]], "mypython.vision module": [[4, "module-mypython.vision"]], "mypython.ai package": [[5, "mypython-ai-package"]], "mypython.ai.util module": [[5, "module-mypython.ai.util"]], "mypython.ai.torchprob package": [[6, "mypython-ai-torchprob-package"]], "mypython.ai.torchprob.config module": [[6, "module-mypython.ai.torchprob.config"]], "mypython.ai.torchprob.debug module": [[6, "module-mypython.ai.torchprob.debug"]], "mypython.ai.torchprob.functions module": [[6, "module-mypython.ai.torchprob.functions"]], "mypython.ai.torchprob.nanini module": [[6, "module-mypython.ai.torchprob.nanini"]], "mypython.ai.torchprob.distributions package": [[7, "mypython-ai-torchprob-distributions-package"]], "mypython.ai.torchprob.distributions.base module": [[7, "module-mypython.ai.torchprob.distributions.base"]], "mypython.ai.torchprob.distributions.bernoulli module": [[7, "module-mypython.ai.torchprob.distributions.bernoulli"]], "mypython.ai.torchprob.distributions.gmm module": [[7, "module-mypython.ai.torchprob.distributions.gmm"]], "mypython.ai.torchprob.distributions.normal module": [[7, "module-mypython.ai.torchprob.distributions.normal"]], "newtonianvae package": [[8, "newtonianvae-package"]], "newtonianvae.correlation module": [[8, "module-newtonianvae.correlation"]], "newtonianvae.reconstruct module": [[8, "module-newtonianvae.reconstruct"]], "newtonianvae.show_loss module": [[8, "module-newtonianvae.show_loss"]], "newtonianvae.train module": [[8, "module-newtonianvae.train"]], "simulation package": [[9, "simulation-package"]], "simulation.collect_data module": [[9, "module-simulation.collect_data"]], "simulation.control module": [[9, "module-simulation.control"]], "simulation.control_pure module": [[9, "module-simulation.control_pure"]], "simulation.env module": [[9, "module-simulation.env"]], "third package": [[10, "third-package"]], "third.dm_control package": [[11, "third-dm-control-package"]], "third.dm_control.suite package": [[12, "third-dm-control-suite-package"]], "third.dm_control.suite.point_mass module": [[12, "module-third.dm_control.suite.point_mass"]], "third.dm_control.suite.reacher2d module": [[12, "module-third.dm_control.suite.reacher2d"]], "third.json5 package": [[13, "third-json5-package"]], "third.json5.lib module": [[13, "module-third.json5.lib"]], "tool package": [[14, "tool-package"]], "tool.checker module": [[14, "module-tool.checker"]], "tool.paramsmanager module": [[14, "module-tool.paramsmanager"]], "tool.util module": [[14, "module-tool.util"]], "view package": [[15, "view-package"]], "view.label module": [[15, "module-view.label"]], "view.plot_config module": [[15, "module-view.plot_config"]], "view.show_data module": [[15, "module-view.show_data"]], "view.visualhandler module": [[15, "module-view.visualhandler"]], "view.visualhandlerbase module": [[15, "module-view.visualhandlerbase"]]}, "indexentries": {"controller": [[0, "module-controller"]], "controller.train": [[0, "module-controller.train"]], "module": [[0, "module-controller"], [0, "module-controller.train"], [2, "module-models"], [2, "module-models.cell"], [2, "module-models.component"], [2, "module-models.core"], [2, "module-models.pcontrol"], [4, "module-mypython"], [4, "module-mypython.error"], [4, "module-mypython.numeric"], [4, "module-mypython.plotutil"], [4, "module-mypython.pyutil"], [4, "module-mypython.terminal"], [4, "module-mypython.vision"], [5, "module-mypython.ai"], [5, "module-mypython.ai.util"], [6, "module-mypython.ai.torchprob"], [6, "module-mypython.ai.torchprob.config"], [6, "module-mypython.ai.torchprob.debug"], [6, "module-mypython.ai.torchprob.functions"], [6, "module-mypython.ai.torchprob.nanini"], [7, "module-mypython.ai.torchprob.distributions"], [7, "module-mypython.ai.torchprob.distributions.base"], [7, "module-mypython.ai.torchprob.distributions.bernoulli"], [7, "module-mypython.ai.torchprob.distributions.gmm"], [7, "module-mypython.ai.torchprob.distributions.normal"], [8, "module-newtonianvae"], [8, "module-newtonianvae.correlation"], [8, "module-newtonianvae.reconstruct"], [8, "module-newtonianvae.show_loss"], [8, "module-newtonianvae.train"], [9, "module-simulation"], [9, "module-simulation.collect_data"], [9, "module-simulation.control"], [9, "module-simulation.control_pure"], [9, "module-simulation.env"], [10, "module-third"], [11, "module-third.dm_control"], [12, "module-third.dm_control.suite"], [12, "module-third.dm_control.suite.point_mass"], [12, "module-third.dm_control.suite.reacher2d"], [13, "module-third.json5"], [13, "module-third.json5.lib"], [14, "module-tool"], [14, "module-tool.checker"], [14, "module-tool.paramsmanager"], [14, "module-tool.util"], [15, "module-view"], [15, "module-view.label"], [15, "module-view.plot_config"], [15, "module-view.show_data"], [15, "module-view.visualhandler"], [15, "module-view.visualhandlerbase"]], "postprocess_u() (in module controller.train)": [[0, "controller.train.postprocess_u"]], "postprocess_x() (in module controller.train)": [[0, "controller.train.postprocess_x"]], "preprocess_u() (in module controller.train)": [[0, "controller.train.preprocess_u"]], "preprocess_x() (in module controller.train)": [[0, "controller.train.preprocess_x"]], "train() (in module controller.train)": [[0, "controller.train.train"]], "abcf (class in models.component)": [[2, "models.component.ABCf"]], "cellwrap (class in models.cell)": [[2, "models.cell.CellWrap"]], "decoder (class in models.component)": [[2, "models.component.Decoder"]], "e (models.cell.newtonianvaecellbase.pack attribute)": [[2, "models.cell.NewtonianVAECellBase.Pack.E"]], "e (models.cell.newtonianvaev2cellbase.pack attribute)": [[2, "models.cell.NewtonianVAEV2CellBase.Pack.E"]], "e_kl (models.cell.newtonianvaecellbase.pack attribute)": [[2, "models.cell.NewtonianVAECellBase.Pack.E_kl"]], "e_kl (models.cell.newtonianvaev2cellbase.pack attribute)": [[2, "models.cell.NewtonianVAEV2CellBase.Pack.E_kl"]], "e_ll (models.cell.newtonianvaecellbase.pack attribute)": [[2, "models.cell.NewtonianVAECellBase.Pack.E_ll"]], "e_ll (models.cell.newtonianvaev2cellbase.pack attribute)": [[2, "models.cell.NewtonianVAEV2CellBase.Pack.E_ll"]], "encoder (class in models.component)": [[2, "models.component.Encoder"]], "log2numpy() (models.core.newtonianvaebase method)": [[2, "models.core.NewtonianVAEBase.LOG2numpy"]], "log2numpy() (models.core.newtonianvaederivationbase method)": [[2, "models.core.NewtonianVAEDerivationBase.LOG2numpy"]], "newtonianvae (class in models.core)": [[2, "models.core.NewtonianVAE"]], "newtonianvaebase (class in models.core)": [[2, "models.core.NewtonianVAEBase"]], "newtonianvaecell (class in models.cell)": [[2, "models.cell.NewtonianVAECell"]], "newtonianvaecellbase (class in models.cell)": [[2, "models.cell.NewtonianVAECellBase"]], "newtonianvaecellbase.pack (class in models.cell)": [[2, "models.cell.NewtonianVAECellBase.Pack"]], "newtonianvaederivation (class in models.core)": [[2, "models.core.NewtonianVAEDerivation"]], "newtonianvaederivationbase (class in models.core)": [[2, "models.core.NewtonianVAEDerivationBase"]], "newtonianvaederivationcell (class in models.cell)": [[2, "models.cell.NewtonianVAEDerivationCell"]], "newtonianvaev2 (class in models.core)": [[2, "models.core.NewtonianVAEV2"]], "newtonianvaev2cell (class in models.cell)": [[2, "models.cell.NewtonianVAEV2Cell"]], "newtonianvaev2cellbase (class in models.cell)": [[2, "models.cell.NewtonianVAEV2CellBase"]], "newtonianvaev2cellbase.pack (class in models.cell)": [[2, "models.cell.NewtonianVAEV2CellBase.Pack"]], "newtonianvaev2derivation (class in models.core)": [[2, "models.core.NewtonianVAEV2Derivation"]], "newtonianvaev2derivationcell (class in models.cell)": [[2, "models.cell.NewtonianVAEV2DerivationCell"]], "pcontrol (class in models.pcontrol)": [[2, "models.pcontrol.PControl"]], "purepcontrol (class in models.pcontrol)": [[2, "models.pcontrol.PurePControl"]], "pxhat (class in models.component)": [[2, "models.component.Pxhat"]], "spatialbroadcastdecoder64 (class in models.component)": [[2, "models.component.SpatialBroadcastDecoder64"]], "transition (class in models.component)": [[2, "models.component.Transition"]], "velocity (class in models.component)": [[2, "models.component.Velocity"]], "visualdecoder64 (class in models.component)": [[2, "models.component.VisualDecoder64"]], "visualencoder64 (class in models.component)": [[2, "models.component.VisualEncoder64"]], "forward() (models.cell.newtonianvaecell method)": [[2, "models.cell.NewtonianVAECell.forward"]], "forward() (models.cell.newtonianvaederivationcell method)": [[2, "models.cell.NewtonianVAEDerivationCell.forward"]], "forward() (models.cell.newtonianvaev2cell method)": [[2, "models.cell.NewtonianVAEV2Cell.forward"]], "forward() (models.cell.newtonianvaev2derivationcell method)": [[2, "models.cell.NewtonianVAEV2DerivationCell.forward"]], "forward() (models.component.abcf method)": [[2, "models.component.ABCf.forward"]], "forward() (models.component.decoder method)": [[2, "models.component.Decoder.forward"]], "forward() (models.component.encoder method)": [[2, "models.component.Encoder.forward"]], "forward() (models.component.pxhat method)": [[2, "models.component.Pxhat.forward"]], "forward() (models.component.spatialbroadcastdecoder64 method)": [[2, "models.component.SpatialBroadcastDecoder64.forward"]], "forward() (models.component.transition method)": [[2, "models.component.Transition.forward"]], "forward() (models.component.velocity method)": [[2, "models.component.Velocity.forward"]], "forward() (models.component.visualdecoder64 method)": [[2, "models.component.VisualDecoder64.forward"]], "forward() (models.component.visualencoder64 method)": [[2, "models.component.VisualEncoder64.forward"]], "forward() (models.core.newtonianvae method)": [[2, "models.core.NewtonianVAE.forward"]], "forward() (models.core.newtonianvaederivation method)": [[2, "models.core.NewtonianVAEDerivation.forward"]], "forward() (models.core.newtonianvaev2 method)": [[2, "models.core.NewtonianVAEV2.forward"]], "forward() (models.core.newtonianvaev2derivation method)": [[2, "models.core.NewtonianVAEV2Derivation.forward"]], "forward() (models.pcontrol.pcontrol method)": [[2, "models.pcontrol.PControl.forward"]], "img_reduction() (models.cell.newtonianvaecellbase static method)": [[2, "models.cell.NewtonianVAECellBase.img_reduction"]], "init_log() (models.core.newtonianvaebase method)": [[2, "models.core.NewtonianVAEBase.init_LOG"]], "init_log() (models.core.newtonianvaederivationbase method)": [[2, "models.core.NewtonianVAEDerivationBase.init_LOG"]], "models": [[2, "module-models"]], "models.cell": [[2, "module-models.cell"]], "models.component": [[2, "module-models.component"]], "models.core": [[2, "module-models.core"]], "models.pcontrol": [[2, "module-models.pcontrol"]], "pi() (models.pcontrol.pcontrol method)": [[2, "models.pcontrol.PControl.pi"]], "reset() (models.cell.cellwrap method)": [[2, "models.cell.CellWrap.reset"]], "step() (models.cell.cellwrap method)": [[2, "models.cell.CellWrap.step"]], "step() (models.pcontrol.pcontrol method)": [[2, "models.pcontrol.PControl.step"]], "step() (models.pcontrol.purepcontrol method)": [[2, "models.pcontrol.PurePControl.step"]], "training (models.cell.newtonianvaecell attribute)": [[2, "models.cell.NewtonianVAECell.training"]], "training (models.cell.newtonianvaecellbase attribute)": [[2, "models.cell.NewtonianVAECellBase.training"]], "training (models.cell.newtonianvaederivationcell attribute)": [[2, "models.cell.NewtonianVAEDerivationCell.training"]], "training (models.cell.newtonianvaev2cell attribute)": [[2, "models.cell.NewtonianVAEV2Cell.training"]], "training (models.cell.newtonianvaev2cellbase attribute)": [[2, "models.cell.NewtonianVAEV2CellBase.training"]], "training (models.cell.newtonianvaev2derivationcell attribute)": [[2, "models.cell.NewtonianVAEV2DerivationCell.training"]], "training (models.component.abcf attribute)": [[2, "models.component.ABCf.training"]], "training (models.component.decoder attribute)": [[2, "models.component.Decoder.training"]], "training (models.component.encoder attribute)": [[2, "models.component.Encoder.training"]], "training (models.component.pxhat attribute)": [[2, "models.component.Pxhat.training"]], "training (models.component.spatialbroadcastdecoder64 attribute)": [[2, "models.component.SpatialBroadcastDecoder64.training"]], "training (models.component.transition attribute)": [[2, "models.component.Transition.training"]], "training (models.component.velocity attribute)": [[2, "models.component.Velocity.training"]], "training (models.component.visualdecoder64 attribute)": [[2, "models.component.VisualDecoder64.training"]], "training (models.component.visualencoder64 attribute)": [[2, "models.component.VisualEncoder64.training"]], "training (models.core.newtonianvae attribute)": [[2, "models.core.NewtonianVAE.training"]], "training (models.core.newtonianvaebase attribute)": [[2, "models.core.NewtonianVAEBase.training"]], "training (models.core.newtonianvaederivation attribute)": [[2, "models.core.NewtonianVAEDerivation.training"]], "training (models.core.newtonianvaederivationbase attribute)": [[2, "models.core.NewtonianVAEDerivationBase.training"]], "training (models.core.newtonianvaev2 attribute)": [[2, "models.core.NewtonianVAEV2.training"]], "training (models.core.newtonianvaev2derivation attribute)": [[2, "models.core.NewtonianVAEV2Derivation.training"]], "training (models.pcontrol.pcontrol attribute)": [[2, "models.pcontrol.PControl.training"]], "v_t (models.cell.newtonianvaecellbase.pack attribute)": [[2, "models.cell.NewtonianVAECellBase.Pack.v_t"]], "v_t (models.cell.newtonianvaev2cellbase.pack attribute)": [[2, "models.cell.NewtonianVAEV2CellBase.Pack.v_t"]], "vec_reduction() (models.cell.newtonianvaecellbase static method)": [[2, "models.cell.NewtonianVAECellBase.vec_reduction"]], "x_q_t (models.cell.newtonianvaev2cellbase.pack attribute)": [[2, "models.cell.NewtonianVAEV2CellBase.Pack.x_q_t"]], "x_t (models.cell.newtonianvaecellbase.pack attribute)": [[2, "models.cell.NewtonianVAECellBase.Pack.x_t"]], "axis_aspect_2d() (in module mypython.plotutil)": [[4, "mypython.plotutil.Axis_aspect_2d"]], "bgr2rgb() (in module mypython.vision)": [[4, "mypython.vision.BGR2RGB"]], "chw2hwc() (in module mypython.vision)": [[4, "mypython.vision.CHW2HWC"]], "color (class in mypython.terminal)": [[4, "mypython.terminal.Color"]], "hwc2chw() (in module mypython.vision)": [[4, "mypython.vision.HWC2CHW"]], "movingaverage (class in mypython.numeric)": [[4, "mypython.numeric.MovingAverage"]], "prompt (class in mypython.terminal)": [[4, "mypython.terminal.Prompt"]], "rgb2bgr() (in module mypython.vision)": [[4, "mypython.vision.RGB2BGR"]], "remainingtime (class in mypython.pyutil)": [[4, "mypython.pyutil.RemainingTime"]], "seq (class in mypython.pyutil)": [[4, "mypython.pyutil.Seq"]], "seq2 (class in mypython.pyutil)": [[4, "mypython.pyutil.Seq2"]], "a (mypython.pyutil.seq2 property)": [[4, "mypython.pyutil.Seq2.a"]], "add_version() (in module mypython.pyutil)": [[4, "mypython.pyutil.add_version"]], "all_with() (mypython.pyutil.initialize static method)": [[4, "mypython.pyutil.initialize.all_with"]], "anim_mode() (in module mypython.plotutil)": [[4, "mypython.plotutil.anim_mode"]], "b (mypython.pyutil.seq2 property)": [[4, "mypython.pyutil.Seq2.b"]], "bg_gold (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.bg_gold"]], "bg_rgb() (mypython.terminal.color method)": [[4, "mypython.terminal.Color.bg_rgb"]], "black (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.black"]], "blue (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.blue"]], "boldblack (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.boldblack"]], "boldblue (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.boldblue"]], "boldcyan (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.boldcyan"]], "boldgreen (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.boldgreen"]], "boldmagenta (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.boldmagenta"]], "boldred (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.boldred"]], "boldwhite (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.boldwhite"]], "boldyellow (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.boldyellow"]], "cartesian_coordinate() (in module mypython.plotutil)": [[4, "mypython.plotutil.cartesian_coordinate"]], "check_args_type() (in module mypython.pyutil)": [[4, "mypython.pyutil.check_args_type"]], "check_dir() (in module mypython.error)": [[4, "mypython.error.check_dir"]], "check_file() (in module mypython.error)": [[4, "mypython.error.check_file"]], "clip() (in module mypython.vision)": [[4, "mypython.vision.clip"]], "cmap() (in module mypython.plotutil)": [[4, "mypython.plotutil.cmap"]], "cnn2cv() (in module mypython.vision)": [[4, "mypython.vision.cnn2cv"]], "cnn2plt() (in module mypython.vision)": [[4, "mypython.vision.cnn2plt"]], "coral (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.coral"]], "cv2cnn() (in module mypython.vision)": [[4, "mypython.vision.cv2cnn"]], "cv2plt() (in module mypython.vision)": [[4, "mypython.vision.cv2plt"]], "cyan (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.cyan"]], "del_line (mypython.terminal.prompt attribute)": [[4, "mypython.terminal.Prompt.del_line"]], "elapsed (mypython.pyutil.remainingtime property)": [[4, "mypython.pyutil.RemainingTime.elapsed"]], "eta (mypython.pyutil.remainingtime property)": [[4, "mypython.pyutil.RemainingTime.eta"]], "fit_terminal() (mypython.terminal.prompt static method)": [[4, "mypython.terminal.Prompt.fit_terminal"]], "get() (mypython.numeric.movingaverage method)": [[4, "mypython.numeric.MovingAverage.get"]], "get_figsize() (in module mypython.plotutil)": [[4, "mypython.plotutil.get_figsize"]], "green (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.green"]], "hotpink (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.hotpink"]], "initialize (class in mypython.pyutil)": [[4, "mypython.pyutil.initialize"]], "is_number_type() (in module mypython.pyutil)": [[4, "mypython.pyutil.is_number_type"]], "legend_reduce() (in module mypython.plotutil)": [[4, "mypython.plotutil.legend_reduce"]], "length (mypython.pyutil.seq2 property)": [[4, "mypython.pyutil.Seq2.length"]], "magenta (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.magenta"]], "mypython": [[4, "module-mypython"]], "mypython.error": [[4, "module-mypython.error"]], "mypython.numeric": [[4, "module-mypython.numeric"]], "mypython.plotutil": [[4, "module-mypython.plotutil"]], "mypython.pyutil": [[4, "module-mypython.pyutil"]], "mypython.terminal": [[4, "module-mypython.terminal"]], "mypython.vision": [[4, "module-mypython.vision"]], "next() (mypython.pyutil.seq method)": [[4, "mypython.pyutil.Seq.next"]], "now (mypython.pyutil.seq property)": [[4, "mypython.pyutil.Seq.now"]], "orange (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.orange"]], "plt2cnn() (in module mypython.vision)": [[4, "mypython.vision.plt2cnn"]], "pprint() (mypython.terminal.color method)": [[4, "mypython.terminal.Color.pprint"]], "print() (mypython.terminal.color method)": [[4, "mypython.terminal.Color.print"]], "print_one_line() (mypython.terminal.prompt static method)": [[4, "mypython.terminal.Prompt.print_one_line"]], "purple (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.purple"]], "red (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.red"]], "register_save_path() (in module mypython.plotutil)": [[4, "mypython.plotutil.register_save_path"]], "reset (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.reset"]], "reset() (mypython.numeric.movingaverage method)": [[4, "mypython.numeric.MovingAverage.reset"]], "rgb() (mypython.terminal.color method)": [[4, "mypython.terminal.Color.rgb"]], "s2dhms() (in module mypython.pyutil)": [[4, "mypython.pyutil.s2dhms"]], "s2dhms_str() (in module mypython.pyutil)": [[4, "mypython.pyutil.s2dhms_str"]], "share_length() (mypython.pyutil.seq2 static method)": [[4, "mypython.pyutil.Seq2.share_length"]], "size (mypython.pyutil.seq2 property)": [[4, "mypython.pyutil.Seq2.size"]], "time (mypython.pyutil.remainingtime property)": [[4, "mypython.pyutil.RemainingTime.time"]], "update() (mypython.pyutil.remainingtime method)": [[4, "mypython.pyutil.RemainingTime.update"]], "update() (mypython.pyutil.seq2 method)": [[4, "mypython.pyutil.Seq2.update"]], "white (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.white"]], "yellow (mypython.terminal.color attribute)": [[4, "mypython.terminal.Color.yellow"]], "batchidx (class in mypython.ai.util)": [[5, "mypython.ai.util.BatchIdx"]], "sequencedataloader (class in mypython.ai.util)": [[5, "mypython.ai.util.SequenceDataLoader"]], "find_function() (in module mypython.ai.util)": [[5, "mypython.ai.util.find_function"]], "mish() (in module mypython.ai.util)": [[5, "mypython.ai.util.mish"]], "mypython.ai": [[5, "module-mypython.ai"]], "mypython.ai.util": [[5, "module-mypython.ai.util"]], "print_module_params() (in module mypython.ai.util)": [[5, "mypython.ai.util.print_module_params"]], "reproduce() (in module mypython.ai.util)": [[5, "mypython.ai.util.reproduce"]], "swap01() (in module mypython.ai.util)": [[5, "mypython.ai.util.swap01"]], "swish() (in module mypython.ai.util)": [[5, "mypython.ai.util.swish"]], "to_np() (in module mypython.ai.util)": [[5, "mypython.ai.util.to_np"]], "kl_normal_normal() (in module mypython.ai.torchprob.functions)": [[6, "mypython.ai.torchprob.functions.KL_normal_normal"]], "kldiv() (in module mypython.ai.torchprob.functions)": [[6, "mypython.ai.torchprob.functions.KLdiv"]], "check_dist_model() (in module mypython.ai.torchprob.debug)": [[6, "mypython.ai.torchprob.debug.check_dist_model"]], "given() (mypython.ai.torchprob.functions.log method)": [[6, "mypython.ai.torchprob.functions.log.given"]], "log (class in mypython.ai.torchprob.functions)": [[6, "mypython.ai.torchprob.functions.log"]], "mypython.ai.torchprob": [[6, "module-mypython.ai.torchprob"]], "mypython.ai.torchprob.config": [[6, "module-mypython.ai.torchprob.config"]], "mypython.ai.torchprob.debug": [[6, "module-mypython.ai.torchprob.debug"]], "mypython.ai.torchprob.functions": [[6, "module-mypython.ai.torchprob.functions"]], "mypython.ai.torchprob.nanini": [[6, "module-mypython.ai.torchprob.nanini"]], "bernoulli (class in mypython.ai.torchprob.distributions.bernoulli)": [[7, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli"]], "distribution (class in mypython.ai.torchprob.distributions.base)": [[7, "mypython.ai.torchprob.distributions.base.Distribution"]], "gmm (class in mypython.ai.torchprob.distributions.gmm)": [[7, "mypython.ai.torchprob.distributions.gmm.GMM"]], "normal (class in mypython.ai.torchprob.distributions.normal)": [[7, "mypython.ai.torchprob.distributions.normal.Normal"]], "paramsreturntype (mypython.ai.torchprob.distributions.base.distribution attribute)": [[7, "mypython.ai.torchprob.distributions.base.Distribution.ParamsReturnType"]], "paramsreturntype (mypython.ai.torchprob.distributions.bernoulli.bernoulli attribute)": [[7, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.ParamsReturnType"]], "paramsreturntype (mypython.ai.torchprob.distributions.gmm.gmm attribute)": [[7, "mypython.ai.torchprob.distributions.gmm.GMM.ParamsReturnType"]], "paramsreturntype (mypython.ai.torchprob.distributions.normal.normal attribute)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.ParamsReturnType"]], "probparamsvalueerror": [[7, "mypython.ai.torchprob.distributions.base.ProbParamsValueError"]], "clear_dist_parameters() (mypython.ai.torchprob.distributions.base.distribution method)": [[7, "mypython.ai.torchprob.distributions.base.Distribution.clear_dist_parameters"]], "clear_dist_parameters() (mypython.ai.torchprob.distributions.bernoulli.bernoulli method)": [[7, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.clear_dist_parameters"]], "clear_dist_parameters() (mypython.ai.torchprob.distributions.gmm.gmm method)": [[7, "mypython.ai.torchprob.distributions.gmm.GMM.clear_dist_parameters"]], "clear_dist_parameters() (mypython.ai.torchprob.distributions.normal.normal method)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.clear_dist_parameters"]], "decode() (mypython.ai.torchprob.distributions.base.distribution method)": [[7, "mypython.ai.torchprob.distributions.base.Distribution.decode"]], "decode() (mypython.ai.torchprob.distributions.bernoulli.bernoulli method)": [[7, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.decode"]], "decode() (mypython.ai.torchprob.distributions.normal.normal method)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.decode"]], "dist_parameters() (mypython.ai.torchprob.distributions.base.distribution method)": [[7, "mypython.ai.torchprob.distributions.base.Distribution.dist_parameters"]], "dist_parameters() (mypython.ai.torchprob.distributions.bernoulli.bernoulli method)": [[7, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.dist_parameters"]], "dist_parameters() (mypython.ai.torchprob.distributions.gmm.gmm method)": [[7, "mypython.ai.torchprob.distributions.gmm.GMM.dist_parameters"]], "dist_parameters() (mypython.ai.torchprob.distributions.normal.normal method)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.dist_parameters"]], "forward() (mypython.ai.torchprob.distributions.base.distribution method)": [[7, "mypython.ai.torchprob.distributions.base.Distribution.forward"]], "forward() (mypython.ai.torchprob.distributions.bernoulli.bernoulli method)": [[7, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.forward"]], "forward() (mypython.ai.torchprob.distributions.gmm.gmm method)": [[7, "mypython.ai.torchprob.distributions.gmm.GMM.forward"]], "forward() (mypython.ai.torchprob.distributions.normal.normal method)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.forward"]], "func_log() (mypython.ai.torchprob.distributions.bernoulli.bernoulli static method)": [[7, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.func_log"]], "func_log() (mypython.ai.torchprob.distributions.gmm.gmm static method)": [[7, "mypython.ai.torchprob.distributions.gmm.GMM.func_log"]], "func_log() (mypython.ai.torchprob.distributions.normal.normal static method)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.func_log"]], "func_pdf() (mypython.ai.torchprob.distributions.gmm.gmm static method)": [[7, "mypython.ai.torchprob.distributions.gmm.GMM.func_pdf"]], "func_pdf() (mypython.ai.torchprob.distributions.normal.normal static method)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.func_pdf"]], "func_rsample() (mypython.ai.torchprob.distributions.gmm.gmm static method)": [[7, "mypython.ai.torchprob.distributions.gmm.GMM.func_rsample"]], "func_rsample() (mypython.ai.torchprob.distributions.normal.normal static method)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.func_rsample"]], "func_rsample_gumbel() (mypython.ai.torchprob.distributions.gmm.gmm static method)": [[7, "mypython.ai.torchprob.distributions.gmm.GMM.func_rsample_gumbel"]], "given() (mypython.ai.torchprob.distributions.base.distribution method)": [[7, "mypython.ai.torchprob.distributions.base.Distribution.given"]], "given() (mypython.ai.torchprob.distributions.bernoulli.bernoulli method)": [[7, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.given"]], "given() (mypython.ai.torchprob.distributions.gmm.gmm method)": [[7, "mypython.ai.torchprob.distributions.gmm.GMM.given"]], "given() (mypython.ai.torchprob.distributions.normal.normal method)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.given"]], "loc (mypython.ai.torchprob.distributions.base.distribution property)": [[7, "mypython.ai.torchprob.distributions.base.Distribution.loc"]], "loc (mypython.ai.torchprob.distributions.bernoulli.bernoulli property)": [[7, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.loc"]], "loc (mypython.ai.torchprob.distributions.normal.normal property)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.loc"]], "log_prob() (mypython.ai.torchprob.distributions.base.distribution method)": [[7, "mypython.ai.torchprob.distributions.base.Distribution.log_prob"]], "log_prob() (mypython.ai.torchprob.distributions.bernoulli.bernoulli method)": [[7, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.log_prob"]], "log_prob() (mypython.ai.torchprob.distributions.gmm.gmm method)": [[7, "mypython.ai.torchprob.distributions.gmm.GMM.log_prob"]], "log_prob() (mypython.ai.torchprob.distributions.normal.normal method)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.log_prob"]], "mypython.ai.torchprob.distributions": [[7, "module-mypython.ai.torchprob.distributions"]], "mypython.ai.torchprob.distributions.base": [[7, "module-mypython.ai.torchprob.distributions.base"]], "mypython.ai.torchprob.distributions.bernoulli": [[7, "module-mypython.ai.torchprob.distributions.bernoulli"]], "mypython.ai.torchprob.distributions.gmm": [[7, "module-mypython.ai.torchprob.distributions.gmm"]], "mypython.ai.torchprob.distributions.normal": [[7, "module-mypython.ai.torchprob.distributions.normal"]], "rsample() (mypython.ai.torchprob.distributions.base.distribution method)": [[7, "mypython.ai.torchprob.distributions.base.Distribution.rsample"]], "rsample() (mypython.ai.torchprob.distributions.gmm.gmm method)": [[7, "mypython.ai.torchprob.distributions.gmm.GMM.rsample"]], "rsample() (mypython.ai.torchprob.distributions.normal.normal method)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.rsample"]], "sample() (mypython.ai.torchprob.distributions.base.distribution method)": [[7, "mypython.ai.torchprob.distributions.base.Distribution.sample"]], "sample() (mypython.ai.torchprob.distributions.gmm.gmm method)": [[7, "mypython.ai.torchprob.distributions.gmm.GMM.sample"]], "sample() (mypython.ai.torchprob.distributions.normal.normal method)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.sample"]], "scale (mypython.ai.torchprob.distributions.base.distribution property)": [[7, "mypython.ai.torchprob.distributions.base.Distribution.scale"]], "scale (mypython.ai.torchprob.distributions.bernoulli.bernoulli property)": [[7, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.scale"]], "scale (mypython.ai.torchprob.distributions.normal.normal property)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.scale"]], "to_optional_tensor() (in module mypython.ai.torchprob.distributions.base)": [[7, "mypython.ai.torchprob.distributions.base.to_optional_tensor"]], "training (mypython.ai.torchprob.distributions.base.distribution attribute)": [[7, "mypython.ai.torchprob.distributions.base.Distribution.training"]], "training (mypython.ai.torchprob.distributions.bernoulli.bernoulli attribute)": [[7, "mypython.ai.torchprob.distributions.bernoulli.Bernoulli.training"]], "training (mypython.ai.torchprob.distributions.gmm.gmm attribute)": [[7, "mypython.ai.torchprob.distributions.gmm.GMM.training"]], "training (mypython.ai.torchprob.distributions.normal.normal attribute)": [[7, "mypython.ai.torchprob.distributions.normal.Normal.training"]], "correlation() (in module newtonianvae.correlation)": [[8, "newtonianvae.correlation.correlation"]], "main() (in module newtonianvae.show_loss)": [[8, "newtonianvae.show_loss.main"]], "newtonianvae": [[8, "module-newtonianvae"]], "newtonianvae.correlation": [[8, "module-newtonianvae.correlation"]], "newtonianvae.reconstruct": [[8, "module-newtonianvae.reconstruct"]], "newtonianvae.show_loss": [[8, "module-newtonianvae.show_loss"]], "newtonianvae.train": [[8, "module-newtonianvae.train"]], "reconstruction() (in module newtonianvae.reconstruct)": [[8, "newtonianvae.reconstruct.reconstruction"]], "train() (in module newtonianvae.train)": [[8, "newtonianvae.train.train"]], "collector (class in simulation.collect_data)": [[9, "simulation.collect_data.Collector"]], "controlsuiteenv (class in simulation.env)": [[9, "simulation.env.ControlSuiteEnv"]], "controlsuiteenvwrap (class in simulation.env)": [[9, "simulation.env.ControlSuiteEnvWrap"]], "pack (class in simulation.control)": [[9, "simulation.control.Pack"]], "pack (class in simulation.control_pure)": [[9, "simulation.control_pure.Pack"]], "action (simulation.control.pack attribute)": [[9, "simulation.control.Pack.action"]], "action (simulation.control_pure.pack attribute)": [[9, "simulation.control_pure.Pack.action"]], "action_forward() (simulation.env.controlsuiteenvwrap method)": [[9, "simulation.env.ControlSuiteEnvWrap.action_forward"]], "action_per_episode() (simulation.env.controlsuiteenvwrap method)": [[9, "simulation.env.ControlSuiteEnvWrap.action_per_episode"]], "action_point_mass_circle() (simulation.env.controlsuiteenvwrap method)": [[9, "simulation.env.ControlSuiteEnvWrap.action_point_mass_circle"]], "action_random_walk() (simulation.env.controlsuiteenvwrap method)": [[9, "simulation.env.ControlSuiteEnvWrap.action_random_walk"]], "action_range (simulation.env.controlsuiteenv property)": [[9, "simulation.env.ControlSuiteEnv.action_range"]], "action_size (simulation.env.controlsuiteenv property)": [[9, "simulation.env.ControlSuiteEnv.action_size"]], "adjust_camera() (simulation.env.controlsuiteenv method)": [[9, "simulation.env.ControlSuiteEnv.adjust_camera"]], "adjust_camera() (simulation.env.controlsuiteenvwrap method)": [[9, "simulation.env.ControlSuiteEnvWrap.adjust_camera"]], "calculate() (in module simulation.control)": [[9, "simulation.control.calculate"]], "calculate() (in module simulation.control_pure)": [[9, "simulation.control_pure.calculate"]], "close() (simulation.env.controlsuiteenv method)": [[9, "simulation.env.ControlSuiteEnv.close"]], "draw() (in module simulation.control)": [[9, "simulation.control.draw"]], "draw() (in module simulation.control_pure)": [[9, "simulation.control_pure.draw"]], "img2obs() (in module simulation.env)": [[9, "simulation.env.img2obs"]], "main() (in module simulation.collect_data)": [[9, "simulation.collect_data.main"]], "main() (in module simulation.control)": [[9, "simulation.control.main"]], "main() (in module simulation.control_pure)": [[9, "simulation.control_pure.main"]], "obs2img() (in module simulation.env)": [[9, "simulation.env.obs2img"]], "observation (simulation.control.pack attribute)": [[9, "simulation.control.Pack.observation"]], "observation (simulation.control_pure.pack attribute)": [[9, "simulation.control_pure.Pack.observation"]], "observation_size (simulation.env.controlsuiteenv property)": [[9, "simulation.env.ControlSuiteEnv.observation_size"]], "pi (simulation.control.pack attribute)": [[9, "simulation.control.Pack.pi"]], "position (simulation.control.pack attribute)": [[9, "simulation.control.Pack.position"]], "position (simulation.control_pure.pack attribute)": [[9, "simulation.control_pure.Pack.position"]], "position_wrapper() (simulation.env.controlsuiteenvwrap static method)": [[9, "simulation.env.ControlSuiteEnvWrap.position_wrapper"]], "postprocess_observation() (in module simulation.env)": [[9, "simulation.env.postprocess_observation"]], "preprocess_observation_() (in module simulation.env)": [[9, "simulation.env.preprocess_observation_"]], "reacher_default2endeffectorpos() (in module simulation.env)": [[9, "simulation.env.reacher_default2endeffectorpos"]], "reacher_fix_arg_range() (in module simulation.env)": [[9, "simulation.env.reacher_fix_arg_range"]], "reconstruction (simulation.control.pack attribute)": [[9, "simulation.control.Pack.reconstruction"]], "reconstruction (simulation.control_pure.pack attribute)": [[9, "simulation.control_pure.Pack.reconstruction"]], "render() (simulation.env.controlsuiteenv method)": [[9, "simulation.env.ControlSuiteEnv.render"]], "reset() (simulation.env.controlsuiteenv method)": [[9, "simulation.env.ControlSuiteEnv.reset"]], "roll_2d() (in module simulation.env)": [[9, "simulation.env.roll_2d"]], "sample_random_action() (simulation.env.controlsuiteenv method)": [[9, "simulation.env.ControlSuiteEnv.sample_random_action"]], "save() (simulation.collect_data.collector method)": [[9, "simulation.collect_data.Collector.save"]], "simulation": [[9, "module-simulation"]], "simulation.collect_data": [[9, "module-simulation.collect_data"]], "simulation.control": [[9, "module-simulation.control"]], "simulation.control_pure": [[9, "module-simulation.control_pure"]], "simulation.env": [[9, "module-simulation.env"]], "step() (simulation.env.controlsuiteenv method)": [[9, "simulation.env.ControlSuiteEnv.step"]], "step() (simulation.env.controlsuiteenvwrap method)": [[9, "simulation.env.ControlSuiteEnvWrap.step"]], "x (simulation.control.pack attribute)": [[9, "simulation.control.Pack.x"]], "x (simulation.control_pure.pack attribute)": [[9, "simulation.control_pure.Pack.x"]], "zeros_action() (simulation.env.controlsuiteenv method)": [[9, "simulation.env.ControlSuiteEnv.zeros_action"]], "third": [[10, "module-third"]], "read_model() (in module third.dm_control)": [[11, "third.dm_control.read_model"]], "third.dm_control": [[11, "module-third.dm_control"]], "physics (class in third.dm_control.suite.point_mass)": [[12, "third.dm_control.suite.point_mass.Physics"]], "physics (class in third.dm_control.suite.reacher2d)": [[12, "third.dm_control.suite.reacher2d.Physics"]], "pointmass (class in third.dm_control.suite.point_mass)": [[12, "third.dm_control.suite.point_mass.PointMass"]], "reacher (class in third.dm_control.suite.reacher2d)": [[12, "third.dm_control.suite.reacher2d.Reacher"]], "build_environment() (in module third.dm_control.suite)": [[12, "third.dm_control.suite.build_environment"]], "easy() (in module third.dm_control.suite.point_mass)": [[12, "third.dm_control.suite.point_mass.easy"]], "easy() (in module third.dm_control.suite.reacher2d)": [[12, "third.dm_control.suite.reacher2d.easy"]], "finger_to_target() (third.dm_control.suite.reacher2d.physics method)": [[12, "third.dm_control.suite.reacher2d.Physics.finger_to_target"]], "finger_to_target_dist() (third.dm_control.suite.reacher2d.physics method)": [[12, "third.dm_control.suite.reacher2d.Physics.finger_to_target_dist"]], "get_model_and_assets() (in module third.dm_control.suite.point_mass)": [[12, "third.dm_control.suite.point_mass.get_model_and_assets"]], "get_model_and_assets() (in module third.dm_control.suite.reacher2d)": [[12, "third.dm_control.suite.reacher2d.get_model_and_assets"]], "get_observation() (third.dm_control.suite.point_mass.pointmass method)": [[12, "third.dm_control.suite.point_mass.PointMass.get_observation"]], "get_observation() (third.dm_control.suite.reacher2d.reacher method)": [[12, "third.dm_control.suite.reacher2d.Reacher.get_observation"]], "get_reward() (third.dm_control.suite.point_mass.pointmass method)": [[12, "third.dm_control.suite.point_mass.PointMass.get_reward"]], "get_reward() (third.dm_control.suite.reacher2d.reacher method)": [[12, "third.dm_control.suite.reacher2d.Reacher.get_reward"]], "hard() (in module third.dm_control.suite.point_mass)": [[12, "third.dm_control.suite.point_mass.hard"]], "hard() (in module third.dm_control.suite.reacher2d)": [[12, "third.dm_control.suite.reacher2d.hard"]], "initialize_episode() (third.dm_control.suite.point_mass.pointmass method)": [[12, "third.dm_control.suite.point_mass.PointMass.initialize_episode"]], "initialize_episode() (third.dm_control.suite.reacher2d.reacher method)": [[12, "third.dm_control.suite.reacher2d.Reacher.initialize_episode"]], "load() (in module third.dm_control.suite)": [[12, "third.dm_control.suite.load"]], "mass_to_target() (third.dm_control.suite.point_mass.physics method)": [[12, "third.dm_control.suite.point_mass.Physics.mass_to_target"]], "mass_to_target_dist() (third.dm_control.suite.point_mass.physics method)": [[12, "third.dm_control.suite.point_mass.Physics.mass_to_target_dist"]], "third.dm_control.suite": [[12, "module-third.dm_control.suite"]], "third.dm_control.suite.point_mass": [[12, "module-third.dm_control.suite.point_mass"]], "third.dm_control.suite.reacher2d": [[12, "module-third.dm_control.suite.reacher2d"]], "dump() (in module third.json5)": [[13, "third.json5.dump"]], "dump() (in module third.json5.lib)": [[13, "third.json5.lib.dump"]], "dumps() (in module third.json5)": [[13, "third.json5.dumps"]], "dumps() (in module third.json5.lib)": [[13, "third.json5.lib.dumps"]], "load() (in module third.json5)": [[13, "third.json5.load"]], "load() (in module third.json5.lib)": [[13, "third.json5.lib.load"]], "loads() (in module third.json5)": [[13, "third.json5.loads"]], "loads() (in module third.json5.lib)": [[13, "third.json5.lib.loads"]], "third.json5": [[13, "module-third.json5"]], "third.json5.lib": [[13, "module-third.json5.lib"]], "eval (class in tool.paramsmanager)": [[14, "tool.paramsmanager.Eval"]], "params (class in tool.paramsmanager)": [[14, "tool.paramsmanager.Params"]], "paths (class in tool.paramsmanager)": [[14, "tool.paramsmanager.Paths"]], "preferences (class in tool.util)": [[14, "tool.util.Preferences"]], "recoderbase (class in tool.util)": [[14, "tool.util.RecoderBase"]], "train (class in tool.paramsmanager)": [[14, "tool.paramsmanager.Train"]], "add_list() (tool.util.recoderbase method)": [[14, "tool.util.RecoderBase.add_list"]], "append() (tool.util.recoderbase method)": [[14, "tool.util.RecoderBase.append"]], "backup() (in module tool.util)": [[14, "tool.util.backup"]], "batch_size (tool.paramsmanager.train attribute)": [[14, "tool.paramsmanager.Train.batch_size"]], "check_value (tool.paramsmanager.train attribute)": [[14, "tool.paramsmanager.Train.check_value"]], "creator() (in module tool.util)": [[14, "tool.util.creator"]], "cuda() (in module tool.checker)": [[14, "tool.checker.cuda"]], "data_dir (tool.paramsmanager.paths attribute)": [[14, "tool.paramsmanager.Paths.data_dir"]], "data_start (tool.paramsmanager.eval attribute)": [[14, "tool.paramsmanager.Eval.data_start"]], "data_start (tool.paramsmanager.train attribute)": [[14, "tool.paramsmanager.Train.data_start"]], "data_stop (tool.paramsmanager.eval attribute)": [[14, "tool.paramsmanager.Eval.data_stop"]], "data_stop (tool.paramsmanager.train attribute)": [[14, "tool.paramsmanager.Train.data_stop"]], "default_to_json() (in module tool.paramsmanager)": [[14, "tool.paramsmanager.default_to_json"]], "device (tool.paramsmanager.eval attribute)": [[14, "tool.paramsmanager.Eval.device"]], "device (tool.paramsmanager.train attribute)": [[14, "tool.paramsmanager.Train.device"]], "dtype (tool.paramsmanager.eval attribute)": [[14, "tool.paramsmanager.Eval.dtype"]], "dtype (tool.paramsmanager.train attribute)": [[14, "tool.paramsmanager.Train.dtype"]], "dtype_device() (in module tool.util)": [[14, "tool.util.dtype_device"]], "epochs (tool.paramsmanager.train attribute)": [[14, "tool.paramsmanager.Train.epochs"]], "get() (tool.util.preferences static method)": [[14, "tool.util.Preferences.get"]], "get_data_path() (in module tool.util)": [[14, "tool.util.get_data_path"]], "grad_clip_norm (tool.paramsmanager.train attribute)": [[14, "tool.paramsmanager.Train.grad_clip_norm"]], "is_same_data() (in module tool.checker)": [[14, "tool.checker.is_same_data"]], "kl_annealing (tool.paramsmanager.train attribute)": [[14, "tool.paramsmanager.Train.kl_annealing"]], "large_episodes() (in module tool.checker)": [[14, "tool.checker.large_episodes"]], "learning_rate (tool.paramsmanager.train attribute)": [[14, "tool.paramsmanager.Train.learning_rate"]], "load() (in module tool.util)": [[14, "tool.util.load"]], "load_direct() (in module tool.util)": [[14, "tool.util.load_direct"]], "max_time_length (tool.paramsmanager.train attribute)": [[14, "tool.paramsmanager.Train.max_time_length"]], "priority() (in module tool.util)": [[14, "tool.util.priority"]], "put() (tool.util.preferences static method)": [[14, "tool.util.Preferences.put"]], "remove() (tool.util.preferences static method)": [[14, "tool.util.Preferences.remove"]], "results_dir (tool.paramsmanager.paths attribute)": [[14, "tool.paramsmanager.Paths.results_dir"]], "resume_weight (tool.paramsmanager.paths attribute)": [[14, "tool.paramsmanager.Paths.resume_weight"]], "save_per_epoch (tool.paramsmanager.train attribute)": [[14, "tool.paramsmanager.Train.save_per_epoch"]], "save_simenv() (tool.paramsmanager.params method)": [[14, "tool.paramsmanager.Params.save_simenv"]], "saves_dir (tool.paramsmanager.paths attribute)": [[14, "tool.paramsmanager.Paths.saves_dir"]], "seed (tool.paramsmanager.train attribute)": [[14, "tool.paramsmanager.Train.seed"]], "select_date() (in module tool.util)": [[14, "tool.util.select_date"]], "select_weight() (in module tool.util)": [[14, "tool.util.select_weight"]], "to_whole_np() (tool.util.recoderbase method)": [[14, "tool.util.RecoderBase.to_whole_np"]], "tool": [[14, "module-tool"]], "tool.checker": [[14, "module-tool.checker"]], "tool.paramsmanager": [[14, "module-tool.paramsmanager"]], "tool.util": [[14, "module-tool.util"]], "used_nvae_weight (tool.paramsmanager.paths attribute)": [[14, "tool.paramsmanager.Paths.used_nvae_weight"]], "label (class in view.label)": [[15, "view.label.Label"]], "tensorboardvisualhandler (class in view.visualhandler)": [[15, "view.visualhandler.TensorBoardVisualHandler"]], "visdomvisualhandler (class in view.visualhandler)": [[15, "view.visualhandler.VisdomVisualHandler"]], "visualhandlerbase (class in view.visualhandlerbase)": [[15, "view.visualhandlerbase.VisualHandlerBase"]], "apply() (in module view.plot_config)": [[15, "view.plot_config.apply"]], "call_end() (view.visualhandlerbase.visualhandlerbase method)": [[15, "view.visualhandlerbase.VisualHandlerBase.call_end"]], "call_end_init() (view.visualhandlerbase.visualhandlerbase method)": [[15, "view.visualhandlerbase.VisualHandlerBase.call_end_init"]], "is_running (view.visualhandlerbase.visualhandlerbase property)": [[15, "view.visualhandlerbase.VisualHandlerBase.is_running"]], "main() (in module view.show_data)": [[15, "view.show_data.main"]], "plot() (view.visualhandler.tensorboardvisualhandler method)": [[15, "view.visualhandler.TensorBoardVisualHandler.plot"]], "plot() (view.visualhandler.visdomvisualhandler method)": [[15, "view.visualhandler.VisdomVisualHandler.plot"]], "plot() (view.visualhandlerbase.visualhandlerbase method)": [[15, "view.visualhandlerbase.VisualHandlerBase.plot"]], "set_axes_l0l1() (view.label.label method)": [[15, "view.label.Label.set_axes_L0L1"]], "set_axes_p0l0() (view.label.label method)": [[15, "view.label.Label.set_axes_P0L0"]], "set_axes_p0l1() (view.label.label method)": [[15, "view.label.Label.set_axes_P0L1"]], "set_axes_p1l0() (view.label.label method)": [[15, "view.label.Label.set_axes_P1L0"]], "set_axes_p1l1() (view.label.label method)": [[15, "view.label.Label.set_axes_P1L1"]], "view": [[15, "module-view"]], "view.label": [[15, "module-view.label"]], "view.plot_config": [[15, "module-view.plot_config"]], "view.show_data": [[15, "module-view.show_data"]], "view.visualhandler": [[15, "module-view.visualhandler"]], "view.visualhandlerbase": [[15, "module-view.visualhandlerbase"]], "wait_init() (view.visualhandlerbase.visualhandlerbase method)": [[15, "view.visualhandlerbase.VisualHandlerBase.wait_init"]]}})