{
  model: "NewtonianVAEDerivationCell",

  NewtonianVAECell: {
    dim_x: 2,
    transition_std: 0.25,

    // Use KL(q(x|I)‖N (0, 1))
    // paper: we added an additional regularization term to the latent space, KL(q(x|I)‖N (0, 1))
    regularization: false,
  },

  NewtonianVAEDerivationCell: {
    dim_x: 2,
    transition_std: 0.25,
    regularization: false,
    dim_xhat: 32,
    dim_pxhat_middle: 32,
  },

  NewtonianVAEJIACell: {

  },

  train: {
    device: "cuda", // "cpu", "cuda"
    dtype: "float32", // "float16", "float32"

    /*
      Paper:
      
      To train the models, we generate 1000 random se-
      quences with 100 time-steps for the point mass and
      reacher-2D systems, and 30 time-steps for the fetch-3D
      system.

      All
      models were trained using Adam [28] with a learning
      rate of 3 · 10−4 and batch size 1 (a single sequence per
      batch) for 300 epochs.
    */

    // Use data as episode data: index from data_start to data_stop-1
    data_start: 0,
    data_stop: 1000,

    /*
      1 is very slow...

      If you get torch.cuda.OutOfMemoryError, make it smaller.
    */
    batch_size: 50,

    grad_clip_norm: null, // Number type or null (None)
    learning_rate: 3e-4,

    epochs: 300,
    save_per_epoch: 50,

    // 今のとこは reacher2d.max_episode_length 同じ値にする。
    max_time_length: 100,

    // 保存しているモデルを読み込んで学習を再開できる
    resume: false, // こいつはargparseのほうがええなぁ
  },
}
