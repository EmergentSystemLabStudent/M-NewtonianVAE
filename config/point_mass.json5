{
  model: "NewtonianVAE",

  NewtonianVAE: {
    dim_x: 2,
    camera_name: "top",

    velocity: {
      fix_abc: [0, 0, 1],
    },

    transition: {
      std: 0.001,
    },

    encoder: {
      model: "VanillaEncoder",
      model_kwargs: {
        dim_output: 1024,
      },
    },

    decoder: {
      model: "SpatialBroadcastDecoder",
    },
  },

  train: {
    path: "data/point_mass/episodes/{0..999}.*",
    batch_size: 20,
    epochs: 400,
    learning_rate: 3e-4,
    max_time_length: 100,
    device: "cuda",
    dtype: "float32",
    save_per_epoch: 50,
    check_value: false,
  },

  valid: {
    path: "data/point_mass/episodes/{1000..1199}.*",
    batch_size: 20,
  },

  test: {
    path: "data/point_mass/episodes/{1200..1399}.*",
    device: "cuda",
    dtype: "float32",
  },

  ControlSuiteEnvWrap: {
    env: "point_mass-easy",
    seed: 1,
    max_episode_length: 100,
    action_repeat: 1,
    bit_depth: 8,
    action_type: "random_walk",
    imgsize: [64, 64],
    task_settings: {
      // target_size: 0.03,
      target_size: 0.015,
      target_position: "default",
      // target_position: "random",
    },
  },

  path: {
    saves_dir: "save/point_mass/saves",
    results_dir: "save/point_mass/results",
    hidden_conf: "config/_hidden_conf.json5",
  },

  others: {
    /*
      Paper:
      In the point mass experiments
      we found it useful to anneal the KL term in the ELBO,
      starting with a value of 0.001 and increasing it linearly
      to 1.0 between epochs 30 and 60.
    */
    beta_schedule: { linear1: [30, 60, 0.001, 1] },
  },
}
